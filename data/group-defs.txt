list.join
vm_obj_kind
heq
nat.succ
nat.has_one
semigroup.mk
and.elim_left
default.sizeof
ordering.decidable_eq._proof_5
and.dcases_on
exists_unique_congr
nat.zero_le
nat.less_than_or_equal
eq.subst
psum.sizeof._main
nat.has_zero
bit0
bool.tt
has_add.add
list.append._main
nat.no_confusion
list
default.sizeof._main
vm_obj_kind.name
left_comm
function.left_inverse
has_map.map
has_zero.mk
has_mul
Exists.intro
vm_obj_kind.simple
add_semigroup.sizeof
sizeof
vm_obj_kind.environment
has_map.mk
has_one
inhabited
iff.mp
list.cases_on
plift.up
plift.up_down
nat.less_than_or_equal.refl
nat.zero_lt_succ
has_le
nat.no_confusion_type
coe_base_aux
fin.mk
nat
nat.cases_on
list.mem._main.equations._eqn_2
vm_obj_kind.format
punit
has_zero.zero
occurrences.all
ordering.gt
nat.pred_le_pred
has_sizeof.sizeof
subsingleton_info.mk.inj_arrow
has_lt.mk
quot
rfl
iff.rfl
decidable.rec_on
semigroup
monoid.one
vm_obj_kind.expr
subsingleton_info.mk.inj
has_sizeof
false
has_add
occurrences.neg
and
occurrences
occurrences.inhabited
has_append.append
psum.inr
subsingleton_info.no_confusion
add_semigroup.has_sizeof_inst
has_coe.mk
vm_obj_kind.declaration
and.elim_right
vm_obj_kind.options
subsingleton_info.cases_on
pprod.mk
exists.elim
eq.refl
list.below
iff.refl
unification_hint.mk
vm_obj_kind.mpz
list.join._main
or
psum.cases_on
unification_constraint.mk
monoid.mk
ordering.no_confusion_type
has_coe
vm_obj_kind.constructor
iff.intro
semigroup.to_has_mul
list.bind
has_lt.lt
list.brec_on
monad.has_monad_lift.mk
heq.refl
nat.pred._main
nat.le_refl
nat.below
ordering.no_confusion
has_map
vm_obj_kind.other
nat.pred
vm_obj_kind.closure
plift
has_append
iff
nat.less_than_or_equal.rec_on
function.const
subsingleton_info.no_confusion_type
associative
subsingleton_info.mk
has_lt
vm_obj_kind.level
has_append.mk
ordering.lt
commutative
has_mul.mk
bit1
psum.inl
list.enum_from._main
exists_congr
or.inr
subsingleton_info
vm_obj_kind.no_confusion
nat.has_lt
eq.symm
psum.sizeof
nat.add
bool.ff
decidable.is_false
quot.lift
pprod.fst
vm_obj_kind_dec_eq._proof_30
inhabited.mk
coe_b
list.mem._main
has_mul.mul
unification_hint
quot.induction_on
punit.star
fin
has_le.mk
has_coe_t_aux.mk
monoid
vm_obj_kind.cases_on
and.imp
has_one.one
prod
vm_obj_kind.native_closure
nat.brec_on
has_zero
ordering.cases_on
nat.succ_le_succ
function.comp
left_commutative
eq
dite
nat.has_le
coe_base_aux.equations._eqn_1
and_congr
vm_obj_kind.no_confusion_type
has_add.mk
unification_constraint
decidable
nat.decidable_le._match_1
ordering
list.map
list.nil
iff.mpr
prod.mk
ordering.eq
or.inl
not
has_coe_t_aux
semigroup.mul
list.map._main
exists_unique
has_sizeof.mk
add_semigroup.mk
decidable.is_true
default_has_sizeof
vm_obj_kind.tactic_state
has_le.le
nat.add._main
nat.has_add
monad.has_monad_lift
has_one.mk
has_coe.coe
exists_imp_exists
nat.less_than_or_equal.step
imp_congr
plift.cases_on
nat.le_of_succ_le_succ
nat.zero
list.has_append
occurrences.pos
pprod
bool
add_semigroup
monad.has_monad_lift.sizeof
Exists
eq.trans
plift.down
quot.ind
decidable.cases_on
and.intro
list.cons
psum
forall_congr
list.append
function.has_left_inverse
nat.lt
quot.mk
has_map.map_const