mod: "DefMod(Definition(char_sz,Vector(),@nat,@nat.succ
  (@bit1.{0} @nat @nat.has_one @nat.has_add
    (@bit1.{0} @nat @nat.has_one @nat.has_add
      (@bit1.{0} @nat @nat.has_one @nat.has_add
        (@bit1.{0} @nat @nat.has_one @nat.has_add
          (@bit1.{0} @nat @nat.has_one @nat.has_add
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@has_one.one.{0} @nat @nat.has_one)))))))),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(char,Vector(),Type 0,@fin @char_sz,0))"
err: "provingground.interface.UnParsedException: could not parse expression @char_sz"

mod: "IndMod(InductiveType(_private.608265362.string_imp,Vector(),Type 0),0,Vector((_private.608265362.string_imp.mk,∀ (data : @list.{0} @char), @_private.608265362.string_imp)))"
err: "provingground.interface.UnParsedException: could not parse expression @char"

mod: "DefMod(Definition(_private.608265362.string_imp.rec_on,Vector(Param(l)),∀ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
C n,λ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
@_private.608265362.string_imp.rec.{l} C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.608265362.string_imp"

mod: "DefMod(Definition(string,Vector(),Type 0,@_private.608265362.string_imp,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.608265362.string_imp"

mod: "DefMod(Definition(unsigned_sz,Vector(),@nat,@nat.succ
  (@bit1.{0} @nat @nat.has_one @nat.has_add
    (@bit1.{0} @nat @nat.has_one @nat.has_add
      (@bit1.{0} @nat @nat.has_one @nat.has_add
        (@bit1.{0} @nat @nat.has_one @nat.has_add
          (@bit1.{0} @nat @nat.has_one @nat.has_add
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@bit1.{0} @nat
                                                          @nat.has_one
                                                          @nat.has_add
                                                          (@bit1.{0} @nat
                                                            @nat.has_one
                                                            @nat.has_add
                                                            (@bit1.{0} @nat
                                                              @nat.has_one
                                                              @nat.has_add
                                                              (@bit1.{0} @nat
                                                                @nat.has_one
                                                                @nat.has_add
                                                                (@has_one.one.{0}
                                                                  @nat
                                                                  @nat.has_one)))))))))))))))))))))))))))))))),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(unsigned,Vector(),Type 0,@fin @unsigned_sz,0))"
err: "provingground.interface.UnParsedException: could not parse expression @unsigned_sz"

mod: "IndMod(InductiveType(name,Vector(),Type 0),0,Vector((name.anonymous,@name), (name.mk_string,∀ (a : @string) (a_0 : @name), @name), (name.mk_numeral,∀ (a : @unsigned) (a_0 : @name), @name)))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(auto_param,Vector(Param(u)),∀ (α : Sort u) (tac_name : @name), Sort u,λ (α : Sort u) (tac_name : @name), α,0))"
err: "provingground.interface.UnParsedException: could not parse expression @name"

mod: "DefMod(Definition(_private.608265362.string_imp.cases_on,Vector(Param(l)),∀ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
C n,λ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
@_private.608265362.string_imp.rec.{l} C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.608265362.string_imp"

mod: "DefMod(Definition(string.str._main,Vector(),∀ (a : @string) (a_0 : @char), @string,λ (a : @string) (a_0 : @char),
@_private.608265362.string_imp.cases_on.{1} (λ (a_1 : @string), @string) a
  (λ (data : @list.{0} @char),
  @_private.608265362.string_imp.mk (@list.cons.{0} @char a_0 data)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(string.str,Vector(),∀ (a : @string) (a_0 : @char), @string,@string.str._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string.str._main"

mod: "DefMod(Definition(string.empty,Vector(),@string,@_private.608265362.string_imp.mk (@list.nil.{0} @char),0))"
err: "provingground.interface.UnParsedException: could not parse expression @char"

mod: "DefMod(Definition(nat.less_than_or_equal.dcases_on,Vector(),∀ {a : @nat} {C : (∀ (a_1 : @nat) (h : @nat.less_than_or_equal a a_1), Prop)}
  {a_0 : @nat} (n : @nat.less_than_or_equal a a_0)
  (e_1 : C a (@nat.less_than_or_equal.refl a))
  (e_2 :
    (∀ {b : @nat} (a_1 : @nat.less_than_or_equal a b),
    C (@nat.succ b) (@nat.less_than_or_equal.step a b a_1))),
C a_0 n,λ {a : @nat} {C : (∀ (a_1 : @nat) (h : @nat.less_than_or_equal a a_1), Prop)}
  {a_0 : @nat} (n : @nat.less_than_or_equal a a_0)
  (e_1 : C a (@nat.less_than_or_equal.refl a))
  (e_2 :
    (∀ {b : @nat} (a_1 : @nat.less_than_or_equal a b),
    C (@nat.succ b) (@nat.less_than_or_equal.step a b a_1))),
@nat.less_than_or_equal.rec a
  (λ (a_1 : @nat), ∀ (h : @nat.less_than_or_equal a a_1), C a_1 h)
  (λ (a_1 : @nat.less_than_or_equal a a), e_1)
  (λ {b : @nat} (a_1 : @nat.less_than_or_equal a b)
    (ih_1 : (∀ (h : @nat.less_than_or_equal a b), C b h))
    (a_2 : @nat.less_than_or_equal a (@nat.succ b)),
  e_2 b a_1) a_0 n n,0))"
err: "provingground.interface.RecFoldException: Failure to fold recursive Function"

mod: "DefMod(Definition(nat.not_succ_le_zero,Vector(),∀ (n : @nat)
  (a :
    @has_le.le.{0} @nat @nat.has_le (@nat.succ n)
      (@has_zero.zero.{0} @nat @nat.has_zero)),
@false,λ (n : @nat)
  (a :
    @has_le.le.{0} @nat @nat.has_le (@nat.succ n)
      (@has_zero.zero.{0} @nat @nat.has_zero)),
@nat.less_than_or_equal.dcases_on (@nat.succ n)
  (λ (t_1 : @nat) (a_1 : @nat.less_than_or_equal (@nat.succ n) t_1),
  ∀ (H_1 : @eq.{1} @nat (@has_zero.zero.{0} @nat @nat.has_zero) t_1)
    (H_2 :
      @heq.{0}
        (@has_le.le.{0} @nat @nat.has_le (@nat.succ n)
          (@has_zero.zero.{0} @nat @nat.has_zero)) a
        (@nat.less_than_or_equal (@nat.succ n) t_1) a_1),
  @false) (@has_zero.zero.{0} @nat @nat.has_zero) a
  (λ (a_0 : @eq.{1} @nat @nat.zero (@nat.succ n)),
  @nat.no_confusion.{0}
    (∀ (H_2 :
        @heq.{0}
          (@has_le.le.{0} @nat @nat.has_le (@nat.succ n)
            (@has_zero.zero.{0} @nat @nat.has_zero)) a
          (@nat.less_than_or_equal (@nat.succ n) (@nat.succ n))
          (@nat.less_than_or_equal.refl (@nat.succ n))),
    @false) @nat.zero (@nat.succ n) a_0)
  (λ {b : @nat} (a_1 : @nat.less_than_or_equal (@nat.succ n) b)
    (a_0 : @eq.{1} @nat @nat.zero (@nat.succ b)),
  @nat.no_confusion.{0}
    (∀ (H_2 :
        @heq.{0}
          (@has_le.le.{0} @nat @nat.has_le (@nat.succ n)
            (@has_zero.zero.{0} @nat @nat.has_zero)) a
          (@nat.less_than_or_equal (@nat.succ n) (@nat.succ b))
          (@nat.less_than_or_equal.step (@nat.succ n) b a_1)),
    @false) @nat.zero (@nat.succ b) a_0)
  (@eq.refl.{1} @nat (@has_zero.zero.{0} @nat @nat.has_zero))
  (@heq.refl.{0}
    (@has_le.le.{0} @nat @nat.has_le (@nat.succ n)
      (@has_zero.zero.{0} @nat @nat.has_zero)) a),0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.less_than_or_equal.dcases_on"

mod: "DefMod(Definition(nat.decidable_le._main,Vector(),∀ (a b : @nat), @decidable (@has_le.le.{0} @nat @nat.has_le a b),λ (a b : @nat),
@nat.brec_on.{1}
  (λ (a_0 : @nat),
  ∀ (b_0 : @nat),
  @decidable (@has_le.le.{0} @nat @nat.has_le a_0 b_0)) a
  (λ (a_0 : @nat)
    (F :
      @nat.below.{1}
        (λ (a_1 : @nat),
        ∀ (b_1 : @nat),
        @decidable (@has_le.le.{0} @nat @nat.has_le a_1 b_1)) a_0) (b_0 : @nat),
  (λ (a_1 b_1 : @nat)
      (F_0 :
        @nat.below.{1}
          (λ (a_2 : @nat),
          ∀ (b_2 : @nat),
          @decidable (@has_le.le.{0} @nat @nat.has_le a_2 b_2)) a_1),
    @nat.cases_on.{1}
      (λ (a_2 : @nat),
      ∀ (F_1 :
          @nat.below.{1}
            (λ (a_3 : @nat),
            ∀ (b_2 : @nat),
            @decidable (@has_le.le.{0} @nat @nat.has_le a_3 b_2)) a_2),
      @decidable (@has_le.le.{0} @nat @nat.has_le a_2 b_1)) a_1
      (λ (F_1 :
          @nat.below.{1}
            (λ (a_2 : @nat),
            ∀ (b_2 : @nat),
            @decidable (@has_le.le.{0} @nat @nat.has_le a_2 b_2)) @nat.zero),
      @decidable.is_true
        (@has_le.le.{0} @nat @nat.has_le (@has_zero.zero.{0} @nat @nat.has_zero)
          b_1) (@nat.zero_le b_1))
      (λ (a_2 : @nat)
        (F_1 :
          @nat.below.{1}
            (λ (a_3 : @nat),
            ∀ (b_2 : @nat),
            @decidable (@has_le.le.{0} @nat @nat.has_le a_3 b_2))
            (@nat.succ a_2)),
      @nat.cases_on.{1}
        (λ (b_2 : @nat),
        @decidable (@has_le.le.{0} @nat @nat.has_le (@nat.succ a_2) b_2)) b_1
        (@decidable.is_false
          (@has_le.le.{0} @nat @nat.has_le
            (@has_add.add.{0} @nat @nat.has_add a_2
              (@has_one.one.{0} @nat @nat.has_one))
            (@has_zero.zero.{0} @nat @nat.has_zero))
          (@nat.not_succ_le_zero a_2))
        (λ (a_1_0 : @nat),
        @nat.decidable_le._match_1 a_2 a_1_0
          (@pprod.fst.{1 1}
            ((λ (a_3 : @nat),
              ∀ (b_2 : @nat),
              @decidable (@has_le.le.{0} @nat @nat.has_le a_3 b_2))
              (@pprod.fst.{1 1}
                ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                  (λ (a_3 : @nat) (ih_1 : Type 0),
                  @pprod.{1 1}
                    (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                      ih_1) @punit.{1}) @nat.zero)
                (@pprod.fst.{1 1}
                  (@pprod.{1 1}
                    ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                    (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                      (λ (a_3 : @nat) (ih_1 : Type 0),
                      @pprod.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                        @punit.{1}) @nat.zero)) @punit.{1}
                  (@pprod.mk.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                      (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                        @nat.zero)) @punit.{1}
                    (@nat.rec.{1}
                      (λ (n : @nat),
                      @pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                        (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                          n))
                      (@pprod.mk.{1 1}
                        ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                        @punit.{1}
                        ((λ (a_3 : @nat)
                            (F_2 :
                              @nat.below.{1}
                                (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                            (a_4 : @nat),
                          (λ (a_5 a_6 : @nat)
                              (F_3 :
                                @nat.below.{1}
                                  (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_6),
                            @nat.cases_on.{1}
                              (λ (a_7 : @nat),
                              ∀ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                              @nat) a_6
                              (λ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                    @nat.zero),
                              a_5)
                              (λ (a_1_1 : @nat)
                                (F_4 :
                                  @nat.below.{1}
                                    (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                    (@nat.succ a_1_1)),
                              @nat.succ
                                (@pprod.fst.{1 1}
                                  ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_1_1)
                                  (@nat.rec.{2} (λ (n : @nat), Type 0)
                                    @punit.{1}
                                    (λ (a_7 : @nat) (ih_1 : Type 0),
                                    @pprod.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                          a_7) ih_1) @punit.{1}) a_1_1)
                                  (@pprod.fst.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_7 : @nat) (ih_1 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_8 : @nat),
                                              ∀ (a_9 : @nat),
                                              @nat) a_7) ih_1) @punit.{1})
                                        a_1_1)) @punit.{1} F_4) a_5)) F_3) a_4
                            a_3 F_2) @nat.zero @punit.star.{1}) @punit.star.{1})
                      (λ (a_3 : @nat)
                        (ih_1 :
                          @pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)),
                      @pprod.mk.{1 1}
                        ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) (@nat.succ a_3))
                        (@pprod.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                          @punit.{1})
                        ((λ (a_4 : @nat)
                            (F_2 :
                              @nat.below.{1}
                                (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                            (a_5 : @nat),
                          (λ (a_6 a_7 : @nat)
                              (F_3 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                            @nat.cases_on.{1}
                              (λ (a_8 : @nat),
                              ∀ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                    a_8),
                              @nat) a_7
                              (λ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                    @nat.zero),
                              a_6)
                              (λ (a_1_1 : @nat)
                                (F_4 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                    (@nat.succ a_1_1)),
                              @nat.succ
                                (@pprod.fst.{1 1}
                                  ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_1_1)
                                  (@nat.rec.{2} (λ (n : @nat), Type 0)
                                    @punit.{1}
                                    (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                    @pprod.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                          a_8) ih_1_0) @punit.{1}) a_1_1)
                                  (@pprod.fst.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_9 : @nat),
                                              ∀ (a_10 : @nat),
                                              @nat) a_8) ih_1_0) @punit.{1})
                                        a_1_1)) @punit.{1} F_4) a_6)) F_3) a_5
                            a_4 F_2) (@nat.succ a_3)
                          (@pprod.mk.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                            @punit.{1} ih_1 @punit.star.{1}))
                        (@pprod.mk.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                          @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                    @punit.star.{1})) a_2))
            (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
              (λ (a_3 : @nat) (ih_1 : Type 0),
              @pprod.{1 1}
                (@pprod.{1 1}
                  ((λ (a_4 : @nat),
                    ∀ (b_2 : @nat),
                    @decidable (@has_le.le.{0} @nat @nat.has_le a_4 b_2)) a_3)
                  ih_1) @punit.{1})
              (@pprod.fst.{1 1}
                ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                  (λ (a_3 : @nat) (ih_1 : Type 0),
                  @pprod.{1 1}
                    (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                      ih_1) @punit.{1}) @nat.zero)
                (@pprod.fst.{1 1}
                  (@pprod.{1 1}
                    ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                    (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                      (λ (a_3 : @nat) (ih_1 : Type 0),
                      @pprod.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                        @punit.{1}) @nat.zero)) @punit.{1}
                  (@pprod.mk.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                      (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                        @nat.zero)) @punit.{1}
                    (@nat.rec.{1}
                      (λ (n : @nat),
                      @pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                        (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                          n))
                      (@pprod.mk.{1 1}
                        ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                        @punit.{1}
                        ((λ (a_3 : @nat)
                            (F_2 :
                              @nat.below.{1}
                                (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                            (a_4 : @nat),
                          (λ (a_5 a_6 : @nat)
                              (F_3 :
                                @nat.below.{1}
                                  (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_6),
                            @nat.cases_on.{1}
                              (λ (a_7 : @nat),
                              ∀ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                              @nat) a_6
                              (λ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                    @nat.zero),
                              a_5)
                              (λ (a_1_1 : @nat)
                                (F_4 :
                                  @nat.below.{1}
                                    (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                    (@nat.succ a_1_1)),
                              @nat.succ
                                (@pprod.fst.{1 1}
                                  ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_1_1)
                                  (@nat.rec.{2} (λ (n : @nat), Type 0)
                                    @punit.{1}
                                    (λ (a_7 : @nat) (ih_1 : Type 0),
                                    @pprod.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                          a_7) ih_1) @punit.{1}) a_1_1)
                                  (@pprod.fst.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_7 : @nat) (ih_1 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_8 : @nat),
                                              ∀ (a_9 : @nat),
                                              @nat) a_7) ih_1) @punit.{1})
                                        a_1_1)) @punit.{1} F_4) a_5)) F_3) a_4
                            a_3 F_2) @nat.zero @punit.star.{1}) @punit.star.{1})
                      (λ (a_3 : @nat)
                        (ih_1 :
                          @pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)),
                      @pprod.mk.{1 1}
                        ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) (@nat.succ a_3))
                        (@pprod.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                          @punit.{1})
                        ((λ (a_4 : @nat)
                            (F_2 :
                              @nat.below.{1}
                                (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                            (a_5 : @nat),
                          (λ (a_6 a_7 : @nat)
                              (F_3 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                            @nat.cases_on.{1}
                              (λ (a_8 : @nat),
                              ∀ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                    a_8),
                              @nat) a_7
                              (λ (F_4 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                    @nat.zero),
                              a_6)
                              (λ (a_1_1 : @nat)
                                (F_4 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                    (@nat.succ a_1_1)),
                              @nat.succ
                                (@pprod.fst.{1 1}
                                  ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_1_1)
                                  (@nat.rec.{2} (λ (n : @nat), Type 0)
                                    @punit.{1}
                                    (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                    @pprod.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                          a_8) ih_1_0) @punit.{1}) a_1_1)
                                  (@pprod.fst.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_9 : @nat),
                                              ∀ (a_10 : @nat),
                                              @nat) a_8) ih_1_0) @punit.{1})
                                        a_1_1)) @punit.{1} F_4) a_6)) F_3) a_5
                            a_4 F_2) (@nat.succ a_3)
                          (@pprod.mk.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                            @punit.{1} ih_1 @punit.star.{1}))
                        (@pprod.mk.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                          @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                    @punit.star.{1})) a_2))
            (@pprod.fst.{1 1}
              (@pprod.{1 1}
                ((λ (a_3 : @nat),
                  ∀ (b_2 : @nat),
                  @decidable (@has_le.le.{0} @nat @nat.has_le a_3 b_2))
                  (@pprod.fst.{1 1}
                    ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                    (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                      (λ (a_3 : @nat) (ih_1 : Type 0),
                      @pprod.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                        @punit.{1}) @nat.zero)
                    (@pprod.fst.{1 1}
                      (@pprod.{1 1}
                        ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                        (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                          (λ (a_3 : @nat) (ih_1 : Type 0),
                          @pprod.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                            @punit.{1}) @nat.zero)) @punit.{1}
                      (@pprod.mk.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                          (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                            @nat.zero)) @punit.{1}
                        (@nat.rec.{1}
                          (λ (n : @nat),
                          @pprod.{1 1}
                            ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                            (@nat.below.{1}
                              (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n))
                          (@pprod.mk.{1 1}
                            ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                            @punit.{1}
                            ((λ (a_3 : @nat)
                                (F_2 :
                                  @nat.below.{1}
                                    (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                                (a_4 : @nat),
                              (λ (a_5 a_6 : @nat)
                                  (F_3 :
                                    @nat.below.{1}
                                      (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      a_6),
                                @nat.cases_on.{1}
                                  (λ (a_7 : @nat),
                                  ∀ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_7),
                                  @nat) a_6
                                  (λ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        @nat.zero),
                                  a_5)
                                  (λ (a_1_1 : @nat)
                                    (F_4 :
                                      @nat.below.{1}
                                        (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        (@nat.succ a_1_1)),
                                  @nat.succ
                                    (@pprod.fst.{1 1}
                                      ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_7 : @nat) (ih_1 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_8 : @nat),
                                              ∀ (a_9 : @nat),
                                              @nat) a_7) ih_1) @punit.{1})
                                        a_1_1)
                                      (@pprod.fst.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_7 : @nat),
                                            ∀ (a_8 : @nat),
                                            @nat) a_1_1)
                                          (@nat.rec.{2} (λ (n : @nat), Type 0)
                                            @punit.{1}
                                            (λ (a_7 : @nat) (ih_1 : Type 0),
                                            @pprod.{1 1}
                                              (@pprod.{1 1}
                                                ((λ (a_8 : @nat),
                                                  ∀ (a_9 : @nat),
                                                  @nat) a_7) ih_1) @punit.{1})
                                            a_1_1)) @punit.{1} F_4) a_5)) F_3)
                                a_4 a_3 F_2) @nat.zero @punit.star.{1})
                            @punit.star.{1})
                          (λ (a_3 : @nat)
                            (ih_1 :
                              @pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)),
                          @pprod.mk.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                              (@nat.succ a_3))
                            (@pprod.{1 1}
                              (@pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                              @punit.{1})
                            ((λ (a_4 : @nat)
                                (F_2 :
                                  @nat.below.{1}
                                    (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                                (a_5 : @nat),
                              (λ (a_6 a_7 : @nat)
                                  (F_3 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_7),
                                @nat.cases_on.{1}
                                  (λ (a_8 : @nat),
                                  ∀ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                        a_8),
                                  @nat) a_7
                                  (λ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        @nat.zero),
                                  a_6)
                                  (λ (a_1_1 : @nat)
                                    (F_4 :
                                      @nat.below.{1}
                                        (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        (@nat.succ a_1_1)),
                                  @nat.succ
                                    (@pprod.fst.{1 1}
                                      ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_9 : @nat),
                                              ∀ (a_10 : @nat),
                                              @nat) a_8) ih_1_0) @punit.{1})
                                        a_1_1)
                                      (@pprod.fst.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_8 : @nat),
                                            ∀ (a_9 : @nat),
                                            @nat) a_1_1)
                                          (@nat.rec.{2} (λ (n : @nat), Type 0)
                                            @punit.{1}
                                            (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                            @pprod.{1 1}
                                              (@pprod.{1 1}
                                                ((λ (a_9 : @nat),
                                                  ∀ (a_10 : @nat),
                                                  @nat) a_8) ih_1_0) @punit.{1})
                                            a_1_1)) @punit.{1} F_4) a_6)) F_3)
                                a_5 a_4 F_2) (@nat.succ a_3)
                              (@pprod.mk.{1 1}
                                (@pprod.{1 1}
                                  ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                  (@nat.below.{1}
                                    (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                                @punit.{1} ih_1 @punit.star.{1}))
                            (@pprod.mk.{1 1}
                              (@pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                              @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                        @punit.star.{1})) a_2))
                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                  (λ (a_3 : @nat) (ih_1 : Type 0),
                  @pprod.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_4 : @nat),
                        ∀ (b_2 : @nat),
                        @decidable (@has_le.le.{0} @nat @nat.has_le a_4 b_2))
                        a_3) ih_1) @punit.{1})
                  (@pprod.fst.{1 1}
                    ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                    (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                      (λ (a_3 : @nat) (ih_1 : Type 0),
                      @pprod.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                        @punit.{1}) @nat.zero)
                    (@pprod.fst.{1 1}
                      (@pprod.{1 1}
                        ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                        (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                          (λ (a_3 : @nat) (ih_1 : Type 0),
                          @pprod.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                            @punit.{1}) @nat.zero)) @punit.{1}
                      (@pprod.mk.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                          (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                            @nat.zero)) @punit.{1}
                        (@nat.rec.{1}
                          (λ (n : @nat),
                          @pprod.{1 1}
                            ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                            (@nat.below.{1}
                              (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n))
                          (@pprod.mk.{1 1}
                            ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                            @punit.{1}
                            ((λ (a_3 : @nat)
                                (F_2 :
                                  @nat.below.{1}
                                    (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                                (a_4 : @nat),
                              (λ (a_5 a_6 : @nat)
                                  (F_3 :
                                    @nat.below.{1}
                                      (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      a_6),
                                @nat.cases_on.{1}
                                  (λ (a_7 : @nat),
                                  ∀ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_7),
                                  @nat) a_6
                                  (λ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        @nat.zero),
                                  a_5)
                                  (λ (a_1_1 : @nat)
                                    (F_4 :
                                      @nat.below.{1}
                                        (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        (@nat.succ a_1_1)),
                                  @nat.succ
                                    (@pprod.fst.{1 1}
                                      ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_7 : @nat) (ih_1 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_8 : @nat),
                                              ∀ (a_9 : @nat),
                                              @nat) a_7) ih_1) @punit.{1})
                                        a_1_1)
                                      (@pprod.fst.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_7 : @nat),
                                            ∀ (a_8 : @nat),
                                            @nat) a_1_1)
                                          (@nat.rec.{2} (λ (n : @nat), Type 0)
                                            @punit.{1}
                                            (λ (a_7 : @nat) (ih_1 : Type 0),
                                            @pprod.{1 1}
                                              (@pprod.{1 1}
                                                ((λ (a_8 : @nat),
                                                  ∀ (a_9 : @nat),
                                                  @nat) a_7) ih_1) @punit.{1})
                                            a_1_1)) @punit.{1} F_4) a_5)) F_3)
                                a_4 a_3 F_2) @nat.zero @punit.star.{1})
                            @punit.star.{1})
                          (λ (a_3 : @nat)
                            (ih_1 :
                              @pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)),
                          @pprod.mk.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                              (@nat.succ a_3))
                            (@pprod.{1 1}
                              (@pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                              @punit.{1})
                            ((λ (a_4 : @nat)
                                (F_2 :
                                  @nat.below.{1}
                                    (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                                (a_5 : @nat),
                              (λ (a_6 a_7 : @nat)
                                  (F_3 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_7),
                                @nat.cases_on.{1}
                                  (λ (a_8 : @nat),
                                  ∀ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                        a_8),
                                  @nat) a_7
                                  (λ (F_4 :
                                      @nat.below.{1}
                                        (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        @nat.zero),
                                  a_6)
                                  (λ (a_1_1 : @nat)
                                    (F_4 :
                                      @nat.below.{1}
                                        (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        (@nat.succ a_1_1)),
                                  @nat.succ
                                    (@pprod.fst.{1 1}
                                      ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_1_1)
                                      (@nat.rec.{2} (λ (n : @nat), Type 0)
                                        @punit.{1}
                                        (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                        @pprod.{1 1}
                                          (@pprod.{1 1}
                                            ((λ (a_9 : @nat),
                                              ∀ (a_10 : @nat),
                                              @nat) a_8) ih_1_0) @punit.{1})
                                        a_1_1)
                                      (@pprod.fst.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_8 : @nat),
                                            ∀ (a_9 : @nat),
                                            @nat) a_1_1)
                                          (@nat.rec.{2} (λ (n : @nat), Type 0)
                                            @punit.{1}
                                            (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                            @pprod.{1 1}
                                              (@pprod.{1 1}
                                                ((λ (a_9 : @nat),
                                                  ∀ (a_10 : @nat),
                                                  @nat) a_8) ih_1_0) @punit.{1})
                                            a_1_1)) @punit.{1} F_4) a_6)) F_3)
                                a_5 a_4 F_2) (@nat.succ a_3)
                              (@pprod.mk.{1 1}
                                (@pprod.{1 1}
                                  ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                  (@nat.below.{1}
                                    (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                                @punit.{1} ih_1 @punit.star.{1}))
                            (@pprod.mk.{1 1}
                              (@pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                              @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                        @punit.star.{1})) a_2))) @punit.{1} F_1) a_1_0))) F_0)
    a_0 b_0 F) b,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.not_succ_le_zero"

mod: "DefMod(Definition(nat.decidable_le,Vector(),∀ (a b : @nat), @decidable (@has_le.le.{0} @nat @nat.has_le a b),@nat.decidable_le._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_le._main"

mod: "DefMod(Definition(nat.decidable_lt,Vector(),∀ (a b : @nat), @decidable (@has_lt.lt.{0} @nat @nat.has_lt a b),λ (a b : @nat), @nat.decidable_le (@nat.succ a) b,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_le"

