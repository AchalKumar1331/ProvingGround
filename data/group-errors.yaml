mod: "DefMod(Definition(psum.sizeof,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} [inst_1 : @has_sizeof.{u+1} α]
  [inst_2 : @has_sizeof.{v+1} β] (a : @psum.{u+1 v+1} α β),
@nat,λ {α : Type u} {β : Type v} [inst_1 : @has_sizeof.{u+1} α]
  [inst_2 : @has_sizeof.{v+1} β],
@psum.sizeof._main.{u v} α β inst_1 inst_2,0))"
err: "provingground.interface.UnParsedException: could not parse expression @psum.sizeof._main.{u v}"

mod: "DefMod(Definition(add_semigroup.has_sizeof_inst,Vector(Param(u)),∀ (α : Type u), @has_sizeof.{u+1} (@add_semigroup.{u} α),λ (α : Type u),
@has_sizeof.mk.{u+1} (@add_semigroup.{u} α) (@add_semigroup.sizeof.{u} α),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_semigroup.sizeof.{u}"

mod: "IndMod(InductiveType(_private.608265362.string_imp,Vector(),Type 0),0,Vector((_private.608265362.string_imp.mk,∀ (data : @list.{0} @char), @_private.608265362.string_imp)))"
err: "provingground.interface.UnParsedException: could not parse expression @char"

mod: "DefMod(Definition(_private.608265362.string_imp.rec_on,Vector(Param(l)),∀ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
C n,λ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
@_private.608265362.string_imp.rec.{l} C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.608265362.string_imp"

mod: "DefMod(Definition(string,Vector(),Type 0,@_private.608265362.string_imp,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.608265362.string_imp"

mod: "DefMod(Definition(unsigned_sz,Vector(),@nat,@nat.succ
  (@bit1.{0} @nat @nat.has_one @nat.has_add
    (@bit1.{0} @nat @nat.has_one @nat.has_add
      (@bit1.{0} @nat @nat.has_one @nat.has_add
        (@bit1.{0} @nat @nat.has_one @nat.has_add
          (@bit1.{0} @nat @nat.has_one @nat.has_add
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@bit1.{0} @nat
                                                          @nat.has_one
                                                          @nat.has_add
                                                          (@bit1.{0} @nat
                                                            @nat.has_one
                                                            @nat.has_add
                                                            (@bit1.{0} @nat
                                                              @nat.has_one
                                                              @nat.has_add
                                                              (@bit1.{0} @nat
                                                                @nat.has_one
                                                                @nat.has_add
                                                                (@has_one.one.{0}
                                                                  @nat
                                                                  @nat.has_one)))))))))))))))))))))))))))))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @bit1.{0}"

mod: "DefMod(Definition(unsigned,Vector(),Type 0,@fin @unsigned_sz,0))"
err: "provingground.interface.UnParsedException: could not parse expression @unsigned_sz"

mod: "IndMod(InductiveType(name,Vector(),Type 0),0,Vector((name.anonymous,@name), (name.mk_string,∀ (a : @string) (a_0 : @name), @name), (name.mk_numeral,∀ (a : @unsigned) (a_0 : @name), @name)))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(auto_param,Vector(Param(u)),∀ (α : Sort u) (tac_name : @name), Sort u,λ (α : Sort u) (tac_name : @name), α,0))"
err: "provingground.interface.UnParsedException: could not parse expression @name"

mod: "DefMod(Definition(_private.608265362.string_imp.cases_on,Vector(Param(l)),∀ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
C n,λ {C : (∀ (n_0 : @_private.608265362.string_imp), Sort l)}
  (n : @_private.608265362.string_imp)
  (e_1 :
    (∀ (data : @list.{0} @char), C (@_private.608265362.string_imp.mk data))),
@_private.608265362.string_imp.rec.{l} C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.608265362.string_imp"

mod: "DefMod(Definition(string.str,Vector(),∀ (a : @string) (a_0 : @char), @string,@string.str._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string.str._main"

mod: "DefMod(Definition(nat.decidable_lt,Vector(),∀ (a b : @nat), @decidable (@has_lt.lt.{0} @nat @nat.has_lt a b),λ (a b : @nat), @nat.decidable_le (@nat.succ a) b,0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "IndMod(InductiveType(functor,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)), Type (max (u+1) v)),1,Vector((functor.mk,∀ {f : (∀ (a : Type u), Type v)} (to_has_map : @has_map.{u v} f)
  (map_const_eq :
    @auto_param.{0}
      (∀ {α β : Type u},
      @eq.{max (u+1) (v+1)} (∀ (a : α) (a_0 : f β), f α)
        (@has_map.map_const.{u v} f to_has_map α β)
        (@function.comp.{u+1 u+1 v+1} α (∀ (a : β), α) (∀ (a : f β), f α)
          (@has_map.map.{u v} f to_has_map β α)
          (@function.const.{u+1 u+1} α β)))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (id_map :
    (∀ {α : Type u} (x : f α),
    @eq.{v+1} (f α) (@has_map.map.{u v} f to_has_map α α (@id.{u+1} α) x) x))
  (map_comp :
    (∀ {α β γ : Type u} (g : (∀ (a : α), β)) (h : (∀ (a : β), γ)) (x : f α),
    @eq.{v+1} (f γ)
      (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0) to_has_map α γ
        (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
      (@has_map.map.{u v} f to_has_map β γ h
        (@has_map.map.{u v} f to_has_map α β g x)))),
@functor.{u v} f)))"
err: "provingground.interface.UnParsedException: could not parse expression @name.anonymous"

mod: "DefMod(Definition(functor.to_has_map,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)) [c : @functor.{u v} f], @has_map.{u v} f,λ (f : (∀ (a : Type u), Type v)) [c : @functor.{u v} f],
@functor.rec.{(max (u+1) v)+1 u v} f
  (λ [c_0 : @functor.{u v} f], @has_map.{u v} f)
  (λ (to_has_map : @has_map.{u v} f)
    (map_const_eq :
      @auto_param.{0}
        (∀ {α β : Type u},
        @eq.{max (u+1) (v+1)} (∀ (a : α) (a_0 : f β), f α)
          (@has_map.map_const.{u v} f to_has_map α β)
          (@function.comp.{u+1 u+1 v+1} α (∀ (a : β), α) (∀ (a : f β), f α)
            (@has_map.map.{u v} f to_has_map β α)
            (@function.const.{u+1 u+1} α β)))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (id_map :
      (∀ {α : Type u} (x : f α),
      @eq.{v+1} (f α) (@has_map.map.{u v} f to_has_map α α (@id.{u+1} α) x) x))
    (map_comp :
      (∀ {α β γ : Type u} (g : (∀ (a : α), β)) (h : (∀ (a : β), γ)) (x : f α),
      @eq.{v+1} (f γ)
        (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0) to_has_map α γ
          (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
        (@has_map.map.{u v} f to_has_map β γ h
          (@has_map.map.{u v} f to_has_map α β g x)))),
  to_has_map) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @functor.{u v}"

mod: "IndMod(InductiveType(applicative,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)), Sort (max (u+2) (v+1))),1,Vector((applicative.mk,∀ {f : (∀ (a : Type u), Type v)} (to_functor : @functor.{u v} f)
  (to_has_pure : @has_pure.{u v} f) (to_has_seq : @has_seq.{u v} f)
  (to_has_seq_left : @has_seq_left.{u v} f)
  (to_has_seq_right : @has_seq_right.{u v} f)
  (seq_left_eq :
    @auto_param.{0}
      (∀ {α β : Type u} (a : f α) (b : f β),
      @eq.{v+1} (f α) (@has_seq_left.seq_left.{u v} f to_has_seq_left α β a b)
        (@has_seq.seq.{u v} f to_has_seq β α
          (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
            (∀ (a_0 : β), α) (@function.const.{u+1 u+1} α β) a) b))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (seq_right_eq :
    @auto_param.{0}
      (∀ {α β : Type u} (a : f α) (b : f β),
      @eq.{v+1} (f β)
        (@has_seq_right.seq_right.{u v} f to_has_seq_right α β a b)
        (@has_seq.seq.{u v} f to_has_seq β β
          (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
            (∀ (a_0 : β), β)
            (@function.const.{u+1 u+1} (∀ (a_0 : β), β) α (@id.{u+1} β)) a) b))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (pure_seq_eq_map :
    (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : f α),
    @eq.{v+1} (f β)
      (@has_seq.seq.{u v} f to_has_seq α β
        (@has_pure.pure.{u v} f to_has_pure (∀ (a : α), β) g) x)
      (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α β g x)))
  (map_pure :
    (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
    @eq.{v+1} (f β)
      (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
        (@functor.to_has_map.{u v} f to_functor) α β g
        (@has_pure.pure.{u v} f to_has_pure α x))
      (@has_pure.pure.{u v} f to_has_pure β (g x))))
  (seq_pure :
    (∀ {α β : Type u} (g : f (∀ (a : α), β)) (x : α),
    @eq.{v+1} (f β)
      (@has_seq.seq.{u v} f to_has_seq α β g
        (@has_pure.pure.{u v} f to_has_pure α x))
      (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
        (∀ (a : α), β) β (λ (g_0 : (∀ (a : α), β)), g_0 x) g)))
  (seq_assoc :
    (∀ {α β γ : Type u} (x : f α) (g : f (∀ (a : α), β)) (h : f (∀ (a : β), γ)),
    @eq.{v+1} (f γ)
      (@has_seq.seq.{u v} f to_has_seq β γ h
        (@has_seq.seq.{u v} f to_has_seq α β g x))
      (@has_seq.seq.{u v} f to_has_seq α γ
        (@has_seq.seq.{u v} f to_has_seq (∀ (a : α), β) (∀ (a : α), γ)
          (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
            (∀ (a : β), γ) (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x))),
@applicative.{u v} f)))"
err: "provingground.interface.UnParsedException: could not parse expression @functor.{u v}"

mod: "DefMod(Definition(applicative.to_has_pure,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)) [c : @applicative.{u v} f], @has_pure.{u v} f,λ (f : (∀ (a : Type u), Type v)) [c : @applicative.{u v} f],
@applicative.rec.{max (u+2) (v+1) u v} f
  (λ [c_0 : @applicative.{u v} f], @has_pure.{u v} f)
  (λ (to_functor : @functor.{u v} f) (to_has_pure : @has_pure.{u v} f)
    (to_has_seq : @has_seq.{u v} f) (to_has_seq_left : @has_seq_left.{u v} f)
    (to_has_seq_right : @has_seq_right.{u v} f)
    (seq_left_eq :
      @auto_param.{0}
        (∀ {α β : Type u} (a : f α) (b : f β),
        @eq.{v+1} (f α) (@has_seq_left.seq_left.{u v} f to_has_seq_left α β a b)
          (@has_seq.seq.{u v} f to_has_seq β α
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
              (∀ (a_0 : β), α) (@function.const.{u+1 u+1} α β) a) b))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (seq_right_eq :
      @auto_param.{0}
        (∀ {α β : Type u} (a : f α) (b : f β),
        @eq.{v+1} (f β)
          (@has_seq_right.seq_right.{u v} f to_has_seq_right α β a b)
          (@has_seq.seq.{u v} f to_has_seq β β
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
              (∀ (a_0 : β), β)
              (@function.const.{u+1 u+1} (∀ (a_0 : β), β) α (@id.{u+1} β)) a)
            b))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_seq_eq_map :
      (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : f α),
      @eq.{v+1} (f β)
        (@has_seq.seq.{u v} f to_has_seq α β
          (@has_pure.pure.{u v} f to_has_pure (∀ (a : α), β) g) x)
        (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α β g
          x)))
    (map_pure :
      (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
      @eq.{v+1} (f β)
        (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
          (@functor.to_has_map.{u v} f to_functor) α β g
          (@has_pure.pure.{u v} f to_has_pure α x))
        (@has_pure.pure.{u v} f to_has_pure β (g x))))
    (seq_pure :
      (∀ {α β : Type u} (g : f (∀ (a : α), β)) (x : α),
      @eq.{v+1} (f β)
        (@has_seq.seq.{u v} f to_has_seq α β g
          (@has_pure.pure.{u v} f to_has_pure α x))
        (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
          (∀ (a : α), β) β (λ (g_0 : (∀ (a : α), β)), g_0 x) g)))
    (seq_assoc :
      (∀ {α β γ : Type u} (x : f α) (g : f (∀ (a : α), β))
        (h : f (∀ (a : β), γ)),
      @eq.{v+1} (f γ)
        (@has_seq.seq.{u v} f to_has_seq β γ h
          (@has_seq.seq.{u v} f to_has_seq α β g x))
        (@has_seq.seq.{u v} f to_has_seq α γ
          (@has_seq.seq.{u v} f to_has_seq (∀ (a : α), β) (∀ (a : α), γ)
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
              (∀ (a : β), γ) (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
              (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x))),
  to_has_pure) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.{u v}"

mod: "DefMod(Definition(applicative.to_functor,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)) [c : @applicative.{u v} f], @functor.{u v} f,λ (f : (∀ (a : Type u), Type v)) [c : @applicative.{u v} f],
@applicative.rec.{(max (u+1) v)+1 u v} f
  (λ [c_0 : @applicative.{u v} f], @functor.{u v} f)
  (λ (to_functor : @functor.{u v} f) (to_has_pure : @has_pure.{u v} f)
    (to_has_seq : @has_seq.{u v} f) (to_has_seq_left : @has_seq_left.{u v} f)
    (to_has_seq_right : @has_seq_right.{u v} f)
    (seq_left_eq :
      @auto_param.{0}
        (∀ {α β : Type u} (a : f α) (b : f β),
        @eq.{v+1} (f α) (@has_seq_left.seq_left.{u v} f to_has_seq_left α β a b)
          (@has_seq.seq.{u v} f to_has_seq β α
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
              (∀ (a_0 : β), α) (@function.const.{u+1 u+1} α β) a) b))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (seq_right_eq :
      @auto_param.{0}
        (∀ {α β : Type u} (a : f α) (b : f β),
        @eq.{v+1} (f β)
          (@has_seq_right.seq_right.{u v} f to_has_seq_right α β a b)
          (@has_seq.seq.{u v} f to_has_seq β β
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
              (∀ (a_0 : β), β)
              (@function.const.{u+1 u+1} (∀ (a_0 : β), β) α (@id.{u+1} β)) a)
            b))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_seq_eq_map :
      (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : f α),
      @eq.{v+1} (f β)
        (@has_seq.seq.{u v} f to_has_seq α β
          (@has_pure.pure.{u v} f to_has_pure (∀ (a : α), β) g) x)
        (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α β g
          x)))
    (map_pure :
      (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
      @eq.{v+1} (f β)
        (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
          (@functor.to_has_map.{u v} f to_functor) α β g
          (@has_pure.pure.{u v} f to_has_pure α x))
        (@has_pure.pure.{u v} f to_has_pure β (g x))))
    (seq_pure :
      (∀ {α β : Type u} (g : f (∀ (a : α), β)) (x : α),
      @eq.{v+1} (f β)
        (@has_seq.seq.{u v} f to_has_seq α β g
          (@has_pure.pure.{u v} f to_has_pure α x))
        (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
          (∀ (a : α), β) β (λ (g_0 : (∀ (a : α), β)), g_0 x) g)))
    (seq_assoc :
      (∀ {α β γ : Type u} (x : f α) (g : f (∀ (a : α), β))
        (h : f (∀ (a : β), γ)),
      @eq.{v+1} (f γ)
        (@has_seq.seq.{u v} f to_has_seq β γ h
          (@has_seq.seq.{u v} f to_has_seq α β g x))
        (@has_seq.seq.{u v} f to_has_seq α γ
          (@has_seq.seq.{u v} f to_has_seq (∀ (a : α), β) (∀ (a : α), γ)
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
              (∀ (a : β), γ) (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
              (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x))),
  to_functor) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.{u v}"

mod: "DefMod(Definition(applicative.to_has_seq,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)) [c : @applicative.{u v} f], @has_seq.{u v} f,λ (f : (∀ (a : Type u), Type v)) [c : @applicative.{u v} f],
@applicative.rec.{(max (u+1) v)+1 u v} f
  (λ [c_0 : @applicative.{u v} f], @has_seq.{u v} f)
  (λ (to_functor : @functor.{u v} f) (to_has_pure : @has_pure.{u v} f)
    (to_has_seq : @has_seq.{u v} f) (to_has_seq_left : @has_seq_left.{u v} f)
    (to_has_seq_right : @has_seq_right.{u v} f)
    (seq_left_eq :
      @auto_param.{0}
        (∀ {α β : Type u} (a : f α) (b : f β),
        @eq.{v+1} (f α) (@has_seq_left.seq_left.{u v} f to_has_seq_left α β a b)
          (@has_seq.seq.{u v} f to_has_seq β α
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
              (∀ (a_0 : β), α) (@function.const.{u+1 u+1} α β) a) b))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (seq_right_eq :
      @auto_param.{0}
        (∀ {α β : Type u} (a : f α) (b : f β),
        @eq.{v+1} (f β)
          (@has_seq_right.seq_right.{u v} f to_has_seq_right α β a b)
          (@has_seq.seq.{u v} f to_has_seq β β
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α
              (∀ (a_0 : β), β)
              (@function.const.{u+1 u+1} (∀ (a_0 : β), β) α (@id.{u+1} β)) a)
            b))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_seq_eq_map :
      (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : f α),
      @eq.{v+1} (f β)
        (@has_seq.seq.{u v} f to_has_seq α β
          (@has_pure.pure.{u v} f to_has_pure (∀ (a : α), β) g) x)
        (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor) α β g
          x)))
    (map_pure :
      (∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
      @eq.{v+1} (f β)
        (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
          (@functor.to_has_map.{u v} f to_functor) α β g
          (@has_pure.pure.{u v} f to_has_pure α x))
        (@has_pure.pure.{u v} f to_has_pure β (g x))))
    (seq_pure :
      (∀ {α β : Type u} (g : f (∀ (a : α), β)) (x : α),
      @eq.{v+1} (f β)
        (@has_seq.seq.{u v} f to_has_seq α β g
          (@has_pure.pure.{u v} f to_has_pure α x))
        (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
          (∀ (a : α), β) β (λ (g_0 : (∀ (a : α), β)), g_0 x) g)))
    (seq_assoc :
      (∀ {α β γ : Type u} (x : f α) (g : f (∀ (a : α), β))
        (h : f (∀ (a : β), γ)),
      @eq.{v+1} (f γ)
        (@has_seq.seq.{u v} f to_has_seq β γ h
          (@has_seq.seq.{u v} f to_has_seq α β g x))
        (@has_seq.seq.{u v} f to_has_seq α γ
          (@has_seq.seq.{u v} f to_has_seq (∀ (a : α), β) (∀ (a : α), γ)
            (@has_map.map.{u v} f (@functor.to_has_map.{u v} f to_functor)
              (∀ (a : β), γ) (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
              (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x))),
  to_has_seq) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.{u v}"

mod: "IndMod(InductiveType(monad,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)), Type (max (u+1) v)),1,Vector((monad.mk,∀ {m : (∀ (a : Type u), Type v)} (to_applicative : @applicative.{u v} m)
  (to_has_bind : @has_bind.{u v} m)
  (bind_pure_comp_eq_map :
    @auto_param.{0}
      (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β x
          (@function.comp.{u+1 u+1 v+1} α β (m β)
            (@has_pure.pure.{u v} m
              (@applicative.to_has_pure.{u v} m to_applicative) β) f))
        (@has_map.map.{u v} m
          (@functor.to_has_map.{u v} m
            (@applicative.to_functor.{u v} m to_applicative)) α β f x))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (bind_map_eq_seq :
    @auto_param.{0}
      (∀ {α β : Type u} (f : m (∀ (a : α), β)) (x : m α),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind (∀ (a : α), β) β f
          (λ (x_0 : (∀ (a : α), β)),
          @has_map.map.{u v} m
            (@functor.to_has_map.{u v} m
              (@applicative.to_functor.{u v} m to_applicative)) α β x_0 x))
        (@has_seq.seq.{u v} m (@applicative.to_has_seq.{u v} m to_applicative) α
          β f x))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (pure_bind :
    (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
    @eq.{v+1} (m β)
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x)))
  (bind_assoc :
    (∀ {α β γ : Type u} (x : m α) (f : (∀ (a : α), m β)) (g : (∀ (a : β), m γ)),
    @eq.{v+1} (m γ)
      (@has_bind.bind.{u v} m to_has_bind β γ
        (@has_bind.bind.{u v} m to_has_bind α β x f) g)
      (@has_bind.bind.{u v} m to_has_bind α γ x
        (λ (x_0 : α), @has_bind.bind.{u v} m to_has_bind β γ (f x_0) g)))),
@monad.{u v} m)))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.{u v}"

mod: "DefMod(Definition(monad.to_applicative,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)) [c : @monad.{u v} m], @applicative.{u v} m,λ (m : (∀ (a : Type u), Type v)) [c : @monad.{u v} m],
@monad.rec.{max (u+2) (v+1) u v} m
  (λ [c_0 : @monad.{u v} m], @applicative.{u v} m)
  (λ (to_applicative : @applicative.{u v} m) (to_has_bind : @has_bind.{u v} m)
    (bind_pure_comp_eq_map :
      @auto_param.{0}
        (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind α β x
            (@function.comp.{u+1 u+1 v+1} α β (m β)
              (@has_pure.pure.{u v} m
                (@applicative.to_has_pure.{u v} m to_applicative) β) f))
          (@has_map.map.{u v} m
            (@functor.to_has_map.{u v} m
              (@applicative.to_functor.{u v} m to_applicative)) α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (bind_map_eq_seq :
      @auto_param.{0}
        (∀ {α β : Type u} (f : m (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind (∀ (a : α), β) β f
            (λ (x_0 : (∀ (a : α), β)),
            @has_map.map.{u v} m
              (@functor.to_has_map.{u v} m
                (@applicative.to_functor.{u v} m to_applicative)) α β x_0 x))
          (@has_seq.seq.{u v} m (@applicative.to_has_seq.{u v} m to_applicative)
            α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_bind :
      (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x)))
    (bind_assoc :
      (∀ {α β γ : Type u} (x : m α) (f : (∀ (a : α), m β))
        (g : (∀ (a : β), m γ)),
      @eq.{v+1} (m γ)
        (@has_bind.bind.{u v} m to_has_bind β γ
          (@has_bind.bind.{u v} m to_has_bind α β x f) g)
        (@has_bind.bind.{u v} m to_has_bind α γ x
          (λ (x_0 : α), @has_bind.bind.{u v} m to_has_bind β γ (f x_0) g)))),
  to_applicative) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(return,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u}
  (a : α),
m α,λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u},
@pure.{u v} (λ {α_0 : Type u}, m α_0)
  (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
    (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1)) α,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(monad.to_has_bind,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)) [c : @monad.{u v} m], @has_bind.{u v} m,λ (m : (∀ (a : Type u), Type v)) [c : @monad.{u v} m],
@monad.rec.{max (u+2) (v+1) u v} m (λ [c_0 : @monad.{u v} m], @has_bind.{u v} m)
  (λ (to_applicative : @applicative.{u v} m) (to_has_bind : @has_bind.{u v} m)
    (bind_pure_comp_eq_map :
      @auto_param.{0}
        (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind α β x
            (@function.comp.{u+1 u+1 v+1} α β (m β)
              (@has_pure.pure.{u v} m
                (@applicative.to_has_pure.{u v} m to_applicative) β) f))
          (@has_map.map.{u v} m
            (@functor.to_has_map.{u v} m
              (@applicative.to_functor.{u v} m to_applicative)) α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (bind_map_eq_seq :
      @auto_param.{0}
        (∀ {α β : Type u} (f : m (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind (∀ (a : α), β) β f
            (λ (x_0 : (∀ (a : α), β)),
            @has_map.map.{u v} m
              (@functor.to_has_map.{u v} m
                (@applicative.to_functor.{u v} m to_applicative)) α β x_0 x))
          (@has_seq.seq.{u v} m (@applicative.to_has_seq.{u v} m to_applicative)
            α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_bind :
      (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x)))
    (bind_assoc :
      (∀ {α β γ : Type u} (x : m α) (f : (∀ (a : α), m β))
        (g : (∀ (a : β), m γ)),
      @eq.{v+1} (m γ)
        (@has_bind.bind.{u v} m to_has_bind β γ
          (@has_bind.bind.{u v} m to_has_bind α β x f) g)
        (@has_bind.bind.{u v} m to_has_bind α γ x
          (λ (x_0 : α), @has_bind.bind.{u v} m to_has_bind β γ (f x_0) g)))),
  to_has_bind) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(list.mfilter._main,Vector(Param(v)),∀ {m : (∀ (a_0 : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type 0}
  (f : (∀ (a_0 : α), m @bool)) (a : @list.{0} α),
m (@list.{0} α),λ {m : (∀ (a_0 : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type 0}
  (f : (∀ (a_0 : α), m @bool)) (a : @list.{0} α),
@list.brec_on.{v+1 0} α (λ (a_0 : @list.{0} α), m (@list.{0} α)) a
  (λ (a_0 : @list.{0} α)
    (F : @list.below.{v+1 0} α (λ (a_1 : @list.{0} α), m (@list.{0} α)) a_0),
  (λ (a_1 : @list.{0} α)
      (F_0 :
        @list.below.{v+1 0} α (λ (a_2 : @list.{0} α), m (@list.{0} α)) a_1),
    @list.cases_on.{max 1 (v+1) 0} α
      (λ (a_2 : @list.{0} α),
      ∀ (F_1 :
          @list.below.{v+1 0} α (λ (a_3 : @list.{0} α), m (@list.{0} α)) a_2),
      m (@list.{0} α)) a_1
      (λ (F_1 :
          @list.below.{v+1 0} α (λ (a_2 : @list.{0} α), m (@list.{0} α))
            (@list.nil.{0} α)),
      @return.{0 v} m inst_1 (@list.{0} α) (@list.nil.{0} α))
      (λ (a_2 : α) (a_1_0 : @list.{0} α)
        (F_1 :
          @list.below.{v+1 0} α (λ (a_3 : @list.{0} α), m (@list.{0} α))
            (@list.cons.{0} α a_2 a_1_0)),
      @has_bind.bind.{0 v} m (@monad.to_has_bind.{0 v} m inst_1) @bool
        (@list.{0} α) (f a_2)
        (λ (b : @bool),
        @has_bind.bind.{0 v} m (@monad.to_has_bind.{0 v} m inst_1) (@list.{0} α)
          (@list.{0} α)
          (@pprod.fst.{v+1 max 1 (v+1)}
            ((λ (a_3 : @list.{0} α), m (@list.{0} α)) a_1_0)
            (@list.rec.{(max 1 (v+1))+1 0} α
              (λ (n : @list.{0} α), Sort (max 1 (v+1))) @punit.{max 1 (v+1)}
              (λ (a_3 : α) (a_4 : @list.{0} α) (ih_1 : Sort (max 1 (v+1))),
              @pprod.{max 1 (v+1) max 1 (v+1)}
                (@pprod.{v+1 max 1 (v+1)}
                  ((λ (a_5 : @list.{0} α), m (@list.{0} α)) a_4) ih_1)
                @punit.{max 1 (v+1)}) a_1_0)
            (@pprod.fst.{max 1 (v+1) max 1 (v+1)}
              (@pprod.{v+1 max 1 (v+1)}
                ((λ (a_3 : @list.{0} α), m (@list.{0} α)) a_1_0)
                (@list.rec.{(max 1 (v+1))+1 0} α
                  (λ (n : @list.{0} α), Sort (max 1 (v+1))) @punit.{max 1 (v+1)}
                  (λ (a_3 : α) (a_4 : @list.{0} α) (ih_1 : Sort (max 1 (v+1))),
                  @pprod.{max 1 (v+1) max 1 (v+1)}
                    (@pprod.{v+1 max 1 (v+1)}
                      ((λ (a_5 : @list.{0} α), m (@list.{0} α)) a_4) ih_1)
                    @punit.{max 1 (v+1)}) a_1_0)) @punit.{max 1 (v+1)} F_1))
          (λ (t : @list.{0} α),
          @cond.{v} (m (@list.{0} α)) b
            (@return.{0 v} m inst_1 (@list.{0} α) (@list.cons.{0} α a_2 t))
            (@return.{0 v} m inst_1 (@list.{0} α) t)))) F_0) a_0 F),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 v}"

mod: "DefMod(Definition(list.mfilter,Vector(Param(v)),∀ {m : (∀ (a_0 : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type 0}
  (f : (∀ (a_0 : α), m @bool)) (a : @list.{0} α),
m (@list.{0} α),λ {m : (∀ (a : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type 0}
  (f : (∀ (a : α), m @bool)),
@list.mfilter._main.{v} m inst_1 α f,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 v}"

mod: "DefMod(Definition(monad.filter,Vector(Param(u_1)),∀ {m : (∀ (a_0 : Type 0), Type u_1)} [inst_1 : @monad.{0 u_1} m] {α : Type 0}
  (f : (∀ (a_0 : α), m @bool)) (a : @list.{0} α),
m (@list.{0} α),@list.mfilter.{u_1},0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.mfilter.{u_1}"

mod: "DefMod(Definition(monad.filter.equations._eqn_1,Vector(Param(u_1)),@eq.{max (max 2 (u_1+2)) (max ((max 1 u_1)+1) (max 2 (max 1 (u_1+1))))}
  (∀ {m : (∀ (a_0 : Type 0), Type u_1)} [inst_1 : @monad.{0 u_1} m] {α : Type 0}
    (f : (∀ (a_0 : α), m @bool)) (a : @list.{0} α),
  m (@list.{0} α)) @monad.filter.{u_1} @list.mfilter.{u_1},@eq.refl.{max (max 2 (u_1+2)) (max ((max 1 u_1)+1) (max 2 (max 1 (u_1+1))))}
  (∀ {m : (∀ (a_0 : Type 0), Type u_1)} [inst_1 : @monad.{0 u_1} m] {α : Type 0}
    (f : (∀ (a_0 : α), m @bool)) (a : @list.{0} α),
  m (@list.{0} α)) @monad.filter.{u_1},0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.filter.{u_1}"

mod: "DefMod(Definition(option_t,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m] (α : Type u), Type v,λ (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m] (α : Type u),
m (@option.{u} α),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t_bind._match_1,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)) (a : @option.{u} α),
m (@option.{u} β),λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)) (a : @option.{u} α),
@option.cases_on.{v+1 u} α (λ (a_0 : @option.{u} α), m (@option.{u} β)) a
  (@id_rhs.{v+1} (m (@option.{u} β))
    (@return.{u v} m inst_1 (@option.{u} β) (@option.none.{u} β)))
  (λ (a_1 : α), @id_rhs.{v+1} (@option_t.{u v} m inst_1 β) (b a_1)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t_bind,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (a : @option_t.{u v} m inst_1 α)
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)),
@option_t.{u v} m inst_1 β,λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (a : @option_t.{u v} m inst_1 α)
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)),
(λ (this : m (@option.{u} β)), this)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α)
    (@option.{u} β) a
    (λ (o : @option.{u} α), @option_t_bind._match_1.{u v} m inst_1 α β b o)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t_return,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u}
  (a : α),
@option_t.{u v} m inst_1 α,λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u}
  (a : α),
(λ (this : m (@option.{u} α)), this)
  (@return.{u v} m inst_1 (@option.{u} α) (@option.some.{u} α a)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t.monad._proof_4,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] (α β : Type u)
  (a : @option_t.{u v} m inst_1 α) (b : @option_t.{u v} m inst_1 β),
@eq.{v+1} (@option_t.{u v} m inst_1 α)
  (@has_seq_left.seq_left.{u v} (@option_t.{u v} m inst_1)
    (@has_seq_left.mk.{u v} (@option_t.{u v} m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @option_t.{u v} m inst_1 α_0)
        (b_0 : @option_t.{u v} m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @option_t.{u v} m inst_1 α_2),
            @option_t_bind.{u v} m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 v+1} α_2 β_2
                (@option_t.{u v} m inst_1 β_2)
                (@option_t_return.{u v} m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        α_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f)) α_0 (∀ (a_1 : β_0), α_0)
          (@function.const.{u+1 u+1} α_0 β_0) a_0) b_0)) α β a b)
  (@has_seq_left.seq_left.{u v} (@option_t.{u v} m inst_1)
    (@has_seq_left.mk.{u v} (@option_t.{u v} m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @option_t.{u v} m inst_1 α_0)
        (b_0 : @option_t.{u v} m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @option_t.{u v} m inst_1 α_2),
            @option_t_bind.{u v} m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 v+1} α_2 β_2
                (@option_t.{u v} m inst_1 β_2)
                (@option_t_return.{u v} m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        α_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f)) α_0 (∀ (a_1 : β_0), α_0)
          (@function.const.{u+1 u+1} α_0 β_0) a_0) b_0)) α β a b),λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] (α β : Type u)
  (a : @option_t.{u v} m inst_1 α) (b : @option_t.{u v} m inst_1 β),
@rfl.{v+1} (@option_t.{u v} m inst_1 α)
  (@has_seq_left.seq_left.{u v} (@option_t.{u v} m inst_1)
    (@has_seq_left.mk.{u v} (@option_t.{u v} m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @option_t.{u v} m inst_1 α_0)
        (b_0 : @option_t.{u v} m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @option_t.{u v} m inst_1 α_2),
            @option_t_bind.{u v} m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 v+1} α_2 β_2
                (@option_t.{u v} m inst_1 β_2)
                (@option_t_return.{u v} m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        α_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f)) α_0 (∀ (a_1 : β_0), α_0)
          (@function.const.{u+1 u+1} α_0 β_0) a_0) b_0)) α β a b),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "IndMod(InductiveType(monad.monad_transformer,Vector(Param(u_1)),∀ (transformer :
    (∀ (m : (∀ (a_0 : Type 0), Type u_1)) [inst_1 : @monad.{0 u_1} m]
      (a : Type 0),
    Type 0)),
Type (u_1+1)),1,Vector((monad.monad_transformer.mk,∀ {transformer :
    (∀ (m : (∀ (a_0 : Type 0), Type u_1)) [inst_1 : @monad.{0 u_1} m]
      (a : Type 0),
    Type 0)}
  (is_monad :
    (∀ (m : (∀ (a : Type 0), Type u_1)) [inst_1 : @monad.{0 u_1} m],
    @monad.{0 0} (transformer m inst_1)))
  (monad_lift :
    (∀ (m : (∀ (a_0 : Type 0), Type u_1)) [inst_2 : @monad.{0 u_1} m]
      (α : Type 0) (a : m α),
    transformer m inst_2 α)),
@monad.monad_transformer.{u_1} transformer)))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 u_1}"

mod: "DefMod(Definition(monad.monad_transformer.monad_lift,Vector(Param(u_1)),∀ (transformer :
    (∀ (m_0 : (∀ (a_1 : Type 0), Type u_1)) [inst_1 : @monad.{0 u_1} m_0]
      (a_0 : Type 0),
    Type 0)) [c : @monad.monad_transformer.{u_1} transformer]
  (m : (∀ (a_0 : Type 0), Type u_1)) [inst_2 : @monad.{0 u_1} m] (α : Type 0)
  (a : m α),
transformer m inst_2 α,λ (transformer :
    (∀ (m : (∀ (a_0 : Type 0), Type u_1)) [inst_1 : @monad.{0 u_1} m]
      (a : Type 0),
    Type 0)) [c : @monad.monad_transformer.{u_1} transformer],
@monad.monad_transformer.rec.{max (max 2
  (u_1+2))
  (max ((max 1
  u_1)+1)
  (max 2
  (max (u_1+1)
  1))) u_1} transformer
  (λ [c_0 : @monad.monad_transformer.{u_1} transformer],
  ∀ (m : (∀ (a_0 : Type 0), Type u_1)) [inst_2 : @monad.{0 u_1} m] (α : Type 0)
    (a : m α),
  transformer m inst_2 α)
  (λ (is_monad :
      (∀ (m : (∀ (a : Type 0), Type u_1)) [inst_1 : @monad.{0 u_1} m],
      @monad.{0 0} (transformer m inst_1)))
    (monad_lift :
      (∀ (m : (∀ (a_0 : Type 0), Type u_1)) [inst_2 : @monad.{0 u_1} m]
        (α : Type 0) (a : m α),
      transformer m inst_2 α)),
  monad_lift) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 u_1}"

mod: "DefMod(Definition(monad.monad_transformer_lift,Vector(),∀ (t :
    (∀ (m_0 : (∀ (a_0 : Type 0), Type 0)) [inst_1_0 : @monad.{0 0} m_0]
      (a : Type 0),
    Type 0)) (m : (∀ (a : Type 0), Type 0))
  [inst_1 : @monad.monad_transformer.{0} t] [inst_2 : @monad.{0 0} m],
@monad.has_monad_lift m (t m inst_2),λ (t :
    (∀ (m_0 : (∀ (a_0 : Type 0), Type 0)) [inst_1_0 : @monad.{0 0} m_0]
      (a : Type 0),
    Type 0)) (m : (∀ (a : Type 0), Type 0))
  [inst_1 : @monad.monad_transformer.{0} t] [inst_2 : @monad.{0 0} m],
@monad.has_monad_lift.mk m (t m inst_2)
  (@monad.monad_transformer.monad_lift.{0} t inst_1 m inst_2),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 0}"

mod: "DefMod(Definition(monad.map_pure._default,Vector(Param(v), Param(u)),∀ {m : (∀ (a : Type u), Type v)} (to_applicative : @applicative.{u v} m)
  (to_has_bind : @has_bind.{u v} m)
  (bind_pure_comp_eq_map :
    @auto_param.{0}
      (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β x
          (@function.comp.{u+1 u+1 v+1} α β (m β)
            (@has_pure.pure.{u v} m
              (@applicative.to_has_pure.{u v} m to_applicative) β) f))
        (@has_map.map.{u v} m
          (@functor.to_has_map.{u v} m
            (@applicative.to_functor.{u v} m to_applicative)) α β f x))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (pure_bind :
    (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
    @eq.{v+1} (m β)
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x))),
(λ {f : (∀ (a : Type u), Type v)} (c : @applicative.{u v} f),
  ∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
  @eq.{v+1} (f β)
    (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
      (@functor.to_has_map.{u v} f (@applicative.to_functor.{u v} f c)) α β g
      (@has_pure.pure.{u v} f (@applicative.to_has_pure.{u v} f c) α x))
    (@has_pure.pure.{u v} f (@applicative.to_has_pure.{u v} f c) β (g x))) m
  to_applicative,λ {m : (∀ (a : Type u), Type v)} (to_applicative : @applicative.{u v} m)
  (to_has_bind : @has_bind.{u v} m)
  (bind_pure_comp_eq_map :
    @auto_param.{0}
      (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β x
          (@function.comp.{u+1 u+1 v+1} α β (m β)
            (@has_pure.pure.{u v} m
              (@applicative.to_has_pure.{u v} m to_applicative) β) f))
        (@has_map.map.{u v} m
          (@functor.to_has_map.{u v} m
            (@applicative.to_functor.{u v} m to_applicative)) α β f x))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (pure_bind :
    (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
    @eq.{v+1} (m β)
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x))),
@id.{0}
  (∀ (α β : Type u) (g : (∀ (a : α), β)) (x : α),
  @eq.{v+1} (m β)
    (@has_map.map.{u v} (λ {α_0 : Type u}, m α_0)
      (@functor.to_has_map.{u v} m
        (@applicative.to_functor.{u v} m to_applicative)) α β g
      (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative)
        α x))
    (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative) β
      (g x)))
  (λ (α β : Type u) (g : (∀ (a : α), β)) (x : α),
  @eq.trans.{v+1} (m β)
    (@has_map.map.{u v} (λ {α_0 : Type u}, m α_0)
      (@functor.to_has_map.{u v} m
        (@applicative.to_functor.{u v} m to_applicative)) α β g
      (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative)
        α x))
    (@has_bind.bind.{u v} m to_has_bind α β
      (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative)
        α x)
      (@function.comp.{u+1 u+1 v+1} α β (m β)
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) β) g))
    (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative) β
      (g x))
    (@eq.symm.{v+1} (m β)
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x)
        (@function.comp.{u+1 u+1 v+1} α β (m β)
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) β) g))
      (@has_map.map.{u v} (λ {α_0 : Type u}, m α_0)
        (@functor.to_has_map.{u v} m
          (@applicative.to_functor.{u v} m to_applicative)) α β g
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x))
      (bind_pure_comp_eq_map α β g
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x)))
    (pure_bind α β x
      (@function.comp.{u+1 u+1 v+1} α β (m β)
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) β) g))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.{u v}"

mod: "DefMod(Definition(monad.map_pure._default.equations._eqn_1,Vector(Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} (to_applicative : @applicative.{u v} m)
  (to_has_bind : @has_bind.{u v} m)
  (bind_pure_comp_eq_map :
    @auto_param.{0}
      (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β x
          (@function.comp.{u+1 u+1 v+1} α β (m β)
            (@has_pure.pure.{u v} m
              (@applicative.to_has_pure.{u v} m to_applicative) β) f))
        (@has_map.map.{u v} m
          (@functor.to_has_map.{u v} m
            (@applicative.to_functor.{u v} m to_applicative)) α β f x))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (pure_bind :
    (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
    @eq.{v+1} (m β)
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x))),
@eq.{0}
  ((λ {f : (∀ (a : Type u), Type v)} (c : @applicative.{u v} f),
    ∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
    @eq.{v+1} (f β)
      (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
        (@functor.to_has_map.{u v} f (@applicative.to_functor.{u v} f c)) α β g
        (@has_pure.pure.{u v} f (@applicative.to_has_pure.{u v} f c) α x))
      (@has_pure.pure.{u v} f (@applicative.to_has_pure.{u v} f c) β (g x))) m
    to_applicative)
  (@monad.map_pure._default.{v u} m to_applicative to_has_bind
    bind_pure_comp_eq_map pure_bind)
  (@id.{0}
    (∀ (α β : Type u) (g : (∀ (a : α), β)) (x : α),
    @eq.{v+1} (m β)
      (@has_map.map.{u v} (λ {α_0 : Type u}, m α_0)
        (@functor.to_has_map.{u v} m
          (@applicative.to_functor.{u v} m to_applicative)) α β g
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x))
      (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative)
        β (g x)))
    (λ (α β : Type u) (g : (∀ (a : α), β)) (x : α),
    @eq.trans.{v+1} (m β)
      (@has_map.map.{u v} (λ {α_0 : Type u}, m α_0)
        (@functor.to_has_map.{u v} m
          (@applicative.to_functor.{u v} m to_applicative)) α β g
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x))
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x)
        (@function.comp.{u+1 u+1 v+1} α β (m β)
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) β) g))
      (@has_pure.pure.{u v} m (@applicative.to_has_pure.{u v} m to_applicative)
        β (g x))
      (@eq.symm.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x)
          (@function.comp.{u+1 u+1 v+1} α β (m β)
            (@has_pure.pure.{u v} m
              (@applicative.to_has_pure.{u v} m to_applicative) β) g))
        (@has_map.map.{u v} (λ {α_0 : Type u}, m α_0)
          (@functor.to_has_map.{u v} m
            (@applicative.to_functor.{u v} m to_applicative)) α β g
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x))
        (bind_pure_comp_eq_map α β g
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x)))
      (pure_bind α β x
        (@function.comp.{u+1 u+1 v+1} α β (m β)
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) β) g)))),λ {m : (∀ (a : Type u), Type v)} (to_applicative : @applicative.{u v} m)
  (to_has_bind : @has_bind.{u v} m)
  (bind_pure_comp_eq_map :
    @auto_param.{0}
      (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β x
          (@function.comp.{u+1 u+1 v+1} α β (m β)
            (@has_pure.pure.{u v} m
              (@applicative.to_has_pure.{u v} m to_applicative) β) f))
        (@has_map.map.{u v} m
          (@functor.to_has_map.{u v} m
            (@applicative.to_functor.{u v} m to_applicative)) α β f x))
      (@name.mk_string
        (@string.str
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str @string.empty
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit0.{0} @nat @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit0.{0} @nat @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          (@char.of_nat
            (@bit1.{0} @nat @nat.has_one @nat.has_add
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit0.{0} @nat @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@has_one.one.{0} @nat @nat.has_one)))))))))
        @name.anonymous))
  (pure_bind :
    (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
    @eq.{v+1} (m β)
      (@has_bind.bind.{u v} m to_has_bind α β
        (@has_pure.pure.{u v} m
          (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x))),
@eq.refl.{0}
  ((λ {f : (∀ (a : Type u), Type v)} (c : @applicative.{u v} f),
    ∀ {α β : Type u} (g : (∀ (a : α), β)) (x : α),
    @eq.{v+1} (f β)
      (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
        (@functor.to_has_map.{u v} f (@applicative.to_functor.{u v} f c)) α β g
        (@has_pure.pure.{u v} f (@applicative.to_has_pure.{u v} f c) α x))
      (@has_pure.pure.{u v} f (@applicative.to_has_pure.{u v} f c) β (g x))) m
    to_applicative)
  (@monad.map_pure._default.{v u} m to_applicative to_has_bind
    bind_pure_comp_eq_map pure_bind),0))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.{u v}"

mod: "IndMod(InductiveType(monad_fail,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)), Sort (max (u+2) (v+1))),1,Vector((monad_fail.mk,∀ {m : (∀ (a : Type u), Type v)} (to_monad : @monad.{u v} m)
  (fail : (∀ {a : Type u} (a_0 : @string), m a)),
@monad_fail.{u v} m)))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(has_map.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{(max (u+1) v)+1} (@has_map.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{(max (u+1) v)+1} (@has_map.{u v} f) (@has_map.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_map.sizeof.{u v}"

mod: "DefMod(Definition(functor.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{(max (u+1) v)+1} (@functor.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{(max (u+1) v)+1} (@functor.{u v} f) (@functor.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @functor.sizeof.{u v}"

mod: "DefMod(Definition(has_pure.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{max (u+2) (v+1)} (@has_pure.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{max (u+2) (v+1)} (@has_pure.{u v} f) (@has_pure.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_pure.sizeof.{u v}"

mod: "DefMod(Definition(has_seq.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{(max (u+1) v)+1} (@has_seq.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{(max (u+1) v)+1} (@has_seq.{u v} f) (@has_seq.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_seq.sizeof.{u v}"

mod: "DefMod(Definition(has_seq_left.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{(max (u+1) v)+1} (@has_seq_left.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{(max (u+1) v)+1} (@has_seq_left.{u v} f)
  (@has_seq_left.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_seq_left.sizeof.{u v}"

mod: "DefMod(Definition(has_seq_right.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{(max (u+1) v)+1} (@has_seq_right.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{(max (u+1) v)+1} (@has_seq_right.{u v} f)
  (@has_seq_right.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_seq_right.sizeof.{u v}"

mod: "DefMod(Definition(applicative.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (f : (∀ (a : Type u), Type v)),
@has_sizeof.{max (u+2) (v+1)} (@applicative.{u v} f),λ (f : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{max (u+2) (v+1)} (@applicative.{u v} f)
  (@applicative.sizeof.{u v} f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @applicative.sizeof.{u v}"

mod: "DefMod(Definition(has_bind.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)),
@has_sizeof.{max (u+2) (v+1)} (@has_bind.{u v} m),λ (m : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{max (u+2) (v+1)} (@has_bind.{u v} m) (@has_bind.sizeof.{u v} m),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_bind.sizeof.{u v}"

mod: "DefMod(Definition(monad.has_sizeof_inst,Vector(Param(u), Param(v)),∀ (m : (∀ (a : Type u), Type v)), @has_sizeof.{(max (u+1) v)+1} (@monad.{u v} m),λ (m : (∀ (a : Type u), Type v)),
@has_sizeof.mk.{(max (u+1) v)+1} (@monad.{u v} m) (@monad.sizeof.{u v} m),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.sizeof.{u v}"

mod: "DefMod(Definition(acc.rec_on,Vector(Param(l), Param(u)),∀ {α : Sort u} {r : (∀ (a_0 a_1 : α), Prop)} {C : (∀ (a_0 : α), Sort l)} {a : α}
  (n : @acc.{u} α r a)
  (e_1 :
    (∀ (x : α) (a_0 : (∀ (y : α) (a_1 : r y x), @acc.{u} α r y))
      (ih_1 : (∀ (y : α) (a_1 : r y x), C y)),
    C x)),
C a,λ {α : Sort u} {r : (∀ (a_0 a_1 : α), Prop)} {C : (∀ (a_0 : α), Sort l)} {a : α}
  (n : @acc.{u} α r a)
  (e_1 :
    (∀ (x : α) (a_0 : (∀ (y : α) (a_1 : r y x), @acc.{u} α r y))
      (ih_1 : (∀ (y : α) (a_1 : r y x), C y)),
    C x)),
@acc.rec.{l u} α r C e_1 a n,0))"
err: "java.util.NoSuchElementException: None.get"

mod: "DefMod(Definition(_private.1241109601.acc_aux,Vector(Param(u), Param(v)),∀ {α : Sort u} {β : Sort v} {r : (∀ (a_0 a_1 : β), Prop)} (f : (∀ (a_0 : α), β))
  {b : β} (ac : @acc.{v} β r b) (x : α) (a : @eq.{v} β (f x) b),
@acc.{u} α (@inv_image.{u v} α β r f) x,λ {α : Sort u} {β : Sort v} {r : (∀ (a a_0 : β), Prop)} (f : (∀ (a : α), β))
  {b : β} (ac : @acc.{v} β r b),
@acc.rec_on.{0 v} β r
  (λ (x : β),
  ∀ (x_0 : α) (a : @eq.{v} β (f x_0) x),
  @acc.{u} α (@inv_image.{u v} α β r f) x_0) b ac
  (λ (x : β) (acx : (∀ (y : β) (a : r y x), @acc.{v} β r y))
    (ih :
      (∀ (y : β) (a : r y x) (x_0 : α) (a_0 : @eq.{v} β (f x_0) y),
      @acc.{u} α (@inv_image.{u v} α β r f) x_0)) (z : α)
    (e : @eq.{v} β (f z) x),
  @acc.intro.{u} α (@inv_image.{u v} α β r f) z
    (λ (y : α) (lt : @inv_image.{u v} α β r f y z),
    @eq.rec_on.{0 v} β (f z)
      (λ (x_0 : β),
      ∀ (a : (∀ (y_0 : β) (a_1 : r y_0 x_0), @acc.{v} β r y_0))
        (a_0 :
          (∀ (y_0 : β) (a_1 : r y_0 x_0) (x_1 : α)
            (a_2 : @eq.{v} β (f x_1) y_0),
          @acc.{u} α (@inv_image.{u v} α β r f) x_1)),
      @acc.{u} α (@inv_image.{u v} α β r f) y) x e
      (λ (acx_0 : (∀ (y_0 : β) (a : r y_0 (f z)), @acc.{v} β r y_0))
        (ih_0 :
          (∀ (y_0 : β) (a : r y_0 (f z)) (x_0 : α)
            (a_0 : @eq.{v} β (f x_0) y_0),
          @acc.{u} α (@inv_image.{u v} α β r f) x_0)),
      ih_0 (f y) lt y (@rfl.{v} β (f y))) acx ih)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @acc.rec_on.{0 v}"

mod: "DefMod(Definition(_private.4173940857._private.1241109601.acc_aux.equations._eqn_1,Vector(Param(u), Param(v)),∀ {α : Sort u} {β : Sort v} {r : (∀ (a a_0 : β), Prop)} (f : (∀ (a : α), β))
  {b : β} (ac : @acc.{v} β r b),
@eq.{0}
  (∀ (x : α) (a : @eq.{v} β (f x) b), @acc.{u} α (@inv_image.{u v} α β r f) x)
  (@_private.1241109601.acc_aux.{u v} α β r f b ac)
  (@acc.rec_on.{0 v} β r
    (λ (x : β),
    ∀ (x_0 : α) (a : @eq.{v} β (f x_0) x),
    @acc.{u} α (@inv_image.{u v} α β r f) x_0) b ac
    (λ (x : β) (acx : (∀ (y : β) (a : r y x), @acc.{v} β r y))
      (ih :
        (∀ (y : β) (a : r y x) (x_0 : α) (a_0 : @eq.{v} β (f x_0) y),
        @acc.{u} α (@inv_image.{u v} α β r f) x_0)) (z : α)
      (e : @eq.{v} β (f z) x),
    @acc.intro.{u} α (@inv_image.{u v} α β r f) z
      (λ (y : α) (lt : @inv_image.{u v} α β r f y z),
      @eq.rec_on.{0 v} β (f z)
        (λ (x_0 : β),
        ∀ (a : (∀ (y_0 : β) (a_1 : r y_0 x_0), @acc.{v} β r y_0))
          (a_0 :
            (∀ (y_0 : β) (a_1 : r y_0 x_0) (x_1 : α)
              (a_2 : @eq.{v} β (f x_1) y_0),
            @acc.{u} α (@inv_image.{u v} α β r f) x_1)),
        @acc.{u} α (@inv_image.{u v} α β r f) y) x e
        (λ (acx_0 : (∀ (y_0 : β) (a : r y_0 (f z)), @acc.{v} β r y_0))
          (ih_0 :
            (∀ (y_0 : β) (a : r y_0 (f z)) (x_0 : α)
              (a_0 : @eq.{v} β (f x_0) y_0),
            @acc.{u} α (@inv_image.{u v} α β r f) x_0)),
        ih_0 (f y) lt y (@rfl.{v} β (f y))) acx ih))),λ {α : Sort u} {β : Sort v} {r : (∀ (a a_0 : β), Prop)} (f : (∀ (a : α), β))
  {b : β} (ac : @acc.{v} β r b),
@eq.refl.{0}
  (∀ (x : α) (a : @eq.{v} β (f x) b), @acc.{u} α (@inv_image.{u v} α β r f) x)
  (@_private.1241109601.acc_aux.{u v} α β r f b ac),0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.1241109601.acc_aux.{u v}"

mod: "DefMod(Definition(monoid.mul_assoc,Vector(Param(u)),∀ {α : Type u} [c : @monoid.{u} α] (a b c_0 : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c))
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c)) a b) c_0)
  (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c)) a
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c)) b c_0)),λ (α : Type u) [c : @monoid.{u} α],
@monoid.rec.{0 u} α
  (λ [c_0 : @monoid.{u} α],
  ∀ (a b c_1 : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c_0))
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c_0)) a b) c_1)
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c_0)) a
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@monoid.mul.{u} α c_0)) b c_1)))
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a)),
  mul_assoc) c,0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(monoid.to_semigroup,Vector(Param(u)),∀ (α : Type u) [s : @monoid.{u} α], @semigroup.{u} α,λ (α : Type u) [s : @monoid.{u} α],
@semigroup.mk.{u} α (@monoid.mul.{u} α s) (@monoid.mul_assoc.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.mul_assoc.{u}"

mod: "IndMod(InductiveType(group,Vector(Param(u)),∀ (α : Type u), Type u),1,Vector((group.mk,∀ {α : Type u} (mul : (∀ (a a_0 : α), α))
  (mul_assoc :
    (∀ (a b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
  (one_mul :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
        (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
  (mul_one :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
        (@has_one.one.{u} α (@has_one.mk.{u} α one))) a)) (inv : (∀ (a : α), α))
  (mul_left_inv :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
@group.{u} α)))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.to_semigroup.{u}"

mod: "DefMod(Definition(group.mul,Vector(Param(u)),∀ {α : Type u} [c : @group.{u} α] (a a_0 : α), α,λ (α : Type u) [c : @group.{u} α],
@group.rec.{u+1 u} α (λ [c_0 : @group.{u} α], ∀ (a a_0 : α), α)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  mul) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.mul_assoc,Vector(Param(u)),∀ {α : Type u} [c : @group.{u} α] (a b c_0 : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c))
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c)) a b) c_0)
  (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c)) a
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c)) b c_0)),λ (α : Type u) [c : @group.{u} α],
@group.rec.{0 u} α
  (λ [c_0 : @group.{u} α],
  ∀ (a b c_1 : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c_0))
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c_0)) a b) c_1)
    (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c_0)) a
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α (@group.mul.{u} α c_0)) b c_1)))
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  mul_assoc) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.one,Vector(Param(u)),∀ (α : Type u) [c : @group.{u} α], α,λ (α : Type u) [c : @group.{u} α],
@group.rec.{u+1 u} α (λ [c_0 : @group.{u} α], α)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  one) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.one_mul,Vector(Param(u)),∀ {α : Type u} [c : @group.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@semigroup.mk.{u} α (@group.mul.{u} α c) (@group.mul_assoc.{u} α c)))
    (@has_one.one.{u} α (@has_one.mk.{u} α (@group.one.{u} α c))) a) a,λ (α : Type u) [c : @group.{u} α],
@group.rec.{0 u} α
  (λ [c_0 : @group.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@semigroup.mk.{u} α (@group.mul.{u} α c_0)
          (@group.mul_assoc.{u} α c_0)))
      (@has_one.one.{u} α (@has_one.mk.{u} α (@group.one.{u} α c_0))) a) a)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  one_mul) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.mul_one,Vector(Param(u)),∀ {α : Type u} [c : @group.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@semigroup.mk.{u} α (@group.mul.{u} α c) (@group.mul_assoc.{u} α c))) a
    (@has_one.one.{u} α (@has_one.mk.{u} α (@group.one.{u} α c)))) a,λ (α : Type u) [c : @group.{u} α],
@group.rec.{0 u} α
  (λ [c_0 : @group.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@semigroup.mk.{u} α (@group.mul.{u} α c_0)
          (@group.mul_assoc.{u} α c_0))) a
      (@has_one.one.{u} α (@has_one.mk.{u} α (@group.one.{u} α c_0)))) a)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  mul_one) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.to_monoid,Vector(Param(u)),∀ (α : Type u) [s : @group.{u} α], @monoid.{u} α,λ (α : Type u) [s : @group.{u} α],
@monoid.mk.{u} α (@group.mul.{u} α s) (@group.mul_assoc.{u} α s)
  (@group.one.{u} α s) (@group.one_mul.{u} α s) (@group.mul_one.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.inv,Vector(Param(u)),∀ {α : Type u} [c : @group.{u} α] (a : α), α,λ (α : Type u) [c : @group.{u} α],
@group.rec.{u+1 u} α (λ [c_0 : @group.{u} α], ∀ (a : α), α)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  inv) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.to_has_inv,Vector(Param(u)),∀ (α : Type u) [s : @group.{u} α], @has_inv.{u} α,λ (α : Type u) [s : @group.{u} α], @has_inv.mk.{u} α (@group.inv.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.mul_left_inv,Vector(Param(u)),∀ {α : Type u} [c : @group.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@monoid.to_semigroup.{u} α
        (@monoid.mk.{u} α (@group.mul.{u} α c) (@group.mul_assoc.{u} α c)
          (@group.one.{u} α c) (@group.one_mul.{u} α c)
          (@group.mul_one.{u} α c))))
    (@has_inv.inv.{u} α (@has_inv.mk.{u} α (@group.inv.{u} α c)) a) a)
  (@has_one.one.{u} α
    (@monoid.to_has_one.{u} α
      (@monoid.mk.{u} α (@group.mul.{u} α c) (@group.mul_assoc.{u} α c)
        (@group.one.{u} α c) (@group.one_mul.{u} α c)
        (@group.mul_one.{u} α c)))),λ (α : Type u) [c : @group.{u} α],
@group.rec.{0 u} α
  (λ [c_0 : @group.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@monoid.to_semigroup.{u} α
          (@monoid.mk.{u} α (@group.mul.{u} α c_0) (@group.mul_assoc.{u} α c_0)
            (@group.one.{u} α c_0) (@group.one_mul.{u} α c_0)
            (@group.mul_one.{u} α c_0))))
      (@has_inv.inv.{u} α (@has_inv.mk.{u} α (@group.inv.{u} α c_0)) a) a)
    (@has_one.one.{u} α
      (@monoid.to_has_one.{u} α
        (@monoid.mk.{u} α (@group.mul.{u} α c_0) (@group.mul_assoc.{u} α c_0)
          (@group.one.{u} α c_0) (@group.one_mul.{u} α c_0)
          (@group.mul_one.{u} α c_0)))))
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  mul_left_inv) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(mul_left_inv,Vector(Param(u)),∀ {α : Type u} [inst_1 : @group.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a)
  (@has_one.one.{u} α
    (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))),λ {α : Type u} [inst_1 : @group.{u} α], @group.mul_left_inv.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(monoid.mul_one,Vector(Param(u)),∀ {α : Type u} [c : @monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@semigroup.mk.{u} α (@monoid.mul.{u} α c) (@monoid.mul_assoc.{u} α c))) a
    (@has_one.one.{u} α (@has_one.mk.{u} α (@monoid.one.{u} α c)))) a,λ (α : Type u) [c : @monoid.{u} α],
@monoid.rec.{0 u} α
  (λ [c_0 : @monoid.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@semigroup.mk.{u} α (@monoid.mul.{u} α c_0)
          (@monoid.mul_assoc.{u} α c_0))) a
      (@has_one.one.{u} α (@has_one.mk.{u} α (@monoid.one.{u} α c_0)))) a)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a)),
  mul_one) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.mul_assoc.{u}"

mod: "DefMod(Definition(mul_one,Vector(Param(u)),∀ {α : Type u} [inst_1 : @monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α (@monoid.to_semigroup.{u} α inst_1)) a
    (@has_one.one.{u} α (@monoid.to_has_one.{u} α inst_1))) a,λ {α : Type u} [inst_1 : @monoid.{u} α], @monoid.mul_one.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.mul_one.{u}"

mod: "DefMod(Definition(inv_mul_cancel_right,Vector(Param(u)),∀ {α : Type u} [inst_1 : @group.{u} α] (a b : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
      (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b) a,λ {α : Type u} [inst_1 : @group.{u} α] (a b : α),
@eq.mpr.{0}
  (@eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b) a) @true
  (@id_locked.{0}
    (@eq.{1} Prop
      (@eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b) a)
      @true)
    (@eq.trans.{1} Prop
      (@eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b) a)
      (@eq.{u+1} α a a) @true
      ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
          (e_2 : @eq.{u+1} α a_2 a_3),
        @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
          (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
            (@eq.{u+1} α) e_1) e_2)
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b) a
        (@eq.trans.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) a
          (@eq.trans.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) b)
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b) b))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              (@has_one.one.{u} α
                (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
            (@mul_assoc.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)) a
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b) b)
            ((λ [c : @has_mul.{u} α] (a_0 a_1 : α) (e_2 : @eq.{u+1} α a_0 a_1)
                (a_2 a_3 : α) (e_3 : @eq.{u+1} α a_2 a_3),
              @congr.{u+1 u+1} α α (@has_mul.mul.{u} α c a_0)
                (@has_mul.mul.{u} α c a_1) a_2 a_3
                (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                  (@has_mul.mul.{u} α c) e_2) e_3)
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              a (@eq.refl.{u+1} α a)
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b) b)
              (@has_one.one.{u} α
                (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
              (@mul_left_inv.{u} α inst_1 b)))
          (@mul_one.{u} α (@group.to_monoid.{u} α inst_1) a)) a a
        (@eq.refl.{u+1} α a))
      (@propext (@eq.{u+1} α a a) @true (@eq_self_iff_true.{u+1} α a))))
  @trivial,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(subrelation.accessible,Vector(Param(u)),∀ {α : Sort u} {r Q : (∀ (a_0 a_1 : α), Prop)} (h : @subrelation.{u} α Q r)
  {a : α} (ac : @acc.{u} α r a),
@acc.{u} α Q a,λ {α : Sort u} {r Q : (∀ (a_0 a_1 : α), Prop)} (h : @subrelation.{u} α Q r)
  {a : α} (ac : @acc.{u} α r a),
@acc.rec_on.{0 u} α r (λ (x : α), @acc.{u} α Q x) a ac
  (λ (x : α) (ax : (∀ (y : α) (a_0 : r y x), @acc.{u} α r y))
    (ih : (∀ (y : α) (a_0 : r y x), @acc.{u} α Q y)),
  @acc.intro.{u} α Q x (λ (y : α) (lt : Q y x), ih y (h y x lt))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @acc.rec_on.{0 u}"

mod: "DefMod(Definition(subrelation.wf,Vector(Param(u)),∀ {α : Sort u} {r Q : (∀ (a a_0 : α), Prop)} (h : @subrelation.{u} α Q r)
  (h_0 : @well_founded.{u} α r),
@well_founded.{u} α Q,λ {α : Sort u} {r Q : (∀ (a a_0 : α), Prop)} (h : @subrelation.{u} α Q r)
  (h_0 : @well_founded.{u} α r),
@well_founded.intro.{u} α Q
  (λ (a : α),
  @subrelation.accessible.{u} α r Q h a (@well_founded.apply.{u} α r h_0 a)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @subrelation.accessible.{u}"

mod: "DefMod(Definition(prod.lex_accessible,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} {ra : (∀ (a_0 a_1 : α), Prop)}
  {rb : (∀ (a_0 a_1 : β), Prop)} {a : α} (aca : @acc.{u+1} α ra a)
  (acb : (∀ (b_0 : β), @acc.{v+1} β rb b_0)) (b : β),
@acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
  (@prod.mk.{u v} α β a b),λ {α : Type u} {β : Type v} {ra : (∀ (a_0 a_1 : α), Prop)}
  {rb : (∀ (a_0 a_1 : β), Prop)} {a : α} (aca : @acc.{u+1} α ra a)
  (acb : (∀ (b : β), @acc.{v+1} β rb b)),
@acc.rec_on.{0 u+1} α ra
  (λ (x : α),
  ∀ (b : β),
  @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
    (@prod.mk.{u v} α β x b)) a aca
  (λ (xa : α) (aca_0 : (∀ (y : α) (a_0 : ra y xa), @acc.{u+1} α ra y))
    (iha :
      (∀ (y : α) (a_0 : ra y xa) (b_0 : β),
      @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
        (@prod.mk.{u v} α β y b_0))) (b : β),
  @acc.rec_on.{0 v+1} β rb
    (λ (x : β),
    @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
      (@prod.mk.{u v} α β xa x)) b (acb b)
    (λ (xb : β) (acb_0 : (∀ (y : β) (a_0 : rb y xb), @acc.{v+1} β rb y))
      (ihb :
        (∀ (y : β) (a_0 : rb y xb),
        @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
          (@prod.mk.{u v} α β xa y))),
    @acc.intro.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
      (@prod.mk.{u v} α β xa xb)
      (λ (p : @prod.{u v} α β)
        (lt : @prod.lex.{u v} α β ra rb p (@prod.mk.{u v} α β xa xb)),
      (λ (aux :
            (∀ (a_0 : @eq.{u+1} α xa xa) (a_1 : @eq.{v+1} β xb xb),
            @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
              p)),
        aux (@rfl.{u+1} α xa) (@rfl.{v+1} β xb))
        (@prod.lex.rec_on.{u v} α β ra rb
          (λ (p_0 p_1 : @prod.{u v} α β),
          ∀ (a_0 : @eq.{u+1} α (@prod.fst.{u v} α β p_1) xa)
            (a_1 : @eq.{v+1} β (@prod.snd.{u v} α β p_1) xb),
          @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
            p_0) p (@prod.mk.{u v} α β xa xb) lt
          (λ (a_0 : α) (b_0 : β) (a_1 : α) (b_1 : β) (h : ra a_0 a_1)
            (eq : @eq.{u+1} α a_1 xa) (eq_0 : @eq.{v+1} β b_1 xb),
          iha a_0 (@eq.rec_on.{0 u+1} α a_1 (λ (x : α), ra a_0 x) xa eq h) b_0)
          (λ (a_0 : α) (b_0 b_1 : β) (h : rb b_0 b_1) (eq : @eq.{u+1} α a_0 xa)
            (eq_0 : @eq.{v+1} β b_1 xb),
          @eq.rec_on.{0 u+1} α xa
            (λ (x : α),
            @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb)
              (@prod.mk.{u v} α β x b_0)) a_0 (@eq.symm.{u+1} α a_0 xa eq)
            (ihb b_0
              (@eq.rec_on.{0 v+1} β b_1 (λ (x : β), rb b_0 x) xb eq_0 h))))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @acc.rec_on.{0 u+1}"

mod: "DefMod(Definition(prod.lex_wf,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@well_founded.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb),λ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@well_founded.intro.{max (u+1) (v+1)} (@prod.{u v} α β)
  (@prod.lex.{u v} α β ra rb)
  (λ (p : @prod.{u v} α β),
  @prod.cases_on.{0 u v} α β
    (λ (x : @prod.{u v} α β),
    @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb) x) p
    (λ (a : α) (b : β),
    @prod.lex_accessible.{u v} α β ra rb a (@well_founded.apply.{u+1} α ra ha a)
      (@well_founded.apply.{v+1} β rb hb) b)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.lex_accessible.{u v}"

mod: "DefMod(Definition(prod.rprod_wf,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@well_founded.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.rprod.{u v} α β ra rb),λ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@subrelation.wf.{max (u+1) (v+1)} (@prod.{u v} α β)
  (λ (a b : @prod.{u v} α β), @prod.lex.{u v} α β ra rb a b)
  (@prod.rprod.{u v} α β ra rb) (@prod.rprod_sub_lex.{u v} α β ra rb)
  (@prod.lex_wf.{u v} α β ra rb ha hb),0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.lex_wf.{u v}"

mod: "DefMod(Definition(prod.rprod_wf.equations._eqn_1,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@eq.{0}
  (@well_founded.{max (u+1) (v+1)} (@prod.{u v} α β)
    (@prod.rprod.{u v} α β ra rb)) (@prod.rprod_wf.{u v} α β ra rb ha hb)
  (@subrelation.wf.{max (u+1) (v+1)} (@prod.{u v} α β)
    (λ (a b : @prod.{u v} α β), @prod.lex.{u v} α β ra rb a b)
    (@prod.rprod.{u v} α β ra rb) (@prod.rprod_sub_lex.{u v} α β ra rb)
    (@prod.lex_wf.{u v} α β ra rb ha hb)),λ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@eq.refl.{0}
  (@well_founded.{max (u+1) (v+1)} (@prod.{u v} α β)
    (@prod.rprod.{u v} α β ra rb)) (@prod.rprod_wf.{u v} α β ra rb ha hb),0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.rprod_wf.{u v}"

mod: "DefMod(Definition(comm_semigroup.mk.sizeof_spec,Vector(Param(u)),∀ (α : Type u) (mul : (∀ (a a_0 : α), α))
  (mul_assoc :
    (∀ (a b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c))))
  (mul_comm :
    (∀ (a b : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a b)
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
        a))),
@eq.{1} @nat
  (@comm_semigroup.sizeof.{u} α
    (@comm_semigroup.mk.{u} α mul mul_assoc mul_comm))
  (@has_one.one.{0} @nat @nat.has_one),λ (α : Type u) (mul : (∀ (a a_0 : α), α))
  (mul_assoc :
    (∀ (a b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c))))
  (mul_comm :
    (∀ (a b : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a b)
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
        a))),
@eq.refl.{1} @nat
  (@comm_semigroup.sizeof.{u} α
    (@comm_semigroup.mk.{u} α mul mul_assoc mul_comm)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @comm_semigroup.sizeof.{u}"

mod: "DefMod(Definition(monoid.one_mul,Vector(Param(u)),∀ {α : Type u} [c : @monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@semigroup.mk.{u} α (@monoid.mul.{u} α c) (@monoid.mul_assoc.{u} α c)))
    (@has_one.one.{u} α (@has_one.mk.{u} α (@monoid.one.{u} α c))) a) a,λ (α : Type u) [c : @monoid.{u} α],
@monoid.rec.{0 u} α
  (λ [c_0 : @monoid.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@semigroup.mk.{u} α (@monoid.mul.{u} α c_0)
          (@monoid.mul_assoc.{u} α c_0)))
      (@has_one.one.{u} α (@has_one.mk.{u} α (@monoid.one.{u} α c_0))) a) a)
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c_0)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a)),
  one_mul) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.mul_assoc.{u}"

mod: "DefMod(Definition(one_mul,Vector(Param(u)),∀ {α : Type u} [inst_1 : @monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α (@monoid.to_semigroup.{u} α inst_1))
    (@has_one.one.{u} α (@monoid.to_has_one.{u} α inst_1)) a) a,λ {α : Type u} [inst_1 : @monoid.{u} α], @monoid.one_mul.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.one_mul.{u}"

mod: "DefMod(Definition(inv_eq_of_mul_eq_one,Vector(Param(u)),∀ {α : Type u} [inst_1 : @group.{u} α] {a b : α}
  (h :
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))),
@eq.{u+1} α (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) b,λ {α : Type u} [inst_1 : @group.{u} α] {a b : α}
  (h :
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))),
@eq.mpr.{0}
  (@eq.{u+1} α (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) b)
  (@eq.{u+1} α
    (@has_mul.mul.{u} α
      (@semigroup.to_has_mul.{u} α
        (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
      (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) b)
  (@id_locked.{0}
    (@eq.{1} Prop
      (@eq.{u+1} α (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) b)
      (@eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) b))
    (@eq.rec.{0 u+1} α (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
      (λ (a_0 : α),
      @eq.{1} Prop
        (@eq.{u+1} α (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) b)
        (@eq.{u+1} α a_0 b))
      (@eq.refl.{1} Prop
        (@eq.{u+1} α (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) b))
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
      (@eq.symm.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
        (@mul_one.{u} α (@group.to_monoid.{u} α inst_1)
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)))))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) b)
    (@eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b))
      b)
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) b)
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              b)) b))
      (@eq.rec.{0 u+1} α
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
              (@has_one.one.{u} α
                (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) b)
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a_0) b))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
              (@has_one.one.{u} α
                (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) b))
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
        (@eq.symm.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))) h)))
    (@eq.mpr.{0}
      (@eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
            b)) b)
      (@eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a) b) b)
      (@id_locked.{0}
        (@eq.{1} Prop
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a b)) b)
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a) b)
            b))
        (@eq.rec.{0 u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              b))
          (λ (a_0 : α),
          @eq.{1} Prop
            (@eq.{u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) a b)) b)
            (@eq.{u+1} α a_0 b))
          (@eq.refl.{1} Prop
            (@eq.{u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) a b)) b))
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a) b)
          (@eq.symm.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a) b)
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a b))
            (@mul_assoc.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a b))))
      (@eq.mpr.{0}
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a) b) b)
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))) b) b)
        (@id_locked.{0}
          (@eq.{1} Prop
            (@eq.{u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1)))
                  (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a) b)
              b)
            (@eq.{u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_one.one.{u} α
                  (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))) b)
              b))
          (@eq.rec.{0 u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a)
            (λ (a_0 : α),
            @eq.{1} Prop
              (@eq.{u+1} α
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1)))
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a)
                  b) b)
              (@eq.{u+1} α
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) a_0 b) b))
            (@eq.refl.{1} Prop
              (@eq.{u+1} α
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1)))
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a)
                  b) b))
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
            (@mul_left_inv.{u} α inst_1 a)))
        (@eq.mpr.{0}
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_one.one.{u} α
                (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))) b)
            b) (@eq.{u+1} α b b)
          (@id_locked.{0}
            (@eq.{1} Prop
              (@eq.{u+1} α
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1)))
                  (@has_one.one.{u} α
                    (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
                  b) b) (@eq.{u+1} α b b))
            (@eq.rec.{0 u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_one.one.{u} α
                  (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))) b)
              (λ (a_0 : α),
              @eq.{1} Prop
                (@eq.{u+1} α
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_one.one.{u} α
                      (@monoid.to_has_one.{u} α
                        (@group.to_monoid.{u} α inst_1))) b) b)
                (@eq.{u+1} α a_0 b))
              (@eq.refl.{1} Prop
                (@eq.{u+1} α
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_one.one.{u} α
                      (@monoid.to_has_one.{u} α
                        (@group.to_monoid.{u} α inst_1))) b) b)) b
              (@one_mul.{u} α (@group.to_monoid.{u} α inst_1) b)))
          (@eq.refl.{u+1} α b))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(inv_inv,Vector(Param(u)),∀ {α : Type u} [inst_1 : @group.{u} α] (a : α),
@eq.{u+1} α
  (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a)) a,λ {α : Type u} [inst_1 : @group.{u} α] (a : α),
@inv_eq_of_mul_eq_one.{u} α inst_1
  (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a) a
  (@mul_left_inv.{u} α inst_1 a),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(mul_right_inv,Vector(Param(u)),∀ {α : Type u} [inst_1 : @group.{u} α] (a : α),
@eq.{u+1} α
  (@has_mul.mul.{u} α
    (@semigroup.to_has_mul.{u} α
      (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
  (@has_one.one.{u} α
    (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))),λ {α : Type u} [inst_1 : @group.{u} α] (a : α),
(λ (this :
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))),
  @eq.mp.{0}
    (@eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
    (@eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
    (@eq.rec.{0 u+1} α
      (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
      (λ (a_0 : α),
      @eq.{1} Prop
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a_0
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))))
      (@eq.refl.{1} Prop
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))) a
      (@inv_inv.{u} α inst_1 a)) this)
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
    (@eq.{u+1} α
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
        (@eq.{u+1} α
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))))
      (@eq.rec.{0 u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
            (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
          (@eq.{u+1} α a_0
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1)
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
              (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))
            (@has_one.one.{u} α
              (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))))
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
        (@mul_left_inv.{u} α inst_1
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) a))))
    (@eq.refl.{u+1} α
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.mul_right_cancel,Vector(Param(u)),∀ {α : Type u} [inst_1 : @group.{u} α] {a b c : α}
  (h :
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) c b)),
@eq.{u+1} α a c,λ {α : Type u} [inst_1 : @group.{u} α] {a b c : α}
  (h :
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) c b)),
(λ (this :
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
          (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) a),
  @eq.mpr.{0} (@eq.{u+1} α a c) (@eq.{u+1} α a a)
    (@id_locked.{0} (@eq.{1} Prop (@eq.{u+1} α a c) (@eq.{u+1} α a a))
      (@eq.rec.{0 u+1} α c
        (λ (a_0 : α), @eq.{1} Prop (@eq.{u+1} α a c) (@eq.{u+1} α a a_0))
        (@eq.refl.{1} Prop (@eq.{u+1} α a c)) a
        (@eq.mp.{0}
          (@eq.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a b) (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) a)
          (@eq.{u+1} α c a)
          ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
              (e_2 : @eq.{u+1} α a_2 a_3),
            @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
              (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
                (@eq.{u+1} α) e_1) e_2)
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a b) (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) c
            (@eq.trans.{u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) a b)
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                c
                (@has_one.one.{u} α
                  (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) c
              (@eq.trans.{u+1} α
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1)))
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1))) a b)
                  (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) c
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1))) b
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)))
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) c
                  (@has_one.one.{u} α
                    (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
                (@eq.trans.{u+1} α
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_mul.mul.{u} α
                      (@semigroup.to_has_mul.{u} α
                        (@monoid.to_semigroup.{u} α
                          (@group.to_monoid.{u} α inst_1))) a b)
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_mul.mul.{u} α
                      (@semigroup.to_has_mul.{u} α
                        (@monoid.to_semigroup.{u} α
                          (@group.to_monoid.{u} α inst_1))) c b)
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1))) c
                    (@has_mul.mul.{u} α
                      (@semigroup.to_has_mul.{u} α
                        (@monoid.to_semigroup.{u} α
                          (@group.to_monoid.{u} α inst_1))) b
                      (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)))
                  ((λ [c_0 : @has_mul.{u} α] (a_0 a_1 : α)
                      (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                      (e_3 : @eq.{u+1} α a_2 a_3),
                    @congr.{u+1 u+1} α α (@has_mul.mul.{u} α c_0 a_0)
                      (@has_mul.mul.{u} α c_0 a_1) a_2 a_3
                      (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                        (@has_mul.mul.{u} α c_0) e_2) e_3)
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1)))
                    (@has_mul.mul.{u} α
                      (@semigroup.to_has_mul.{u} α
                        (@monoid.to_semigroup.{u} α
                          (@group.to_monoid.{u} α inst_1))) a b)
                    (@has_mul.mul.{u} α
                      (@semigroup.to_has_mul.{u} α
                        (@monoid.to_semigroup.{u} α
                          (@group.to_monoid.{u} α inst_1))) c b) h
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)
                    (@eq.refl.{u+1} α
                      (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)))
                  (@mul_assoc.{u} α
                    (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))
                    c b
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)))
                ((λ [c_0 : @has_mul.{u} α] (a_0 a_1 : α)
                    (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                    (e_3 : @eq.{u+1} α a_2 a_3),
                  @congr.{u+1 u+1} α α (@has_mul.mul.{u} α c_0 a_0)
                    (@has_mul.mul.{u} α c_0 a_1) a_2 a_3
                    (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                      (@has_mul.mul.{u} α c_0) e_2) e_3)
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) c c (@eq.refl.{u+1} α c)
                  (@has_mul.mul.{u} α
                    (@semigroup.to_has_mul.{u} α
                      (@monoid.to_semigroup.{u} α
                        (@group.to_monoid.{u} α inst_1))) b
                    (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
                  (@has_one.one.{u} α
                    (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
                  (@mul_right_inv.{u} α inst_1 b)))
              (@mul_one.{u} α (@group.to_monoid.{u} α inst_1) c)) a a
            (@eq.refl.{u+1} α a)) this))) (@eq.refl.{u+1} α a))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a b)
        (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) a) @true
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              b) (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) a)
        @true)
      (@eq.trans.{1} Prop
        (@eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              b) (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) a)
        (@eq.{u+1} α a a) @true
        ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
            (e_2 : @eq.{u+1} α a_2 a_3),
          @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
            (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
              (@eq.{u+1} α) e_1) e_2)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              b) (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)) a
          (@eq.trans.{u+1} α
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a b) (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
            (@has_mul.mul.{u} α
              (@semigroup.to_has_mul.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1))) a
              (@has_one.one.{u} α
                (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))) a
            (@eq.trans.{u+1} α
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) a b)
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) b
                  (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b)))
              (@has_mul.mul.{u} α
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a
                (@has_one.one.{u} α
                  (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1))))
              (@mul_assoc.{u} α
                (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)) a b
                (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
              ((λ [c_0 : @has_mul.{u} α] (a_0 a_1 : α)
                  (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                  (e_3 : @eq.{u+1} α a_2 a_3),
                @congr.{u+1 u+1} α α (@has_mul.mul.{u} α c_0 a_0)
                  (@has_mul.mul.{u} α c_0 a_1) a_2 a_3
                  (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                    (@has_mul.mul.{u} α c_0) e_2) e_3)
                (@semigroup.to_has_mul.{u} α
                  (@monoid.to_semigroup.{u} α (@group.to_monoid.{u} α inst_1)))
                a a (@eq.refl.{u+1} α a)
                (@has_mul.mul.{u} α
                  (@semigroup.to_has_mul.{u} α
                    (@monoid.to_semigroup.{u} α
                      (@group.to_monoid.{u} α inst_1))) b
                  (@has_inv.inv.{u} α (@group.to_has_inv.{u} α inst_1) b))
                (@has_one.one.{u} α
                  (@monoid.to_has_one.{u} α (@group.to_monoid.{u} α inst_1)))
                (@mul_right_inv.{u} α inst_1 b)))
            (@mul_one.{u} α (@group.to_monoid.{u} α inst_1) a)) a a
          (@eq.refl.{u+1} α a))
        (@propext (@eq.{u+1} α a a) @true (@eq_self_iff_true.{u+1} α a))))
    @trivial),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(prod.cmp._main,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} [inst_1 : @has_ordering.{u} α]
  [inst_2 : @has_ordering.{v} β] (a a_0 : @prod.{u v} α β),
@ordering,λ {α : Type u} {β : Type v} [inst_1 : @has_ordering.{u} α]
  [inst_2 : @has_ordering.{v} β] (a a_0 : @prod.{u v} α β),
@prod.cases_on.{1 u v} α β (λ (a_1 : @prod.{u v} α β), @ordering) a
  (λ (fst : α) (snd : β),
  @prod.cases_on.{1 u v} α β (λ (a_1 : @prod.{u v} α β), @ordering) a_0
    (λ (fst_1 : α) (snd_1 : β),
    @ordering.or_else (@has_ordering.cmp.{u} α inst_1 fst fst_1)
      (λ (a_1 : @unit), @has_ordering.cmp.{v} β inst_2 snd snd_1))),0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(prod.cmp,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} [inst_1 : @has_ordering.{u} α]
  [inst_2 : @has_ordering.{v} β] (a a_0 : @prod.{u v} α β),
@ordering,λ {α : Type u} {β : Type v} [inst_1 : @has_ordering.{u} α]
  [inst_2 : @has_ordering.{v} β],
@prod.cmp._main.{u v} α β inst_1 inst_2,0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.cmp._main.{u v}"

mod: "DefMod(Definition(prod.has_ordering,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} [inst_3 : @has_ordering.{u} α]
  [inst_4 : @has_ordering.{v} β],
@has_ordering.{max u v} (@prod.{u v} α β),λ {α : Type u} {β : Type v} [inst_3 : @has_ordering.{u} α]
  [inst_4 : @has_ordering.{v} β],
@has_ordering.mk.{max u v} (@prod.{u v} α β) (@prod.cmp.{u v} α β inst_3 inst_4),0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.cmp.{u v}"

mod: "DefMod(Definition(prod.has_ordering.equations._eqn_1,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} [inst_3 : @has_ordering.{u} α]
  [inst_4 : @has_ordering.{v} β],
@eq.{(max u v)+1} (@has_ordering.{max u v} (@prod.{u v} α β))
  (@prod.has_ordering.{u v} α β inst_3 inst_4)
  (@has_ordering.mk.{max u v} (@prod.{u v} α β)
    (@prod.cmp.{u v} α β inst_3 inst_4)),λ {α : Type u} {β : Type v} [inst_3 : @has_ordering.{u} α]
  [inst_4 : @has_ordering.{v} β],
@eq.refl.{(max u v)+1} (@has_ordering.{max u v} (@prod.{u v} α β))
  (@prod.has_ordering.{u v} α β inst_3 inst_4),0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.has_ordering.{u v}"

mod: "DefMod(Definition(add_monoid.add_assoc,Vector(Param(u)),∀ {α : Type u} [c : @add_monoid.{u} α] (a b c_0 : α),
@eq.{u+1} α
  (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c))
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c)) a b) c_0)
  (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c)) a
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c)) b c_0)),λ (α : Type u) [c : @add_monoid.{u} α],
@add_monoid.rec.{0 u} α
  (λ [c_0 : @add_monoid.{u} α],
  ∀ (a b c_1 : α),
  @eq.{u+1} α
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c_0))
      (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c_0)) a b)
      c_1)
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c_0)) a
      (@has_add.add.{u} α (@has_add.mk.{u} α (@add_monoid.add.{u} α c_0)) b
        c_1)))
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a)),
  add_assoc) c,0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(add_monoid.to_add_semigroup,Vector(Param(u)),∀ (α : Type u) [s : @add_monoid.{u} α], @add_semigroup.{u} α,λ (α : Type u) [s : @add_monoid.{u} α],
@add_semigroup.mk.{u} α (@add_monoid.add.{u} α s)
  (@add_monoid.add_assoc.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_monoid.add_assoc.{u}"

mod: "IndMod(InductiveType(add_group,Vector(Param(u)),∀ (α : Type u), Type u),1,Vector((add_group.mk,∀ {α : Type u} (add : (∀ (a a_0 : α), α))
  (add_assoc :
    (∀ (a b c : α),
    @eq.{u+1} α
      (@has_add.add.{u} α (@has_add.mk.{u} α add)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c)
      (@has_add.add.{u} α (@has_add.mk.{u} α add) a
        (@has_add.add.{u} α (@has_add.mk.{u} α add) b c)))) (zero : α)
  (zero_add :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_semigroup.mk.{u} α add add_assoc))
        (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
  (add_zero :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_semigroup.mk.{u} α add add_assoc)) a
        (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
  (neg : (∀ (a : α), α))
  (add_left_neg :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
        (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
@add_group.{u} α)))"
err: "provingground.interface.UnParsedException: could not parse expression @add_monoid.to_add_semigroup.{u}"

mod: "DefMod(Definition(add_group.add,Vector(Param(u)),∀ {α : Type u} [c : @add_group.{u} α] (a a_0 : α), α,λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{u+1 u} α (λ [c_0 : @add_group.{u} α], ∀ (a a_0 : α), α)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  add) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.add_assoc,Vector(Param(u)),∀ {α : Type u} [c : @add_group.{u} α] (a b c_0 : α),
@eq.{u+1} α
  (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c))
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c)) a b) c_0)
  (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c)) a
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c)) b c_0)),λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{0 u} α
  (λ [c_0 : @add_group.{u} α],
  ∀ (a b c_1 : α),
  @eq.{u+1} α
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c_0))
      (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c_0)) a b)
      c_1)
    (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c_0)) a
      (@has_add.add.{u} α (@has_add.mk.{u} α (@add_group.add.{u} α c_0)) b
        c_1)))
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  add_assoc) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.zero,Vector(Param(u)),∀ (α : Type u) [c : @add_group.{u} α], α,λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{u+1 u} α (λ [c_0 : @add_group.{u} α], α)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  zero) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.zero_add,Vector(Param(u)),∀ {α : Type u} [c : @add_group.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_semigroup.mk.{u} α (@add_group.add.{u} α c)
        (@add_group.add_assoc.{u} α c)))
    (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_group.zero.{u} α c))) a) a,λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{0 u} α
  (λ [c_0 : @add_group.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_semigroup.mk.{u} α (@add_group.add.{u} α c_0)
          (@add_group.add_assoc.{u} α c_0)))
      (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_group.zero.{u} α c_0))) a)
    a)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  zero_add) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.add_zero,Vector(Param(u)),∀ {α : Type u} [c : @add_group.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_semigroup.mk.{u} α (@add_group.add.{u} α c)
        (@add_group.add_assoc.{u} α c))) a
    (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_group.zero.{u} α c)))) a,λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{0 u} α
  (λ [c_0 : @add_group.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_semigroup.mk.{u} α (@add_group.add.{u} α c_0)
          (@add_group.add_assoc.{u} α c_0))) a
      (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_group.zero.{u} α c_0))))
    a)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  add_zero) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.to_add_monoid,Vector(Param(u)),∀ (α : Type u) [s : @add_group.{u} α], @add_monoid.{u} α,λ (α : Type u) [s : @add_group.{u} α],
@add_monoid.mk.{u} α (@add_group.add.{u} α s) (@add_group.add_assoc.{u} α s)
  (@add_group.zero.{u} α s) (@add_group.zero_add.{u} α s)
  (@add_group.add_zero.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.neg,Vector(Param(u)),∀ {α : Type u} [c : @add_group.{u} α] (a : α), α,λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{u+1 u} α (λ [c_0 : @add_group.{u} α], ∀ (a : α), α)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  neg) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.to_has_neg,Vector(Param(u)),∀ (α : Type u) [s : @add_group.{u} α], @has_neg.{u} α,λ (α : Type u) [s : @add_group.{u} α],
@has_neg.mk.{u} α (@add_group.neg.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_monoid.add_zero,Vector(Param(u)),∀ {α : Type u} [c : @add_monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_semigroup.mk.{u} α (@add_monoid.add.{u} α c)
        (@add_monoid.add_assoc.{u} α c))) a
    (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_monoid.zero.{u} α c)))) a,λ (α : Type u) [c : @add_monoid.{u} α],
@add_monoid.rec.{0 u} α
  (λ [c_0 : @add_monoid.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_semigroup.mk.{u} α (@add_monoid.add.{u} α c_0)
          (@add_monoid.add_assoc.{u} α c_0))) a
      (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_monoid.zero.{u} α c_0))))
    a)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a)),
  add_zero) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_monoid.add_assoc.{u}"

mod: "DefMod(Definition(add_zero,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α inst_1)) a
    (@has_zero.zero.{u} α (@add_monoid.to_has_zero.{u} α inst_1))) a,λ {α : Type u} [inst_1 : @add_monoid.{u} α], @add_monoid.add_zero.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_monoid.add_zero.{u}"

mod: "DefMod(Definition(add_group.add_left_neg,Vector(Param(u)),∀ {α : Type u} [c : @add_group.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_monoid.mk.{u} α (@add_group.add.{u} α c)
          (@add_group.add_assoc.{u} α c) (@add_group.zero.{u} α c)
          (@add_group.zero_add.{u} α c) (@add_group.add_zero.{u} α c))))
    (@has_neg.neg.{u} α (@has_neg.mk.{u} α (@add_group.neg.{u} α c)) a) a)
  (@has_zero.zero.{u} α
    (@add_monoid.to_has_zero.{u} α
      (@add_monoid.mk.{u} α (@add_group.add.{u} α c)
        (@add_group.add_assoc.{u} α c) (@add_group.zero.{u} α c)
        (@add_group.zero_add.{u} α c) (@add_group.add_zero.{u} α c)))),λ (α : Type u) [c : @add_group.{u} α],
@add_group.rec.{0 u} α
  (λ [c_0 : @add_group.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_monoid.mk.{u} α (@add_group.add.{u} α c_0)
            (@add_group.add_assoc.{u} α c_0) (@add_group.zero.{u} α c_0)
            (@add_group.zero_add.{u} α c_0) (@add_group.add_zero.{u} α c_0))))
      (@has_neg.neg.{u} α (@has_neg.mk.{u} α (@add_group.neg.{u} α c_0)) a) a)
    (@has_zero.zero.{u} α
      (@add_monoid.to_has_zero.{u} α
        (@add_monoid.mk.{u} α (@add_group.add.{u} α c_0)
          (@add_group.add_assoc.{u} α c_0) (@add_group.zero.{u} α c_0)
          (@add_group.zero_add.{u} α c_0) (@add_group.add_zero.{u} α c_0)))))
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a))
    (neg : (∀ (a : α), α))
    (add_left_neg :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero)))
          (@has_neg.neg.{u} α (@has_neg.mk.{u} α neg) a) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_monoid.mk.{u} α add add_assoc zero zero_add add_zero))))),
  add_left_neg) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_left_neg,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1)))
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
  (@has_zero.zero.{u} α
    (@add_monoid.to_has_zero.{u} α (@add_group.to_add_monoid.{u} α inst_1))),λ {α : Type u} [inst_1 : @add_group.{u} α], @add_group.add_left_neg.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_monoid.zero_add,Vector(Param(u)),∀ {α : Type u} [c : @add_monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_semigroup.mk.{u} α (@add_monoid.add.{u} α c)
        (@add_monoid.add_assoc.{u} α c)))
    (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_monoid.zero.{u} α c))) a) a,λ (α : Type u) [c : @add_monoid.{u} α],
@add_monoid.rec.{0 u} α
  (λ [c_0 : @add_monoid.{u} α],
  ∀ (a : α),
  @eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_semigroup.mk.{u} α (@add_monoid.add.{u} α c_0)
          (@add_monoid.add_assoc.{u} α c_0)))
      (@has_zero.zero.{u} α (@has_zero.mk.{u} α (@add_monoid.zero.{u} α c_0)))
      a) a)
  (λ (add : (∀ (a a_0 : α), α))
    (add_assoc :
      (∀ (a b c_0 : α),
      @eq.{u+1} α
        (@has_add.add.{u} α (@has_add.mk.{u} α add)
          (@has_add.add.{u} α (@has_add.mk.{u} α add) a b) c_0)
        (@has_add.add.{u} α (@has_add.mk.{u} α add) a
          (@has_add.add.{u} α (@has_add.mk.{u} α add) b c_0)))) (zero : α)
    (zero_add :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc))
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero)) a) a))
    (add_zero :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_semigroup.mk.{u} α add add_assoc)) a
          (@has_zero.zero.{u} α (@has_zero.mk.{u} α zero))) a)),
  zero_add) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_monoid.add_assoc.{u}"

mod: "DefMod(Definition(zero_add,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_monoid.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α inst_1))
    (@has_zero.zero.{u} α (@add_monoid.to_has_zero.{u} α inst_1)) a) a,λ {α : Type u} [inst_1 : @add_monoid.{u} α], @add_monoid.zero_add.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_monoid.zero_add.{u}"

mod: "DefMod(Definition(neg_eq_of_add_eq_zero,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] {a b : α}
  (h :
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))),
@eq.{u+1} α (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) b,λ {α : Type u} [inst_1 : @add_group.{u} α] {a b : α}
  (h :
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))),
@eq.mpr.{0}
  (@eq.{u+1} α (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) b)
  (@eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))
      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))) b)
  (@id_locked.{0}
    (@eq.{1} Prop
      (@eq.{u+1} α (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        b)
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))) b))
    (@eq.rec.{0 u+1} α
      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
      (λ (a_0 : α),
      @eq.{1} Prop
        (@eq.{u+1} α (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          b) (@eq.{u+1} α a_0 b))
      (@eq.refl.{1} Prop
        (@eq.{u+1} α (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          b))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))))
      (@eq.symm.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        (@add_zero.{u} α (@add_group.to_add_monoid.{u} α inst_1)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))) b)
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))) b)
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)) b))
      (@eq.rec.{0 u+1} α
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))) b)
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a_0)
            b))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))) b))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)
        (@eq.symm.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) h)))
    (@eq.mpr.{0}
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b) b)
      (@id_locked.{0}
        (@eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
              b) b))
        (@eq.rec.{0 u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b))
          (λ (a_0 : α),
          @eq.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
            (@eq.{u+1} α a_0 b))
          (@eq.refl.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a b)) b))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b)
          (@eq.symm.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
              b)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b))
            (@add_assoc.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a
              b))))
      (@eq.mpr.{0}
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b)
          b)
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b) b)
        (@id_locked.{0}
          (@eq.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
                b) b)
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b) b))
          (@eq.rec.{0 u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
            (λ (a_0 : α),
            @eq.{1} Prop
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                    a) b) b)
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a_0 b) b))
            (@eq.refl.{1} Prop
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                    a) b) b))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@add_left_neg.{u} α inst_1 a)))
        (@eq.mpr.{0}
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b) b)
          (@eq.{u+1} α b b)
          (@id_locked.{0}
            (@eq.{1} Prop
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b) b)
              (@eq.{u+1} α b b))
            (@eq.rec.{0 u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b)
              (λ (a_0 : α),
              @eq.{1} Prop
                (@eq.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_zero.zero.{u} α
                      (@add_monoid.to_has_zero.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) b) b)
                (@eq.{u+1} α a_0 b))
              (@eq.refl.{1} Prop
                (@eq.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_zero.zero.{u} α
                      (@add_monoid.to_has_zero.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) b) b)) b
              (@zero_add.{u} α (@add_group.to_add_monoid.{u} α inst_1) b)))
          (@eq.refl.{u+1} α b))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(neg_neg,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a : α),
@eq.{u+1} α
  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)) a,λ {α : Type u} [inst_1 : @add_group.{u} α] (a : α),
@neg_eq_of_add_eq_zero.{u} α inst_1
  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a
  (@add_left_neg.{u} α inst_1 a),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_right_neg,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1))) a
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
  (@has_zero.zero.{u} α
    (@add_monoid.to_has_zero.{u} α (@add_group.to_add_monoid.{u} α inst_1))),λ {α : Type u} [inst_1 : @add_group.{u} α] (a : α),
(λ (this :
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))),
  @eq.mp.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))
    (@eq.rec.{0 u+1} α
      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
      (λ (a_0 : α),
      @eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a_0
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))))
      (@eq.refl.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))) a
      (@neg_neg.{u} α inst_1 a)) this)
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))
    (@eq.{u+1} α
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α (@add_group.to_add_monoid.{u} α inst_1)))
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))
        (@eq.{u+1} α
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))))
      (@eq.rec.{0 u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))))
          (@eq.{u+1} α a_0
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))))
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@add_left_neg.{u} α inst_1
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
    (@eq.refl.{u+1} α
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.add_right_cancel,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] {a b c : α}
  (h :
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) c b)),
@eq.{u+1} α a c,λ {α : Type u} [inst_1 : @add_group.{u} α] {a b c : α}
  (h :
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) c b)),
(λ (this :
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) a),
  @eq.mpr.{0} (@eq.{u+1} α a c) (@eq.{u+1} α a a)
    (@id_locked.{0} (@eq.{1} Prop (@eq.{u+1} α a c) (@eq.{u+1} α a a))
      (@eq.rec.{0 u+1} α c
        (λ (a_0 : α), @eq.{1} Prop (@eq.{u+1} α a c) (@eq.{u+1} α a a_0))
        (@eq.refl.{1} Prop (@eq.{u+1} α a c)) a
        (@eq.mp.{0}
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) a)
          (@eq.{u+1} α c a)
          ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
              (e_2 : @eq.{u+1} α a_2 a_3),
            @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
              (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
                (@eq.{u+1} α) e_1) e_2)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) c
            (@eq.trans.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a b)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) c
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))) c
              (@eq.trans.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) a b)
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) c
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) b
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      b)))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) c
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))))
                (@eq.trans.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) a b)
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) c b)
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) c
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) b
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        b)))
                  ((λ [c_0 : @has_add.{u} α] (a_0 a_1 : α)
                      (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                      (e_3 : @eq.{u+1} α a_2 a_3),
                    @congr.{u+1 u+1} α α (@has_add.add.{u} α c_0 a_0)
                      (@has_add.add.{u} α c_0 a_1) a_2 a_3
                      (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                        (@has_add.add.{u} α c_0) e_2) e_3)
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) a b)
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) c b) h
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                    (@eq.refl.{u+1} α
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        b)))
                  (@add_assoc.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)) c b
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      b)))
                ((λ [c_0 : @has_add.{u} α] (a_0 a_1 : α)
                    (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                    (e_3 : @eq.{u+1} α a_2 a_3),
                  @congr.{u+1 u+1} α α (@has_add.add.{u} α c_0 a_0)
                    (@has_add.add.{u} α c_0 a_1) a_2 a_3
                    (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                      (@has_add.add.{u} α c_0) e_2) e_3)
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) c c
                  (@eq.refl.{u+1} α c)
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) b
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@add_right_neg.{u} α inst_1 b)))
              (@add_zero.{u} α (@add_group.to_add_monoid.{u} α inst_1) c)) a a
            (@eq.refl.{u+1} α a)) this))) (@eq.refl.{u+1} α a))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) a) @true
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) a)
        @true)
      (@eq.trans.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) a)
        (@eq.{u+1} α a a) @true
        ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
            (e_2 : @eq.{u+1} α a_2 a_3),
          @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
            (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
              (@eq.{u+1} α) e_1) e_2)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)) a
          (@eq.trans.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))) a
            (@eq.trans.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a b)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))))
              (@add_assoc.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)) a b
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
              ((λ [c_0 : @has_add.{u} α] (a_0 a_1 : α)
                  (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                  (e_3 : @eq.{u+1} α a_2 a_3),
                @congr.{u+1 u+1} α α (@has_add.add.{u} α c_0 a_0)
                  (@has_add.add.{u} α c_0 a_1) a_2 a_3
                  (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                    (@has_add.add.{u} α c_0) e_2) e_3)
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a a
                (@eq.refl.{u+1} α a)
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@add_right_neg.{u} α inst_1 b)))
            (@add_zero.{u} α (@add_group.to_add_monoid.{u} α inst_1) a)) a a
          (@eq.refl.{u+1} α a))
        (@propext (@eq.{u+1} α a a) @true (@eq_self_iff_true.{u+1} α a))))
    @trivial),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.to_right_cancel_add_semigroup,Vector(Param(u)),∀ {α : Type u} [s : @add_group.{u} α], @add_right_cancel_semigroup.{u} α,λ {α : Type u} [s : @add_group.{u} α],
@add_right_cancel_semigroup.mk.{u} α (@add_group.add.{u} α s)
  (@add_group.add_assoc.{u} α s) (@add_group.add_right_cancel.{u} α s),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(prod.lex_wf.equations._eqn_1,Vector(Param(u), Param(v)),∀ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@eq.{0}
  (@well_founded.{max (u+1) (v+1)} (@prod.{u v} α β)
    (@prod.lex.{u v} α β ra rb)) (@prod.lex_wf.{u v} α β ra rb ha hb)
  (@well_founded.intro.{max (u+1) (v+1)} (@prod.{u v} α β)
    (@prod.lex.{u v} α β ra rb)
    (λ (p : @prod.{u v} α β),
    @prod.cases_on.{0 u v} α β
      (λ (x : @prod.{u v} α β),
      @acc.{max (u+1) (v+1)} (@prod.{u v} α β) (@prod.lex.{u v} α β ra rb) x) p
      (λ (a : α) (b : β),
      @prod.lex_accessible.{u v} α β ra rb a
        (@well_founded.apply.{u+1} α ra ha a)
        (@well_founded.apply.{v+1} β rb hb) b))),λ {α : Type u} {β : Type v} {ra : (∀ (a a_0 : α), Prop)}
  {rb : (∀ (a a_0 : β), Prop)} (ha : @well_founded.{u+1} α ra)
  (hb : @well_founded.{v+1} β rb),
@eq.refl.{0}
  (@well_founded.{max (u+1) (v+1)} (@prod.{u v} α β)
    (@prod.lex.{u v} α β ra rb)) (@prod.lex_wf.{u v} α β ra rb ha hb),0))"
err: "provingground.interface.UnParsedException: could not parse expression @prod.lex_wf.{u v}"

mod: "DefMod(Definition(list.decidable_mem._match_1,Vector(Param(u)),∀ {α : Type u} (a b : α) (l : @list.{u} α) (h : @not (@eq.{u+1} α a b))
  (a_0 :
    @decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l)),
@decidable
  (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
    (@list.cons.{u} α b l)),λ {α : Type u} (a b : α) (l : @list.{u} α) (h : @not (@eq.{u+1} α a b))
  (a_0 :
    @decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l)),
@decidable.cases_on.{1}
  (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l)
  (λ (a_1 :
      @decidable
        (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l)),
  @decidable
    (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
      (@list.cons.{u} α b l))) a_0
  (λ (a_1 :
      @not (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l)),
  @decidable.is_false
    (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
      (@list.cons.{u} α b l))
    (@not_or (@eq.{u+1} α a b)
      (@pprod.fst.{max (u+1) 1 max (u+1) 1}
        ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l)
        (@list.rec.{(max (u+1) 1)+1 u} α
          (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
          (λ (a_2 : α) (a_3 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
          @pprod.{max (u+1) 1 max (u+1) 1}
            (@pprod.{max (u+1) 1 max (u+1) 1}
              ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
            @punit.{max (u+1) 1}) l)
        (@pprod.fst.{max (u+1) 1 max (u+1) 1}
          (@pprod.{max (u+1) 1 max (u+1) 1}
            ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l)
            (@list.rec.{(max (u+1) 1)+1 u} α
              (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
              (λ (a_2 : α) (a_3 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
              @pprod.{max (u+1) 1 max (u+1) 1}
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
                @punit.{max (u+1) 1}) l)) @punit.{max (u+1) 1}
          (@pprod.mk.{max (u+1) 1 max (u+1) 1}
            (@pprod.{max (u+1) 1 max (u+1) 1}
              ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l)
              (@list.below.{max (u+1) 1 u} α
                (λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l))
            @punit.{max (u+1) 1}
            (@list.rec.{max (u+1) 1 u} α
              (λ (n : @list.{u} α),
              @pprod.{max (u+1) 1 max (u+1) 1}
                ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) n)
                (@list.below.{max (u+1) 1 u} α
                  (λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) n))
              (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) (@list.nil.{u} α))
                @punit.{max (u+1) 1}
                ((λ (a_2 : @list.{u} α)
                    (F :
                      @list.below.{max (u+1) 1 u} α
                        (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_2)
                    (a_3 : α),
                  (λ (a_4 : α) (a_5 : @list.{u} α)
                      (F_0 :
                        @list.below.{max (u+1) 1 u} α
                          (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_5),
                    @list.cases_on.{max (u+1) 1 u} α
                      (λ (a_6 : @list.{u} α),
                      ∀ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_7 : @list.{u} α), ∀ (a_8 : α), Prop) a_6),
                      Prop) a_5
                      (λ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                            (@list.nil.{u} α)),
                      @false)
                      (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                        (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                            (@list.cons.{u} α a_1_0 a_2_0)),
                      @or (@eq.{u+1} α a_4 a_1_0)
                        (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_2_0)
                          (@list.rec.{(max (u+1) 1)+1 u} α
                            (λ (n : @list.{u} α), Sort (max (u+1) 1))
                            @punit.{max (u+1) 1}
                            (λ (a_6 : α) (a_7 : @list.{u} α)
                              (ih_1 : Sort (max (u+1) 1)),
                            @pprod.{max (u+1) 1 max (u+1) 1}
                              (@pprod.{max (u+1) 1 max (u+1) 1}
                                ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_7)
                                ih_1) @punit.{max (u+1) 1}) a_2_0)
                          (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                            (@pprod.{max (u+1) 1 max (u+1) 1}
                              ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_2_0)
                              (@list.rec.{(max (u+1) 1)+1 u} α
                                (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                @punit.{max (u+1) 1}
                                (λ (a_6 : α) (a_7 : @list.{u} α)
                                  (ih_1 : Sort (max (u+1) 1)),
                                @pprod.{max (u+1) 1 max (u+1) 1}
                                  (@pprod.{max (u+1) 1 max (u+1) 1}
                                    ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                      a_7) ih_1) @punit.{max (u+1) 1}) a_2_0))
                            @punit.{max (u+1) 1} F_1) a_4)) F_0) a_3 a_2 F)
                  (@list.nil.{u} α) @punit.star.{max (u+1) 1})
                @punit.star.{max (u+1) 1})
              (λ (a_2 : α) (a_3 : @list.{u} α)
                (ih_1 :
                  @pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)),
              @pprod.mk.{max (u+1) 1 max (u+1) 1}
                ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop)
                  (@list.cons.{u} α a_2 a_3))
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                  @punit.{max (u+1) 1})
                ((λ (a_4 : @list.{u} α)
                    (F :
                      @list.below.{max (u+1) 1 u} α
                        (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_4)
                    (a_5 : α),
                  (λ (a_6 : α) (a_7 : @list.{u} α)
                      (F_0 :
                        @list.below.{max (u+1) 1 u} α
                          (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_7),
                    @list.cases_on.{max (u+1) 1 u} α
                      (λ (a_8 : @list.{u} α),
                      ∀ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_9 : @list.{u} α), ∀ (a_10 : α), Prop) a_8),
                      Prop) a_7
                      (λ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                            (@list.nil.{u} α)),
                      @false)
                      (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                        (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                            (@list.cons.{u} α a_1_0 a_2_0)),
                      @or (@eq.{u+1} α a_6 a_1_0)
                        (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_2_0)
                          (@list.rec.{(max (u+1) 1)+1 u} α
                            (λ (n : @list.{u} α), Sort (max (u+1) 1))
                            @punit.{max (u+1) 1}
                            (λ (a_8 : α) (a_9 : @list.{u} α)
                              (ih_1_0 : Sort (max (u+1) 1)),
                            @pprod.{max (u+1) 1 max (u+1) 1}
                              (@pprod.{max (u+1) 1 max (u+1) 1}
                                ((λ (a_10 : @list.{u} α), ∀ (a_11 : α), Prop)
                                  a_9) ih_1_0) @punit.{max (u+1) 1}) a_2_0)
                          (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                            (@pprod.{max (u+1) 1 max (u+1) 1}
                              ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_2_0)
                              (@list.rec.{(max (u+1) 1)+1 u} α
                                (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                @punit.{max (u+1) 1}
                                (λ (a_8 : α) (a_9 : @list.{u} α)
                                  (ih_1_0 : Sort (max (u+1) 1)),
                                @pprod.{max (u+1) 1 max (u+1) 1}
                                  (@pprod.{max (u+1) 1 max (u+1) 1}
                                    ((λ (a_10 : @list.{u} α),
                                      ∀ (a_11 : α),
                                      Prop) a_9) ih_1_0) @punit.{max (u+1) 1})
                                a_2_0)) @punit.{max (u+1) 1} F_1) a_6)) F_0) a_5
                    a_4 F) (@list.cons.{u} α a_2 a_3)
                  (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                    (@pprod.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                      (@list.below.{max (u+1) 1 u} α
                        (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                    @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1}))
                (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                  @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1})) l)
            @punit.star.{max (u+1) 1})) a) h a_1))
  (λ (a_1 : @has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l),
  @decidable.is_true
    (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
      (@list.cons.{u} α b l))
    (@or.inr (@eq.{u+1} α a b)
      (@pprod.fst.{max (u+1) 1 max (u+1) 1}
        ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l)
        (@list.rec.{(max (u+1) 1)+1 u} α
          (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
          (λ (a_2 : α) (a_3 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
          @pprod.{max (u+1) 1 max (u+1) 1}
            (@pprod.{max (u+1) 1 max (u+1) 1}
              ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
            @punit.{max (u+1) 1}) l)
        (@pprod.fst.{max (u+1) 1 max (u+1) 1}
          (@pprod.{max (u+1) 1 max (u+1) 1}
            ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l)
            (@list.rec.{(max (u+1) 1)+1 u} α
              (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
              (λ (a_2 : α) (a_3 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
              @pprod.{max (u+1) 1 max (u+1) 1}
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
                @punit.{max (u+1) 1}) l)) @punit.{max (u+1) 1}
          (@pprod.mk.{max (u+1) 1 max (u+1) 1}
            (@pprod.{max (u+1) 1 max (u+1) 1}
              ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l)
              (@list.below.{max (u+1) 1 u} α
                (λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) l))
            @punit.{max (u+1) 1}
            (@list.rec.{max (u+1) 1 u} α
              (λ (n : @list.{u} α),
              @pprod.{max (u+1) 1 max (u+1) 1}
                ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) n)
                (@list.below.{max (u+1) 1 u} α
                  (λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) n))
              (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                ((λ (a_2 : @list.{u} α), ∀ (a_3 : α), Prop) (@list.nil.{u} α))
                @punit.{max (u+1) 1}
                ((λ (a_2 : @list.{u} α)
                    (F :
                      @list.below.{max (u+1) 1 u} α
                        (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_2)
                    (a_3 : α),
                  (λ (a_4 : α) (a_5 : @list.{u} α)
                      (F_0 :
                        @list.below.{max (u+1) 1 u} α
                          (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_5),
                    @list.cases_on.{max (u+1) 1 u} α
                      (λ (a_6 : @list.{u} α),
                      ∀ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_7 : @list.{u} α), ∀ (a_8 : α), Prop) a_6),
                      Prop) a_5
                      (λ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                            (@list.nil.{u} α)),
                      @false)
                      (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                        (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                            (@list.cons.{u} α a_1_0 a_2_0)),
                      @or (@eq.{u+1} α a_4 a_1_0)
                        (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_2_0)
                          (@list.rec.{(max (u+1) 1)+1 u} α
                            (λ (n : @list.{u} α), Sort (max (u+1) 1))
                            @punit.{max (u+1) 1}
                            (λ (a_6 : α) (a_7 : @list.{u} α)
                              (ih_1 : Sort (max (u+1) 1)),
                            @pprod.{max (u+1) 1 max (u+1) 1}
                              (@pprod.{max (u+1) 1 max (u+1) 1}
                                ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_7)
                                ih_1) @punit.{max (u+1) 1}) a_2_0)
                          (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                            (@pprod.{max (u+1) 1 max (u+1) 1}
                              ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_2_0)
                              (@list.rec.{(max (u+1) 1)+1 u} α
                                (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                @punit.{max (u+1) 1}
                                (λ (a_6 : α) (a_7 : @list.{u} α)
                                  (ih_1 : Sort (max (u+1) 1)),
                                @pprod.{max (u+1) 1 max (u+1) 1}
                                  (@pprod.{max (u+1) 1 max (u+1) 1}
                                    ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                      a_7) ih_1) @punit.{max (u+1) 1}) a_2_0))
                            @punit.{max (u+1) 1} F_1) a_4)) F_0) a_3 a_2 F)
                  (@list.nil.{u} α) @punit.star.{max (u+1) 1})
                @punit.star.{max (u+1) 1})
              (λ (a_2 : α) (a_3 : @list.{u} α)
                (ih_1 :
                  @pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)),
              @pprod.mk.{max (u+1) 1 max (u+1) 1}
                ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop)
                  (@list.cons.{u} α a_2 a_3))
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                  @punit.{max (u+1) 1})
                ((λ (a_4 : @list.{u} α)
                    (F :
                      @list.below.{max (u+1) 1 u} α
                        (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_4)
                    (a_5 : α),
                  (λ (a_6 : α) (a_7 : @list.{u} α)
                      (F_0 :
                        @list.below.{max (u+1) 1 u} α
                          (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_7),
                    @list.cases_on.{max (u+1) 1 u} α
                      (λ (a_8 : @list.{u} α),
                      ∀ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_9 : @list.{u} α), ∀ (a_10 : α), Prop) a_8),
                      Prop) a_7
                      (λ (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                            (@list.nil.{u} α)),
                      @false)
                      (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                        (F_1 :
                          @list.below.{max (u+1) 1 u} α
                            (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                            (@list.cons.{u} α a_1_0 a_2_0)),
                      @or (@eq.{u+1} α a_6 a_1_0)
                        (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_2_0)
                          (@list.rec.{(max (u+1) 1)+1 u} α
                            (λ (n : @list.{u} α), Sort (max (u+1) 1))
                            @punit.{max (u+1) 1}
                            (λ (a_8 : α) (a_9 : @list.{u} α)
                              (ih_1_0 : Sort (max (u+1) 1)),
                            @pprod.{max (u+1) 1 max (u+1) 1}
                              (@pprod.{max (u+1) 1 max (u+1) 1}
                                ((λ (a_10 : @list.{u} α), ∀ (a_11 : α), Prop)
                                  a_9) ih_1_0) @punit.{max (u+1) 1}) a_2_0)
                          (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                            (@pprod.{max (u+1) 1 max (u+1) 1}
                              ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_2_0)
                              (@list.rec.{(max (u+1) 1)+1 u} α
                                (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                @punit.{max (u+1) 1}
                                (λ (a_8 : α) (a_9 : @list.{u} α)
                                  (ih_1_0 : Sort (max (u+1) 1)),
                                @pprod.{max (u+1) 1 max (u+1) 1}
                                  (@pprod.{max (u+1) 1 max (u+1) 1}
                                    ((λ (a_10 : @list.{u} α),
                                      ∀ (a_11 : α),
                                      Prop) a_9) ih_1_0) @punit.{max (u+1) 1})
                                a_2_0)) @punit.{max (u+1) 1} F_1) a_6)) F_0) a_5
                    a_4 F) (@list.cons.{u} α a_2 a_3)
                  (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                    (@pprod.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                      (@list.below.{max (u+1) 1 u} α
                        (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                    @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1}))
                (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                  @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1})) l)
            @punit.star.{max (u+1) 1})) a) a_1)),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(list.decidable_mem._main,Vector(Param(u)),∀ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (a : α) (l : @list.{u} α),
@decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l),λ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (a : α) (l : @list.{u} α),
@list.brec_on.{1 u} α
  (λ (l_0 : @list.{u} α),
  @decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_0)) l
  (λ (l_0 : @list.{u} α)
    (F :
      @list.below.{1 u} α
        (λ (l_1 : @list.{u} α),
        @decidable
          (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_1))
        l_0),
  (λ (l_1 : @list.{u} α)
      (F_0 :
        @list.below.{1 u} α
          (λ (l_2 : @list.{u} α),
          @decidable
            (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_2))
          l_1),
    @list.cases_on.{1 u} α
      (λ (l_2 : @list.{u} α),
      ∀ (F_1 :
          @list.below.{1 u} α
            (λ (l_3 : @list.{u} α),
            @decidable
              (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_3))
            l_2),
      @decidable
        (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_2)) l_1
      (λ (F_1 :
          @list.below.{1 u} α
            (λ (l_2 : @list.{u} α),
            @decidable
              (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_2))
            (@list.nil.{u} α)),
      @decidable.is_false
        (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
          (@list.nil.{u} α)) @not_false)
      (λ (a_1 : α) (a_2 : @list.{u} α)
        (F_1 :
          @list.below.{1 u} α
            (λ (l_2 : @list.{u} α),
            @decidable
              (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_2))
            (@list.cons.{u} α a_1 a_2)),
      @dite.{1} (@eq.{u+1} α a a_1) (inst_1 a a_1)
        (@decidable
          (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
            (@list.cons.{u} α a_1 a_2)))
        (λ (h : @eq.{u+1} α a a_1),
        @decidable.is_true
          (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
            (@list.cons.{u} α a_1 a_2))
          (@or.inl (@eq.{u+1} α a a_1)
            (@pprod.fst.{max (u+1) 1 max (u+1) 1}
              ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2)
              (@list.rec.{(max (u+1) 1)+1 u} α
                (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
                (λ (a_0 : α) (a_3 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
                @pprod.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
                  @punit.{max (u+1) 1}) a_2)
              (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2)
                  (@list.rec.{(max (u+1) 1)+1 u} α
                    (λ (n : @list.{u} α), Sort (max (u+1) 1))
                    @punit.{max (u+1) 1}
                    (λ (a_0 : α) (a_3 : @list.{u} α)
                      (ih_1 : Sort (max (u+1) 1)),
                    @pprod.{max (u+1) 1 max (u+1) 1}
                      (@pprod.{max (u+1) 1 max (u+1) 1}
                        ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
                      @punit.{max (u+1) 1}) a_2)) @punit.{max (u+1) 1}
                (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2)
                    (@list.below.{max (u+1) 1 u} α
                      (λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2))
                  @punit.{max (u+1) 1}
                  (@list.rec.{max (u+1) 1 u} α
                    (λ (n : @list.{u} α),
                    @pprod.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) n)
                      (@list.below.{max (u+1) 1 u} α
                        (λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) n))
                    (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop)
                        (@list.nil.{u} α)) @punit.{max (u+1) 1}
                      ((λ (a_0 : @list.{u} α)
                          (F_2 :
                            @list.below.{max (u+1) 1 u} α
                              (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_0)
                          (a_3 : α),
                        (λ (a_4 : α) (a_5 : @list.{u} α)
                            (F_3 :
                              @list.below.{max (u+1) 1 u} α
                                (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_5),
                          @list.cases_on.{max (u+1) 1 u} α
                            (λ (a_6 : @list.{u} α),
                            ∀ (F_4 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_7 : @list.{u} α), ∀ (a_8 : α), Prop)
                                  a_6),
                            Prop) a_5
                            (λ (F_4 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                  (@list.nil.{u} α)),
                            @false)
                            (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                              (F_4 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                  (@list.cons.{u} α a_1_0 a_2_0)),
                            @or (@eq.{u+1} α a_4 a_1_0)
                              (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                  a_2_0)
                                (@list.rec.{(max (u+1) 1)+1 u} α
                                  (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                  @punit.{max (u+1) 1}
                                  (λ (a_6 : α) (a_7 : @list.{u} α)
                                    (ih_1 : Sort (max (u+1) 1)),
                                  @pprod.{max (u+1) 1 max (u+1) 1}
                                    (@pprod.{max (u+1) 1 max (u+1) 1}
                                      ((λ (a_8 : @list.{u} α),
                                        ∀ (a_9 : α),
                                        Prop) a_7) ih_1) @punit.{max (u+1) 1})
                                  a_2_0)
                                (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                  (@pprod.{max (u+1) 1 max (u+1) 1}
                                    ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                      a_2_0)
                                    (@list.rec.{(max (u+1) 1)+1 u} α
                                      (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                      @punit.{max (u+1) 1}
                                      (λ (a_6 : α) (a_7 : @list.{u} α)
                                        (ih_1 : Sort (max (u+1) 1)),
                                      @pprod.{max (u+1) 1 max (u+1) 1}
                                        (@pprod.{max (u+1) 1 max (u+1) 1}
                                          ((λ (a_8 : @list.{u} α),
                                            ∀ (a_9 : α),
                                            Prop) a_7) ih_1)
                                        @punit.{max (u+1) 1}) a_2_0))
                                  @punit.{max (u+1) 1} F_4) a_4)) F_3) a_3 a_0
                          F_2) (@list.nil.{u} α) @punit.star.{max (u+1) 1})
                      @punit.star.{max (u+1) 1})
                    (λ (a_0 : α) (a_3 : @list.{u} α)
                      (ih_1 :
                        @pprod.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                          (@list.below.{max (u+1) 1 u} α
                            (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)),
                    @pprod.mk.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop)
                        (@list.cons.{u} α a_0 a_3))
                      (@pprod.{max (u+1) 1 max (u+1) 1}
                        (@pprod.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                          (@list.below.{max (u+1) 1 u} α
                            (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                        @punit.{max (u+1) 1})
                      ((λ (a_4 : @list.{u} α)
                          (F_2 :
                            @list.below.{max (u+1) 1 u} α
                              (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_4)
                          (a_5 : α),
                        (λ (a_6 : α) (a_7 : @list.{u} α)
                            (F_3 :
                              @list.below.{max (u+1) 1 u} α
                                (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop) a_7),
                          @list.cases_on.{max (u+1) 1 u} α
                            (λ (a_8 : @list.{u} α),
                            ∀ (F_4 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_9 : @list.{u} α), ∀ (a_10 : α), Prop)
                                  a_8),
                            Prop) a_7
                            (λ (F_4 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                  (@list.nil.{u} α)),
                            @false)
                            (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                              (F_4 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                  (@list.cons.{u} α a_1_0 a_2_0)),
                            @or (@eq.{u+1} α a_6 a_1_0)
                              (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                  a_2_0)
                                (@list.rec.{(max (u+1) 1)+1 u} α
                                  (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                  @punit.{max (u+1) 1}
                                  (λ (a_8 : α) (a_9 : @list.{u} α)
                                    (ih_1_0 : Sort (max (u+1) 1)),
                                  @pprod.{max (u+1) 1 max (u+1) 1}
                                    (@pprod.{max (u+1) 1 max (u+1) 1}
                                      ((λ (a_10 : @list.{u} α),
                                        ∀ (a_11 : α),
                                        Prop) a_9) ih_1_0) @punit.{max (u+1) 1})
                                  a_2_0)
                                (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                  (@pprod.{max (u+1) 1 max (u+1) 1}
                                    ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                      a_2_0)
                                    (@list.rec.{(max (u+1) 1)+1 u} α
                                      (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                      @punit.{max (u+1) 1}
                                      (λ (a_8 : α) (a_9 : @list.{u} α)
                                        (ih_1_0 : Sort (max (u+1) 1)),
                                      @pprod.{max (u+1) 1 max (u+1) 1}
                                        (@pprod.{max (u+1) 1 max (u+1) 1}
                                          ((λ (a_10 : @list.{u} α),
                                            ∀ (a_11 : α),
                                            Prop) a_9) ih_1_0)
                                        @punit.{max (u+1) 1}) a_2_0))
                                  @punit.{max (u+1) 1} F_4) a_6)) F_3) a_5 a_4
                          F_2) (@list.cons.{u} α a_0 a_3)
                        (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                          (@pprod.{max (u+1) 1 max (u+1) 1}
                            ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                            (@list.below.{max (u+1) 1 u} α
                              (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                          @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1}))
                      (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                        (@pprod.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                          (@list.below.{max (u+1) 1 u} α
                            (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                        @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1}))
                    a_2) @punit.star.{max (u+1) 1})) a) h))
        (λ (h : @not (@eq.{u+1} α a a_1)),
        @list.decidable_mem._match_1.{u} α a a_1 a_2 h
          (@pprod.fst.{1 1}
            ((λ (l_2 : @list.{u} α),
              @decidable
                (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
                  l_2)) a_2)
            (@list.rec.{2 u} α (λ (n : @list.{u} α), Type 0) @punit.{1}
              (λ (a_0 : α) (a_3 : @list.{u} α) (ih_1 : Type 0),
              @pprod.{1 1}
                (@pprod.{1 1}
                  ((λ (l_2 : @list.{u} α),
                    @decidable
                      (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α)
                        a l_2)) a_3) ih_1) @punit.{1}) a_2)
            (@pprod.fst.{1 1}
              (@pprod.{1 1}
                ((λ (l_2 : @list.{u} α),
                  @decidable
                    (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
                      l_2)) a_2)
                (@list.rec.{2 u} α (λ (n : @list.{u} α), Type 0) @punit.{1}
                  (λ (a_0 : α) (a_3 : @list.{u} α) (ih_1 : Type 0),
                  @pprod.{1 1}
                    (@pprod.{1 1}
                      ((λ (l_2 : @list.{u} α),
                        @decidable
                          (@has_mem.mem.{u u} α (@list.{u} α)
                            (@list.has_mem.{u} α) a l_2)) a_3) ih_1) @punit.{1})
                  a_2)) @punit.{1} F_1)))) F_0) l_0 F),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(list.decidable_mem._main.equations._eqn_1,Vector(Param(u)),∀ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (a : α),
@eq.{1}
  (@decidable
    (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
      (@list.nil.{u} α)))
  (@list.decidable_mem._main.{u} α inst_1 a (@list.nil.{u} α))
  (@decidable.is_false
    (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
      (@list.nil.{u} α)) @not_false),λ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (a : α),
@eq.refl.{1}
  ((λ (l : @list.{u} α),
    @decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l))
    (@list.nil.{u} α))
  (@list.brec_on.{1 u} α
    (λ (l : @list.{u} α),
    @decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l))
    (@list.nil.{u} α)
    (λ (l : @list.{u} α)
      (F :
        @list.below.{1 u} α
          (λ (l_0 : @list.{u} α),
          @decidable
            (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_0))
          l),
    (λ (l_0 : @list.{u} α)
        (F_0 :
          @list.below.{1 u} α
            (λ (l_1 : @list.{u} α),
            @decidable
              (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_1))
            l_0),
      @list.cases_on.{1 u} α
        (λ (l_1 : @list.{u} α),
        ∀ (F_1 :
            @list.below.{1 u} α
              (λ (l_2 : @list.{u} α),
              @decidable
                (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
                  l_2)) l_1),
        @decidable
          (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l_1)) l_0
        (λ (F_1 :
            @list.below.{1 u} α
              (λ (l_1 : @list.{u} α),
              @decidable
                (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
                  l_1)) (@list.nil.{u} α)),
        @decidable.is_false
          (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
            (@list.nil.{u} α)) @not_false)
        (λ (a_1 : α) (a_2 : @list.{u} α)
          (F_1 :
            @list.below.{1 u} α
              (λ (l_1 : @list.{u} α),
              @decidable
                (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
                  l_1)) (@list.cons.{u} α a_1 a_2)),
        @dite.{1} (@eq.{u+1} α a a_1) (inst_1 a a_1)
          (@decidable
            (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
              (@list.cons.{u} α a_1 a_2)))
          (λ (h : @eq.{u+1} α a a_1),
          @decidable.is_true
            (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
              (@list.cons.{u} α a_1 a_2))
            (@or.inl (@eq.{u+1} α a a_1)
              (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2)
                (@list.rec.{(max (u+1) 1)+1 u} α
                  (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
                  (λ (a_0 : α) (a_3 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
                  @pprod.{max (u+1) 1 max (u+1) 1}
                    (@pprod.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
                    @punit.{max (u+1) 1}) a_2)
                (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2)
                    (@list.rec.{(max (u+1) 1)+1 u} α
                      (λ (n : @list.{u} α), Sort (max (u+1) 1))
                      @punit.{max (u+1) 1}
                      (λ (a_0 : α) (a_3 : @list.{u} α)
                        (ih_1 : Sort (max (u+1) 1)),
                      @pprod.{max (u+1) 1 max (u+1) 1}
                        (@pprod.{max (u+1) 1 max (u+1) 1}
                          ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3) ih_1)
                        @punit.{max (u+1) 1}) a_2)) @punit.{max (u+1) 1}
                  (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                    (@pprod.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2)
                      (@list.below.{max (u+1) 1 u} α
                        (λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) a_2))
                    @punit.{max (u+1) 1}
                    (@list.rec.{max (u+1) 1 u} α
                      (λ (n : @list.{u} α),
                      @pprod.{max (u+1) 1 max (u+1) 1}
                        ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) n)
                        (@list.below.{max (u+1) 1 u} α
                          (λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop) n))
                      (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                        ((λ (a_0 : @list.{u} α), ∀ (a_3 : α), Prop)
                          (@list.nil.{u} α)) @punit.{max (u+1) 1}
                        ((λ (a_0 : @list.{u} α)
                            (F_2 :
                              @list.below.{max (u+1) 1 u} α
                                (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_0)
                            (a_3 : α),
                          (λ (a_4 : α) (a_5 : @list.{u} α)
                              (F_3 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                  a_5),
                            @list.cases_on.{max (u+1) 1 u} α
                              (λ (a_6 : @list.{u} α),
                              ∀ (F_4 :
                                  @list.below.{max (u+1) 1 u} α
                                    (λ (a_7 : @list.{u} α), ∀ (a_8 : α), Prop)
                                    a_6),
                              Prop) a_5
                              (λ (F_4 :
                                  @list.below.{max (u+1) 1 u} α
                                    (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                    (@list.nil.{u} α)),
                              @false)
                              (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                                (F_4 :
                                  @list.below.{max (u+1) 1 u} α
                                    (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                    (@list.cons.{u} α a_1_0 a_2_0)),
                              @or (@eq.{u+1} α a_4 a_1_0)
                                (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                  ((λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop)
                                    a_2_0)
                                  (@list.rec.{(max (u+1) 1)+1 u} α
                                    (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                    @punit.{max (u+1) 1}
                                    (λ (a_6 : α) (a_7 : @list.{u} α)
                                      (ih_1 : Sort (max (u+1) 1)),
                                    @pprod.{max (u+1) 1 max (u+1) 1}
                                      (@pprod.{max (u+1) 1 max (u+1) 1}
                                        ((λ (a_8 : @list.{u} α),
                                          ∀ (a_9 : α),
                                          Prop) a_7) ih_1) @punit.{max (u+1) 1})
                                    a_2_0)
                                  (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                    (@pprod.{max (u+1) 1 max (u+1) 1}
                                      ((λ (a_6 : @list.{u} α),
                                        ∀ (a_7 : α),
                                        Prop) a_2_0)
                                      (@list.rec.{(max (u+1) 1)+1 u} α
                                        (λ (n : @list.{u} α),
                                        Sort (max (u+1)
                                        1)) @punit.{max (u+1) 1}
                                        (λ (a_6 : α) (a_7 : @list.{u} α)
                                          (ih_1 : Sort (max (u+1) 1)),
                                        @pprod.{max (u+1) 1 max (u+1) 1}
                                          (@pprod.{max (u+1) 1 max (u+1) 1}
                                            ((λ (a_8 : @list.{u} α),
                                              ∀ (a_9 : α),
                                              Prop) a_7) ih_1)
                                          @punit.{max (u+1) 1}) a_2_0))
                                    @punit.{max (u+1) 1} F_4) a_4)) F_3) a_3 a_0
                            F_2) (@list.nil.{u} α) @punit.star.{max (u+1) 1})
                        @punit.star.{max (u+1) 1})
                      (λ (a_0 : α) (a_3 : @list.{u} α)
                        (ih_1 :
                          @pprod.{max (u+1) 1 max (u+1) 1}
                            ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                            (@list.below.{max (u+1) 1 u} α
                              (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)),
                      @pprod.mk.{max (u+1) 1 max (u+1) 1}
                        ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop)
                          (@list.cons.{u} α a_0 a_3))
                        (@pprod.{max (u+1) 1 max (u+1) 1}
                          (@pprod.{max (u+1) 1 max (u+1) 1}
                            ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                            (@list.below.{max (u+1) 1 u} α
                              (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                          @punit.{max (u+1) 1})
                        ((λ (a_4 : @list.{u} α)
                            (F_2 :
                              @list.below.{max (u+1) 1 u} α
                                (λ (a_6 : @list.{u} α), ∀ (a_7 : α), Prop) a_4)
                            (a_5 : α),
                          (λ (a_6 : α) (a_7 : @list.{u} α)
                              (F_3 :
                                @list.below.{max (u+1) 1 u} α
                                  (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                  a_7),
                            @list.cases_on.{max (u+1) 1 u} α
                              (λ (a_8 : @list.{u} α),
                              ∀ (F_4 :
                                  @list.below.{max (u+1) 1 u} α
                                    (λ (a_9 : @list.{u} α), ∀ (a_10 : α), Prop)
                                    a_8),
                              Prop) a_7
                              (λ (F_4 :
                                  @list.below.{max (u+1) 1 u} α
                                    (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                    (@list.nil.{u} α)),
                              @false)
                              (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
                                (F_4 :
                                  @list.below.{max (u+1) 1 u} α
                                    (λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                    (@list.cons.{u} α a_1_0 a_2_0)),
                              @or (@eq.{u+1} α a_6 a_1_0)
                                (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                  ((λ (a_8 : @list.{u} α), ∀ (a_9 : α), Prop)
                                    a_2_0)
                                  (@list.rec.{(max (u+1) 1)+1 u} α
                                    (λ (n : @list.{u} α), Sort (max (u+1) 1))
                                    @punit.{max (u+1) 1}
                                    (λ (a_8 : α) (a_9 : @list.{u} α)
                                      (ih_1_0 : Sort (max (u+1) 1)),
                                    @pprod.{max (u+1) 1 max (u+1) 1}
                                      (@pprod.{max (u+1) 1 max (u+1) 1}
                                        ((λ (a_10 : @list.{u} α),
                                          ∀ (a_11 : α),
                                          Prop) a_9) ih_1_0)
                                      @punit.{max (u+1) 1}) a_2_0)
                                  (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                                    (@pprod.{max (u+1) 1 max (u+1) 1}
                                      ((λ (a_8 : @list.{u} α),
                                        ∀ (a_9 : α),
                                        Prop) a_2_0)
                                      (@list.rec.{(max (u+1) 1)+1 u} α
                                        (λ (n : @list.{u} α),
                                        Sort (max (u+1)
                                        1)) @punit.{max (u+1) 1}
                                        (λ (a_8 : α) (a_9 : @list.{u} α)
                                          (ih_1_0 : Sort (max (u+1) 1)),
                                        @pprod.{max (u+1) 1 max (u+1) 1}
                                          (@pprod.{max (u+1) 1 max (u+1) 1}
                                            ((λ (a_10 : @list.{u} α),
                                              ∀ (a_11 : α),
                                              Prop) a_9) ih_1_0)
                                          @punit.{max (u+1) 1}) a_2_0))
                                    @punit.{max (u+1) 1} F_4) a_6)) F_3) a_5 a_4
                            F_2) (@list.cons.{u} α a_0 a_3)
                          (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                            (@pprod.{max (u+1) 1 max (u+1) 1}
                              ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                              (@list.below.{max (u+1) 1 u} α
                                (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                            @punit.{max (u+1) 1} ih_1
                            @punit.star.{max (u+1) 1}))
                        (@pprod.mk.{max (u+1) 1 max (u+1) 1}
                          (@pprod.{max (u+1) 1 max (u+1) 1}
                            ((λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3)
                            (@list.below.{max (u+1) 1 u} α
                              (λ (a_4 : @list.{u} α), ∀ (a_5 : α), Prop) a_3))
                          @punit.{max (u+1) 1} ih_1 @punit.star.{max (u+1) 1}))
                      a_2) @punit.star.{max (u+1) 1})) a) h))
          (λ (h : @not (@eq.{u+1} α a a_1)),
          @list.decidable_mem._match_1.{u} α a a_1 a_2 h
            (@pprod.fst.{1 1}
              ((λ (l_1 : @list.{u} α),
                @decidable
                  (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a
                    l_1)) a_2)
              (@list.rec.{2 u} α (λ (n : @list.{u} α), Type 0) @punit.{1}
                (λ (a_0 : α) (a_3 : @list.{u} α) (ih_1 : Type 0),
                @pprod.{1 1}
                  (@pprod.{1 1}
                    ((λ (l_1 : @list.{u} α),
                      @decidable
                        (@has_mem.mem.{u u} α (@list.{u} α)
                          (@list.has_mem.{u} α) a l_1)) a_3) ih_1) @punit.{1})
                a_2)
              (@pprod.fst.{1 1}
                (@pprod.{1 1}
                  ((λ (l_1 : @list.{u} α),
                    @decidable
                      (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α)
                        a l_1)) a_2)
                  (@list.rec.{2 u} α (λ (n : @list.{u} α), Type 0) @punit.{1}
                    (λ (a_0 : α) (a_3 : @list.{u} α) (ih_1 : Type 0),
                    @pprod.{1 1}
                      (@pprod.{1 1}
                        ((λ (l_1 : @list.{u} α),
                          @decidable
                            (@has_mem.mem.{u u} α (@list.{u} α)
                              (@list.has_mem.{u} α) a l_1)) a_3) ih_1)
                      @punit.{1}) a_2)) @punit.{1} F_1)))) F_0) l F)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.decidable_mem._match_1.{u}"

mod: "IndMod(InductiveType(has_repr,Vector(Param(u)),∀ (α : Type u), Type u),1,Vector((has_repr.mk,∀ {α : Type u} (repr : (∀ (a : α), @string)), @has_repr.{u} α)))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(string.append,Vector(),∀ (a a_0 : @string), @string,@string.append._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string.append._main"

mod: "DefMod(Definition(string.has_append,Vector(),@has_append.{0} @string,@has_append.mk.{0} @string @string.append,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string.append"

mod: "DefMod(Definition(has_repr.repr,Vector(Param(u)),∀ {α : Type u} [c : @has_repr.{u} α] (a : α), @string,λ (α : Type u) [c : @has_repr.{u} α],
@has_repr.rec.{max (u+1) 1 u} α (λ [c_0 : @has_repr.{u} α], ∀ (a : α), @string)
  (λ (repr : (∀ (a : α), @string)), repr) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_repr.{u}"

mod: "DefMod(Definition(repr,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_repr.{u} α] (a : α), @string,λ {α : Type u} [inst_1 : @has_repr.{u} α], @has_repr.repr.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_repr.{u}"

mod: "DefMod(Definition(sigma.has_repr,Vector(Param(u), Param(v)),∀ {α : Type u} {β : (∀ (a : α), Type v)} [inst_1 : @has_repr.{u} α]
  [s : (∀ (x : α), @has_repr.{v} (β x))],
@has_repr.{max u v} (@sigma.{u v} α β),λ {α : Type u} {β : (∀ (a : α), Type v)} [inst_1 : @has_repr.{u} α]
  [s : (∀ (x : α), @has_repr.{v} (β x))],
@has_repr.mk.{max u v} (@sigma.{u v} α β)
  (λ (x : @sigma.{u v} α β), @sigma.has_repr._match_1.{u v} α β inst_1 s x),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_repr.{u}"

mod: "DefMod(Definition(group.has_sizeof_inst,Vector(Param(u)),∀ (α : Type u) [α_inst : @has_sizeof.{u+1} α], @has_sizeof.{u+1} (@group.{u} α),λ (α : Type u) [α_inst : @has_sizeof.{u+1} α],
@has_sizeof.mk.{u+1} (@group.{u} α) (@group.sizeof.{u} α α_inst),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.sizeof.{u}"

mod: "DefMod(Definition(list.repr_aux,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_repr.{u} α] (a : @bool) (a_0 : @list.{u} α),
@string,λ {α : Type u} [inst_1 : @has_repr.{u} α], @list.repr_aux._main.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_repr.{u}"

mod: "DefMod(Definition(list.repr,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_repr.{u} α] (a : @list.{u} α), @string,λ {α : Type u} [inst_1 : @has_repr.{u} α], @list.repr._main.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_repr.{u}"

mod: "DefMod(Definition(list.has_repr,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_repr.{u} α], @has_repr.{u} (@list.{u} α),λ {α : Type u} [inst_1 : @has_repr.{u} α],
@has_repr.mk.{u} (@list.{u} α) (@list.repr.{u} α inst_1),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_repr.{u}"

mod: "DefMod(Definition(nat.decidable_eq._match_1,Vector(),∀ (x y : @nat) (a : @decidable (@eq.{1} @nat x y)),
@decidable (@eq.{1} @nat (@nat.succ x) (@nat.succ y)),λ (x y : @nat) (a : @decidable (@eq.{1} @nat x y)),
@decidable.cases_on.{1} (@eq.{1} @nat x y)
  (λ (a_0 : @decidable (@eq.{1} @nat x y)),
  @decidable (@eq.{1} @nat (@nat.succ x) (@nat.succ y))) a
  (λ (a_0 : @not (@eq.{1} @nat x y)),
  @decidable.is_false (@eq.{1} @nat (@nat.succ x) (@nat.succ y))
    (λ (h : @eq.{1} @nat (@nat.succ x) (@nat.succ y)),
    @nat.no_confusion.{0} @false (@nat.succ x) (@nat.succ y) h
      (λ (xeqy : @eq.{1} @nat x y),
      @absurd.{0} (@eq.{1} @nat x y) @false xeqy a_0)))
  (λ (a_0 : @eq.{1} @nat x y),
  @decidable.is_true (@eq.{1} @nat (@nat.succ x) (@nat.succ y))
    (@eq.subst.{1} @nat
      (λ (x_0 : @nat), @eq.{1} @nat (@nat.succ x) (@nat.succ x_0)) x y a_0
      (@eq.refl.{1} @nat (@nat.succ x)))),0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(nat.decidable_eq._main,Vector(),@decidable_eq.{1} @nat,λ (a b : @nat),
@nat.brec_on.{1}
  (λ (a_0 : @nat), ∀ (b_0 : @nat), @decidable (@eq.{1} @nat a_0 b_0)) a
  (λ (a_0 : @nat)
    (F :
      @nat.below.{1}
        (λ (a_1 : @nat), ∀ (b_1 : @nat), @decidable (@eq.{1} @nat a_1 b_1)) a_0)
    (b_0 : @nat),
  (λ (a_1 b_1 : @nat)
      (F_0 :
        @nat.below.{1}
          (λ (a_2 : @nat), ∀ (b_2 : @nat), @decidable (@eq.{1} @nat a_2 b_2))
          a_1),
    @nat.cases_on.{1}
      (λ (a_2 : @nat),
      ∀ (F_1 :
          @nat.below.{1}
            (λ (a_3 : @nat), ∀ (b_2 : @nat), @decidable (@eq.{1} @nat a_3 b_2))
            a_2),
      @decidable (@eq.{1} @nat a_2 b_1)) a_1
      (λ (F_1 :
          @nat.below.{1}
            (λ (a_2 : @nat), ∀ (b_2 : @nat), @decidable (@eq.{1} @nat a_2 b_2))
            @nat.zero),
      @nat.cases_on.{1}
        (λ (b_2 : @nat), @decidable (@eq.{1} @nat @nat.zero b_2)) b_1
        (@decidable.is_true (@eq.{1} @nat @nat.zero @nat.zero)
          (@rfl.{1} @nat @nat.zero))
        (λ (a_2 : @nat),
        @decidable.is_false (@eq.{1} @nat @nat.zero (@nat.succ a_2))
          (λ (h : @eq.{1} @nat @nat.zero (@nat.succ a_2)),
          @nat.no_confusion.{0} @false @nat.zero (@nat.succ a_2) h)))
      (λ (a_2 : @nat)
        (F_1 :
          @nat.below.{1}
            (λ (a_3 : @nat), ∀ (b_2 : @nat), @decidable (@eq.{1} @nat a_3 b_2))
            (@nat.succ a_2)),
      @nat.cases_on.{1}
        (λ (b_2 : @nat), @decidable (@eq.{1} @nat (@nat.succ a_2) b_2)) b_1
        (@decidable.is_false (@eq.{1} @nat (@nat.succ a_2) @nat.zero)
          (λ (h : @eq.{1} @nat (@nat.succ a_2) @nat.zero),
          @nat.no_confusion.{0} @false (@nat.succ a_2) @nat.zero h))
        (λ (a_1_0 : @nat),
        @nat.decidable_eq._match_1 a_2 a_1_0
          (@pprod.fst.{1 1}
            ((λ (a_3 : @nat), ∀ (b_2 : @nat), @decidable (@eq.{1} @nat a_3 b_2))
              a_2)
            (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
              (λ (a_3 : @nat) (ih_1 : Type 0),
              @pprod.{1 1}
                (@pprod.{1 1}
                  ((λ (a_4 : @nat),
                    ∀ (b_2 : @nat),
                    @decidable (@eq.{1} @nat a_4 b_2)) a_3) ih_1) @punit.{1})
              a_2)
            (@pprod.fst.{1 1}
              (@pprod.{1 1}
                ((λ (a_3 : @nat),
                  ∀ (b_2 : @nat),
                  @decidable (@eq.{1} @nat a_3 b_2)) a_2)
                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                  (λ (a_3 : @nat) (ih_1 : Type 0),
                  @pprod.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_4 : @nat),
                        ∀ (b_2 : @nat),
                        @decidable (@eq.{1} @nat a_4 b_2)) a_3) ih_1)
                    @punit.{1}) a_2)) @punit.{1} F_1) a_1_0))) F_0) a_0 b_0 F) b,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_eq._match_1"

mod: "DefMod(Definition(nat.decidable_eq,Vector(),@decidable_eq.{1} @nat,@nat.decidable_eq._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_eq._main"

mod: "DefMod(Definition(nat.digit_succ._main,Vector(),∀ (base : @nat) (a : @list.{0} @nat), @list.{0} @nat,λ (base : @nat) (a : @list.{0} @nat),
@list.brec_on.{1 0} @nat (λ (a_0 : @list.{0} @nat), @list.{0} @nat) a
  (λ (a_0 : @list.{0} @nat)
    (F : @list.below.{1 0} @nat (λ (a_1 : @list.{0} @nat), @list.{0} @nat) a_0),
  (λ (a_1 : @list.{0} @nat)
      (F_0 :
        @list.below.{1 0} @nat (λ (a_2 : @list.{0} @nat), @list.{0} @nat) a_1),
    @list.cases_on.{1 0} @nat
      (λ (a_2 : @list.{0} @nat),
      ∀ (F_1 :
          @list.below.{1 0} @nat (λ (a_3 : @list.{0} @nat), @list.{0} @nat)
            a_2),
      @list.{0} @nat) a_1
      (λ (F_1 :
          @list.below.{1 0} @nat (λ (a_2 : @list.{0} @nat), @list.{0} @nat)
            (@list.nil.{0} @nat)),
      @list.cons.{0} @nat (@has_one.one.{0} @nat @nat.has_one)
        (@list.nil.{0} @nat))
      (λ (a_2 : @nat) (a_1_0 : @list.{0} @nat)
        (F_1 :
          @list.below.{1 0} @nat (λ (a_3 : @list.{0} @nat), @list.{0} @nat)
            (@list.cons.{0} @nat a_2 a_1_0)),
      @ite.{1}
        (@eq.{1} @nat
          (@has_add.add.{0} @nat @nat.has_add a_2
            (@has_one.one.{0} @nat @nat.has_one)) base)
        (@nat.decidable_eq
          (@has_add.add.{0} @nat @nat.has_add a_2
            (@has_one.one.{0} @nat @nat.has_one)) base) (@list.{0} @nat)
        (@list.cons.{0} @nat (@has_zero.zero.{0} @nat @nat.has_zero)
          (@pprod.fst.{1 1} ((λ (a_3 : @list.{0} @nat), @list.{0} @nat) a_1_0)
            (@list.rec.{2 0} @nat (λ (n : @list.{0} @nat), Type 0) @punit.{1}
              (λ (a_3 : @nat) (a_4 : @list.{0} @nat) (ih_1 : Type 0),
              @pprod.{1 1}
                (@pprod.{1 1} ((λ (a_5 : @list.{0} @nat), @list.{0} @nat) a_4)
                  ih_1) @punit.{1}) a_1_0)
            (@pprod.fst.{1 1}
              (@pprod.{1 1} ((λ (a_3 : @list.{0} @nat), @list.{0} @nat) a_1_0)
                (@list.rec.{2 0} @nat (λ (n : @list.{0} @nat), Type 0)
                  @punit.{1}
                  (λ (a_3 : @nat) (a_4 : @list.{0} @nat) (ih_1 : Type 0),
                  @pprod.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_5 : @list.{0} @nat), @list.{0} @nat) a_4) ih_1)
                    @punit.{1}) a_1_0)) @punit.{1} F_1)))
        (@list.cons.{0} @nat
          (@has_add.add.{0} @nat @nat.has_add a_2
            (@has_one.one.{0} @nat @nat.has_one)) a_1_0)) F_0) a_0 F),0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_eq"

mod: "DefMod(Definition(nat.digit_succ,Vector(),∀ (base : @nat) (a : @list.{0} @nat), @list.{0} @nat,λ (base : @nat), @nat.digit_succ._main base,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.digit_succ._main"

mod: "DefMod(Definition(nat.to_digits._main,Vector(),∀ (base a : @nat), @list.{0} @nat,λ (base a : @nat),
@nat.brec_on.{1} (λ (a_0 : @nat), @list.{0} @nat) a
  (λ (a_0 : @nat) (F : @nat.below.{1} (λ (a_1 : @nat), @list.{0} @nat) a_0),
  (λ (a_1 : @nat) (F_0 : @nat.below.{1} (λ (a_2 : @nat), @list.{0} @nat) a_1),
    @nat.cases_on.{1}
      (λ (a_2 : @nat),
      ∀ (F_1 : @nat.below.{1} (λ (a_3 : @nat), @list.{0} @nat) a_2),
      @list.{0} @nat) a_1
      (λ (F_1 : @nat.below.{1} (λ (a_2 : @nat), @list.{0} @nat) @nat.zero),
      @list.cons.{0} @nat (@has_zero.zero.{0} @nat @nat.has_zero)
        (@list.nil.{0} @nat))
      (λ (a_2 : @nat)
        (F_1 : @nat.below.{1} (λ (a_3 : @nat), @list.{0} @nat) (@nat.succ a_2)),
      @nat.digit_succ base
        (@pprod.fst.{1 1}
          ((λ (a_3 : @nat), @list.{0} @nat)
            (@pprod.fst.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
              (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                (λ (a_3 : @nat) (ih_1 : Type 0),
                @pprod.{1 1}
                  (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                    ih_1) @punit.{1}) @nat.zero)
              (@pprod.fst.{1 1}
                (@pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                  (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                    (λ (a_3 : @nat) (ih_1 : Type 0),
                    @pprod.{1 1}
                      (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                        ih_1) @punit.{1}) @nat.zero)) @punit.{1}
                (@pprod.mk.{1 1}
                  (@pprod.{1 1}
                    ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                    (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                      @nat.zero)) @punit.{1}
                  (@nat.rec.{1}
                    (λ (n : @nat),
                    @pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                      (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n))
                    (@pprod.mk.{1 1}
                      ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                      @punit.{1}
                      ((λ (a_3 : @nat)
                          (F_2 :
                            @nat.below.{1}
                              (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                          (a_4 : @nat),
                        (λ (a_5 a_6 : @nat)
                            (F_3 :
                              @nat.below.{1}
                                (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_6),
                          @nat.cases_on.{1}
                            (λ (a_7 : @nat),
                            ∀ (F_4 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                            @nat) a_6
                            (λ (F_4 :
                                @nat.below.{1}
                                  (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                  @nat.zero),
                            a_5)
                            (λ (a_1_0 : @nat)
                              (F_4 :
                                @nat.below.{1}
                                  (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                  (@nat.succ a_1_0)),
                            @nat.succ
                              (@pprod.fst.{1 1}
                                ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_1_0)
                                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                                  (λ (a_7 : @nat) (ih_1 : Type 0),
                                  @pprod.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_7) ih_1) @punit.{1}) a_1_0)
                                (@pprod.fst.{1 1}
                                  (@pprod.{1 1}
                                    ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_7 : @nat) (ih_1 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_8 : @nat),
                                            ∀ (a_9 : @nat),
                                            @nat) a_7) ih_1) @punit.{1}) a_1_0))
                                  @punit.{1} F_4) a_5)) F_3) a_4 a_3 F_2)
                        @nat.zero @punit.star.{1}) @punit.star.{1})
                    (λ (a_3 : @nat)
                      (ih_1 :
                        @pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                          (@nat.below.{1} (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            a_3)),
                    @pprod.mk.{1 1}
                      ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) (@nat.succ a_3))
                      (@pprod.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                          (@nat.below.{1} (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            a_3)) @punit.{1})
                      ((λ (a_4 : @nat)
                          (F_2 :
                            @nat.below.{1}
                              (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                          (a_5 : @nat),
                        (λ (a_6 a_7 : @nat)
                            (F_3 :
                              @nat.below.{1}
                                (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                          @nat.cases_on.{1}
                            (λ (a_8 : @nat),
                            ∀ (F_4 :
                                @nat.below.{1}
                                  (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat) a_8),
                            @nat) a_7
                            (λ (F_4 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                  @nat.zero),
                            a_6)
                            (λ (a_1_0 : @nat)
                              (F_4 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                  (@nat.succ a_1_0)),
                            @nat.succ
                              (@pprod.fst.{1 1}
                                ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_1_0)
                                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                                  (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                  @pprod.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                        a_8) ih_1_0) @punit.{1}) a_1_0)
                                (@pprod.fst.{1 1}
                                  (@pprod.{1 1}
                                    ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_9 : @nat),
                                            ∀ (a_10 : @nat),
                                            @nat) a_8) ih_1_0) @punit.{1})
                                      a_1_0)) @punit.{1} F_4) a_6)) F_3) a_5 a_4
                          F_2) (@nat.succ a_3)
                        (@pprod.mk.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                          @punit.{1} ih_1 @punit.star.{1}))
                      (@pprod.mk.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                          (@nat.below.{1} (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            a_3)) @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                  @punit.star.{1})) a_2))
          (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
            (λ (a_3 : @nat) (ih_1 : Type 0),
            @pprod.{1 1}
              (@pprod.{1 1} ((λ (a_4 : @nat), @list.{0} @nat) a_3) ih_1)
              @punit.{1})
            (@pprod.fst.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
              (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                (λ (a_3 : @nat) (ih_1 : Type 0),
                @pprod.{1 1}
                  (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                    ih_1) @punit.{1}) @nat.zero)
              (@pprod.fst.{1 1}
                (@pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                  (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                    (λ (a_3 : @nat) (ih_1 : Type 0),
                    @pprod.{1 1}
                      (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                        ih_1) @punit.{1}) @nat.zero)) @punit.{1}
                (@pprod.mk.{1 1}
                  (@pprod.{1 1}
                    ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                    (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                      @nat.zero)) @punit.{1}
                  (@nat.rec.{1}
                    (λ (n : @nat),
                    @pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                      (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n))
                    (@pprod.mk.{1 1}
                      ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                      @punit.{1}
                      ((λ (a_3 : @nat)
                          (F_2 :
                            @nat.below.{1}
                              (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                          (a_4 : @nat),
                        (λ (a_5 a_6 : @nat)
                            (F_3 :
                              @nat.below.{1}
                                (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_6),
                          @nat.cases_on.{1}
                            (λ (a_7 : @nat),
                            ∀ (F_4 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                            @nat) a_6
                            (λ (F_4 :
                                @nat.below.{1}
                                  (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                  @nat.zero),
                            a_5)
                            (λ (a_1_0 : @nat)
                              (F_4 :
                                @nat.below.{1}
                                  (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                  (@nat.succ a_1_0)),
                            @nat.succ
                              (@pprod.fst.{1 1}
                                ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_1_0)
                                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                                  (λ (a_7 : @nat) (ih_1 : Type 0),
                                  @pprod.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                        a_7) ih_1) @punit.{1}) a_1_0)
                                (@pprod.fst.{1 1}
                                  (@pprod.{1 1}
                                    ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_7 : @nat) (ih_1 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_8 : @nat),
                                            ∀ (a_9 : @nat),
                                            @nat) a_7) ih_1) @punit.{1}) a_1_0))
                                  @punit.{1} F_4) a_5)) F_3) a_4 a_3 F_2)
                        @nat.zero @punit.star.{1}) @punit.star.{1})
                    (λ (a_3 : @nat)
                      (ih_1 :
                        @pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                          (@nat.below.{1} (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            a_3)),
                    @pprod.mk.{1 1}
                      ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) (@nat.succ a_3))
                      (@pprod.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                          (@nat.below.{1} (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            a_3)) @punit.{1})
                      ((λ (a_4 : @nat)
                          (F_2 :
                            @nat.below.{1}
                              (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                          (a_5 : @nat),
                        (λ (a_6 a_7 : @nat)
                            (F_3 :
                              @nat.below.{1}
                                (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                          @nat.cases_on.{1}
                            (λ (a_8 : @nat),
                            ∀ (F_4 :
                                @nat.below.{1}
                                  (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat) a_8),
                            @nat) a_7
                            (λ (F_4 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                  @nat.zero),
                            a_6)
                            (λ (a_1_0 : @nat)
                              (F_4 :
                                @nat.below.{1}
                                  (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                  (@nat.succ a_1_0)),
                            @nat.succ
                              (@pprod.fst.{1 1}
                                ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_1_0)
                                (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                                  (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                  @pprod.{1 1}
                                    (@pprod.{1 1}
                                      ((λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                        a_8) ih_1_0) @punit.{1}) a_1_0)
                                (@pprod.fst.{1 1}
                                  (@pprod.{1 1}
                                    ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_9 : @nat),
                                            ∀ (a_10 : @nat),
                                            @nat) a_8) ih_1_0) @punit.{1})
                                      a_1_0)) @punit.{1} F_4) a_6)) F_3) a_5 a_4
                          F_2) (@nat.succ a_3)
                        (@pprod.mk.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                            (@nat.below.{1}
                              (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                          @punit.{1} ih_1 @punit.star.{1}))
                      (@pprod.mk.{1 1}
                        (@pprod.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                          (@nat.below.{1} (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            a_3)) @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                  @punit.star.{1})) a_2))
          (@pprod.fst.{1 1}
            (@pprod.{1 1}
              ((λ (a_3 : @nat), @list.{0} @nat)
                (@pprod.fst.{1 1}
                  ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                  (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                    (λ (a_3 : @nat) (ih_1 : Type 0),
                    @pprod.{1 1}
                      (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                        ih_1) @punit.{1}) @nat.zero)
                  (@pprod.fst.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                      (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                        (λ (a_3 : @nat) (ih_1 : Type 0),
                        @pprod.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                          @punit.{1}) @nat.zero)) @punit.{1}
                    (@pprod.mk.{1 1}
                      (@pprod.{1 1}
                        ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                        (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                          @nat.zero)) @punit.{1}
                      (@nat.rec.{1}
                        (λ (n : @nat),
                        @pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                          (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                            n))
                        (@pprod.mk.{1 1}
                          ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                          @punit.{1}
                          ((λ (a_3 : @nat)
                              (F_2 :
                                @nat.below.{1}
                                  (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                              (a_4 : @nat),
                            (λ (a_5 a_6 : @nat)
                                (F_3 :
                                  @nat.below.{1}
                                    (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_6),
                              @nat.cases_on.{1}
                                (λ (a_7 : @nat),
                                ∀ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_7),
                                @nat) a_6
                                (λ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      @nat.zero),
                                a_5)
                                (λ (a_1_0 : @nat)
                                  (F_4 :
                                    @nat.below.{1}
                                      (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      (@nat.succ a_1_0)),
                                @nat.succ
                                  (@pprod.fst.{1 1}
                                    ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_7 : @nat) (ih_1 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_8 : @nat),
                                            ∀ (a_9 : @nat),
                                            @nat) a_7) ih_1) @punit.{1}) a_1_0)
                                    (@pprod.fst.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                          a_1_0)
                                        (@nat.rec.{2} (λ (n : @nat), Type 0)
                                          @punit.{1}
                                          (λ (a_7 : @nat) (ih_1 : Type 0),
                                          @pprod.{1 1}
                                            (@pprod.{1 1}
                                              ((λ (a_8 : @nat),
                                                ∀ (a_9 : @nat),
                                                @nat) a_7) ih_1) @punit.{1})
                                          a_1_0)) @punit.{1} F_4) a_5)) F_3) a_4
                              a_3 F_2) @nat.zero @punit.star.{1})
                          @punit.star.{1})
                        (λ (a_3 : @nat)
                          (ih_1 :
                            @pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)),
                        @pprod.mk.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            (@nat.succ a_3))
                          (@pprod.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                            @punit.{1})
                          ((λ (a_4 : @nat)
                              (F_2 :
                                @nat.below.{1}
                                  (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                              (a_5 : @nat),
                            (λ (a_6 a_7 : @nat)
                                (F_3 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                              @nat.cases_on.{1}
                                (λ (a_8 : @nat),
                                ∀ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                      a_8),
                                @nat) a_7
                                (λ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      @nat.zero),
                                a_6)
                                (λ (a_1_0 : @nat)
                                  (F_4 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      (@nat.succ a_1_0)),
                                @nat.succ
                                  (@pprod.fst.{1 1}
                                    ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_9 : @nat),
                                            ∀ (a_10 : @nat),
                                            @nat) a_8) ih_1_0) @punit.{1})
                                      a_1_0)
                                    (@pprod.fst.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                          a_1_0)
                                        (@nat.rec.{2} (λ (n : @nat), Type 0)
                                          @punit.{1}
                                          (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                          @pprod.{1 1}
                                            (@pprod.{1 1}
                                              ((λ (a_9 : @nat),
                                                ∀ (a_10 : @nat),
                                                @nat) a_8) ih_1_0) @punit.{1})
                                          a_1_0)) @punit.{1} F_4) a_6)) F_3) a_5
                              a_4 F_2) (@nat.succ a_3)
                            (@pprod.mk.{1 1}
                              (@pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                              @punit.{1} ih_1 @punit.star.{1}))
                          (@pprod.mk.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                            @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                      @punit.star.{1})) a_2))
              (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                (λ (a_3 : @nat) (ih_1 : Type 0),
                @pprod.{1 1}
                  (@pprod.{1 1} ((λ (a_4 : @nat), @list.{0} @nat) a_3) ih_1)
                  @punit.{1})
                (@pprod.fst.{1 1}
                  ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                  (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                    (λ (a_3 : @nat) (ih_1 : Type 0),
                    @pprod.{1 1}
                      (@pprod.{1 1} ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                        ih_1) @punit.{1}) @nat.zero)
                  (@pprod.fst.{1 1}
                    (@pprod.{1 1}
                      ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                      (@nat.rec.{2} (λ (n : @nat), Type 0) @punit.{1}
                        (λ (a_3 : @nat) (ih_1 : Type 0),
                        @pprod.{1 1}
                          (@pprod.{1 1}
                            ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3) ih_1)
                          @punit.{1}) @nat.zero)) @punit.{1}
                    (@pprod.mk.{1 1}
                      (@pprod.{1 1}
                        ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                        (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                          @nat.zero)) @punit.{1}
                      (@nat.rec.{1}
                        (λ (n : @nat),
                        @pprod.{1 1} ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) n)
                          (@nat.below.{1} (λ (a_3 : @nat), ∀ (a_4 : @nat), @nat)
                            n))
                        (@pprod.mk.{1 1}
                          ((λ (a_3 : @nat), ∀ (a_4 : @nat), @nat) @nat.zero)
                          @punit.{1}
                          ((λ (a_3 : @nat)
                              (F_2 :
                                @nat.below.{1}
                                  (λ (a_5 : @nat), ∀ (a_6 : @nat), @nat) a_3)
                              (a_4 : @nat),
                            (λ (a_5 a_6 : @nat)
                                (F_3 :
                                  @nat.below.{1}
                                    (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat) a_6),
                              @nat.cases_on.{1}
                                (λ (a_7 : @nat),
                                ∀ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_7),
                                @nat) a_6
                                (λ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      @nat.zero),
                                a_5)
                                (λ (a_1_0 : @nat)
                                  (F_4 :
                                    @nat.below.{1}
                                      (λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      (@nat.succ a_1_0)),
                                @nat.succ
                                  (@pprod.fst.{1 1}
                                    ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_7 : @nat) (ih_1 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_8 : @nat),
                                            ∀ (a_9 : @nat),
                                            @nat) a_7) ih_1) @punit.{1}) a_1_0)
                                    (@pprod.fst.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_7 : @nat), ∀ (a_8 : @nat), @nat)
                                          a_1_0)
                                        (@nat.rec.{2} (λ (n : @nat), Type 0)
                                          @punit.{1}
                                          (λ (a_7 : @nat) (ih_1 : Type 0),
                                          @pprod.{1 1}
                                            (@pprod.{1 1}
                                              ((λ (a_8 : @nat),
                                                ∀ (a_9 : @nat),
                                                @nat) a_7) ih_1) @punit.{1})
                                          a_1_0)) @punit.{1} F_4) a_5)) F_3) a_4
                              a_3 F_2) @nat.zero @punit.star.{1})
                          @punit.star.{1})
                        (λ (a_3 : @nat)
                          (ih_1 :
                            @pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)),
                        @pprod.mk.{1 1}
                          ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat)
                            (@nat.succ a_3))
                          (@pprod.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                            @punit.{1})
                          ((λ (a_4 : @nat)
                              (F_2 :
                                @nat.below.{1}
                                  (λ (a_6 : @nat), ∀ (a_7 : @nat), @nat) a_4)
                              (a_5 : @nat),
                            (λ (a_6 a_7 : @nat)
                                (F_3 :
                                  @nat.below.{1}
                                    (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat) a_7),
                              @nat.cases_on.{1}
                                (λ (a_8 : @nat),
                                ∀ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_9 : @nat), ∀ (a_10 : @nat), @nat)
                                      a_8),
                                @nat) a_7
                                (λ (F_4 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      @nat.zero),
                                a_6)
                                (λ (a_1_0 : @nat)
                                  (F_4 :
                                    @nat.below.{1}
                                      (λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      (@nat.succ a_1_0)),
                                @nat.succ
                                  (@pprod.fst.{1 1}
                                    ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                      a_1_0)
                                    (@nat.rec.{2} (λ (n : @nat), Type 0)
                                      @punit.{1}
                                      (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                      @pprod.{1 1}
                                        (@pprod.{1 1}
                                          ((λ (a_9 : @nat),
                                            ∀ (a_10 : @nat),
                                            @nat) a_8) ih_1_0) @punit.{1})
                                      a_1_0)
                                    (@pprod.fst.{1 1}
                                      (@pprod.{1 1}
                                        ((λ (a_8 : @nat), ∀ (a_9 : @nat), @nat)
                                          a_1_0)
                                        (@nat.rec.{2} (λ (n : @nat), Type 0)
                                          @punit.{1}
                                          (λ (a_8 : @nat) (ih_1_0 : Type 0),
                                          @pprod.{1 1}
                                            (@pprod.{1 1}
                                              ((λ (a_9 : @nat),
                                                ∀ (a_10 : @nat),
                                                @nat) a_8) ih_1_0) @punit.{1})
                                          a_1_0)) @punit.{1} F_4) a_6)) F_3) a_5
                              a_4 F_2) (@nat.succ a_3)
                            (@pprod.mk.{1 1}
                              (@pprod.{1 1}
                                ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                                (@nat.below.{1}
                                  (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                              @punit.{1} ih_1 @punit.star.{1}))
                          (@pprod.mk.{1 1}
                            (@pprod.{1 1}
                              ((λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3)
                              (@nat.below.{1}
                                (λ (a_4 : @nat), ∀ (a_5 : @nat), @nat) a_3))
                            @punit.{1} ih_1 @punit.star.{1})) @nat.zero)
                      @punit.star.{1})) a_2))) @punit.{1} F_1))) F_0) a_0 F),0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.digit_succ"

mod: "DefMod(Definition(nat.to_digits,Vector(),∀ (base a : @nat), @list.{0} @nat,λ (base : @nat), @nat.to_digits._main base,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.to_digits._main"

mod: "DefMod(Definition(nat.has_repr,Vector(),@has_repr.{0} @nat,@has_repr.mk.{0} @nat @nat.repr,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.repr"

mod: "DefMod(Definition(occurrences_repr,Vector(),∀ (a : @occurrences), @string,@occurrences_repr._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @occurrences_repr._main"

mod: "DefMod(Definition(algebra.sub,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α), α,λ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@has_add.add.{u} α
  (@add_semigroup.to_has_add.{u} α
    (@add_monoid.to_add_semigroup.{u} α
      (@add_group.to_add_monoid.{u} α inst_1))) a
  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group_has_sub,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α], @has_sub.{u} α,λ {α : Type u} [inst_1 : @add_group.{u} α],
@has_sub.mk.{u} α (@algebra.sub.{u} α inst_1),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(sub_eq_add_neg,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@eq.{u+1} α (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a b)
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1))) a
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)),λ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@rfl.{u+1} α (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a b),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_sub_assoc,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a b c : α),
@eq.{u+1} α
  (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))) a b) c)
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1))) a
    (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)),λ {α : Type u} [inst_1 : @add_group.{u} α] (a b c : α),
@eq.mpr.{0}
  (@eq.{u+1} α
    (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b) c)
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))) a
      (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
  (@eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))) a
      (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
  (@id_locked.{0}
    (@eq.{1} Prop
      (@eq.{u+1} α
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b) c)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
    (@eq.rec.{0 u+1} α
      (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b) c)
      (λ (a_0 : α),
      @eq.{1} Prop
        (@eq.{u+1} α
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b) c)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
        (@eq.{u+1} α a_0
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
      (@eq.refl.{1} Prop
        (@eq.{u+1} α
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b) c)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
      (@sub_eq_add_neg.{u} α inst_1
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b) c)))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) b
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
      (@eq.rec.{0 u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
          (@eq.{u+1} α a_0
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
        (@add_assoc.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)) a b
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))))
    (@eq.mpr.{0}
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
      (@id_locked.{0}
        (@eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
        (@eq.rec.{0 u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
          (λ (a_0 : α),
          @eq.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)))
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a a_0)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
          (@eq.refl.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)
          (@eq.symm.{u+1} α
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
            (@sub_eq_add_neg.{u} α inst_1 b c))))
      (@eq.refl.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) b c))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(state_t,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α : Type u),
Type (max u
v),λ (σ : Type u) (m : (∀ (a_0 : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α : Type u),
∀ (a : σ),
m (@prod.{u u} α σ),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t_bind._match_1,Vector(Param(u), Param(v)),∀ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : (∀ (a_0 : α), @state_t.{u v} σ m inst_1 β))
  (a : @prod.{u u} α σ),
m (@prod.{u u} β σ),λ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : (∀ (a_0 : α), @state_t.{u v} σ m inst_1 β))
  (a : @prod.{u u} α σ),
@prod.cases_on.{v+1 u u} α σ (λ (a_0 : @prod.{u u} α σ), m (@prod.{u u} β σ)) a
  (λ (fst : α) (snd : σ), @id_rhs.{v+1} (m (@prod.{u u} β σ)) (act fst snd)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t_bind,Vector(Param(u), Param(v)),∀ {σ : Type u} {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : @state_t.{u v} σ m inst_1 α)
  (act_0 : (∀ (a : α), @state_t.{u v} σ m inst_1 β)),
@state_t.{u v} σ m inst_1 β,λ {σ : Type u} {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : @state_t.{u v} σ m inst_1 α)
  (act_0 : (∀ (a : α), @state_t.{u v} σ m inst_1 β)) (s : σ),
(λ (this : m (@prod.{u u} β σ)), this)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α σ)
    (@prod.{u u} β σ) (act s)
    (λ (p : @prod.{u u} α σ),
    @state_t_bind._match_1.{u v} σ m inst_1 α β act_0 p)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t_return,Vector(Param(u), Param(v)),∀ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α : Type u} (a : α),
@state_t.{u v} σ m inst_1 α,λ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α : Type u} (a : α) (s : σ),
(λ (this : m (@prod.{u u} α σ)), this)
  (@return.{u v} m inst_1 (@prod.{u u} α σ) (@prod.mk.{u u} α σ a s)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_1,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u),
@eq.{max (u+1) ((max u v)+1)}
  (∀ (a : α) (a_0 : @state_t.{u v} σ m inst_1 β), @state_t.{u v} σ m inst_1 α)
  (@has_map.map_const.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f))
      (λ (α_0 β_0 : Type u),
      @function.comp.{u+1 u+1 (max u v)+1} α_0 (∀ (a : β_0), α_0)
        (∀ (a : @state_t.{u v} σ m inst_1 β_0), @state_t.{u v} σ m inst_1 α_0)
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0 α_0)
        (@function.const.{u+1 u+1} α_0 β_0))) α β)
  (@has_map.map_const.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f))
      (λ (α_0 β_0 : Type u),
      @function.comp.{u+1 u+1 (max u v)+1} α_0 (∀ (a : β_0), α_0)
        (∀ (a : @state_t.{u v} σ m inst_1 β_0), @state_t.{u v} σ m inst_1 α_0)
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0 α_0)
        (@function.const.{u+1 u+1} α_0 β_0))) α β),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u),
@rfl.{max (u+1) ((max u v)+1)}
  (∀ (a : α) (a_0 : @state_t.{u v} σ m inst_1 β), @state_t.{u v} σ m inst_1 α)
  (@has_map.map_const.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f))
      (λ (α_0 β_0 : Type u),
      @function.comp.{u+1 u+1 (max u v)+1} α_0 (∀ (a : β_0), α_0)
        (∀ (a : @state_t.{u v} σ m inst_1 β_0), @state_t.{u v} σ m inst_1 α_0)
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0 α_0)
        (@function.const.{u+1 u+1} α_0 β_0))) α β),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t_return.equations._eqn_1,Vector(Param(u), Param(v)),∀ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α : Type u} (a : α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α)
  (@state_t_return.{u v} σ m inst_1 α a)
  (λ (s : σ),
  (λ (this : m (@prod.{u u} α σ)), this)
    (@return.{u v} m inst_1 (@prod.{u u} α σ) (@prod.mk.{u u} α σ a s))),λ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α : Type u} (a : α),
@eq.refl.{(max u v)+1} (@state_t.{u v} σ m inst_1 α)
  (@state_t_return.{u v} σ m inst_1 α a),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(return.equations._eqn_1,Vector(Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u},
@eq.{max (u+1) (v+1)} (∀ (a : α), m α) (@return.{u v} m inst_1 α)
  (@pure.{u v} (λ {α_0 : Type u}, m α_0)
    (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
      (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1)) α),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u},
@eq.refl.{max (u+1) (v+1)} (∀ (a : α), m α) (@return.{u v} m inst_1 α),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t_bind.equations._eqn_1,Vector(Param(u), Param(v)),∀ {σ : Type u} {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : @state_t.{u v} σ m inst_1 α)
  (act_0 : (∀ (a : α), @state_t.{u v} σ m inst_1 β)),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@state_t_bind.{u v} σ m inst_1 α β act act_0)
  (λ (s : σ),
  (λ (this : m (@prod.{u u} β σ)), this)
    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
      (@prod.{u u} α σ) (@prod.{u u} β σ) (act s)
      (λ (p : @prod.{u u} α σ),
      @state_t_bind._match_1.{u v} σ m inst_1 α β act_0 p))),λ {σ : Type u} {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : @state_t.{u v} σ m inst_1 α)
  (act_0 : (∀ (a : α), @state_t.{u v} σ m inst_1 β)),
@eq.refl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@state_t_bind.{u v} σ m inst_1 α β act act_0),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(functor.id_map,Vector(Param(u), Param(v)),∀ {f : (∀ (a : Type u), Type v)} [c : @functor.{u v} f] {α : Type u} (x : f α),
@eq.{v+1} (f α)
  (@has_map.map.{u v} f (@functor.to_has_map.{u v} f c) α α (@id.{u+1} α) x) x,λ (f : (∀ (a : Type u), Type v)) [c : @functor.{u v} f],
@functor.rec.{0 u v} f
  (λ [c_0 : @functor.{u v} f],
  ∀ {α : Type u} (x : f α),
  @eq.{v+1} (f α)
    (@has_map.map.{u v} f (@functor.to_has_map.{u v} f c_0) α α (@id.{u+1} α) x)
    x)
  (λ (to_has_map : @has_map.{u v} f)
    (map_const_eq :
      @auto_param.{0}
        (∀ {α β : Type u},
        @eq.{max (u+1) (v+1)} (∀ (a : α) (a_0 : f β), f α)
          (@has_map.map_const.{u v} f to_has_map α β)
          (@function.comp.{u+1 u+1 v+1} α (∀ (a : β), α) (∀ (a : f β), f α)
            (@has_map.map.{u v} f to_has_map β α)
            (@function.const.{u+1 u+1} α β)))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (id_map :
      (∀ {α : Type u} (x : f α),
      @eq.{v+1} (f α) (@has_map.map.{u v} f to_has_map α α (@id.{u+1} α) x) x))
    (map_comp :
      (∀ {α β γ : Type u} (g : (∀ (a : α), β)) (h : (∀ (a : β), γ)) (x : f α),
      @eq.{v+1} (f γ)
        (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0) to_has_map α γ
          (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
        (@has_map.map.{u v} f to_has_map β γ h
          (@has_map.map.{u v} f to_has_map α β g x)))),
  id_map) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @functor.{u v}"

mod: "DefMod(Definition(monad.bind_pure,Vector(Param(u), Param(v)),∀ {α β : Type u} {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m]
  (x : m α),
@eq.{v+1} (m α)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) α α x
    (@pure.{u v} m
      (@applicative.to_has_pure.{u v} m (@monad.to_applicative.{u v} m inst_1))
      α)) x,λ {α β : Type u} {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m]
  (x : m α),
@eq.trans.{v+1} (m α)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) α α x
    (@pure.{u v} m
      (@applicative.to_has_pure.{u v} m (@monad.to_applicative.{u v} m inst_1))
      α))
  (@has_map.map.{u v} m
    (@functor.to_has_map.{u v} m
      (@applicative.to_functor.{u v} m (@monad.to_applicative.{u v} m inst_1)))
    α α (λ (x_0 : α), x_0) x) x
  (@monad.bind_pure_comp_eq_map.{u v} m inst_1 α α (λ (x_0 : α), x_0) x)
  (@functor.id_map.{u v} m
    (@applicative.to_functor.{u v} m (@monad.to_applicative.{u v} m inst_1)) α
    x),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_2,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α : Type u) (x : @state_t.{u v} σ m inst_1 α),
@eq.{max (u+1) (v+1)} (∀ (x_0 : σ), (λ (x_1 : σ), m (@prod.{u u} α σ)) x_0)
  ((λ (α_0 β : Type u) (f : (∀ (a : α_0), β))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β (@state_t.{u v} σ m inst_1 β)
        (@state_t_return.{u v} σ m inst_1 β) f)) α α (@id.{u+1} α) x) x,λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α : Type u) (x : @state_t.{u v} σ m inst_1 α),
@funext.{u+1 v+1} σ (λ (x_0 : σ), m (@prod.{u u} α σ))
  ((λ (α_0 β : Type u) (f : (∀ (a : α_0), β))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β (@state_t.{u v} σ m inst_1 β)
        (@state_t_return.{u v} σ m inst_1 β) f)) α α (@id.{u+1} α) x) x
  (λ (x_1 : σ),
  @eq.mpr.{0}
    (@eq.{v+1} (m (@prod.{u u} α σ))
      ((λ (α_0 β : Type u) (f : (∀ (a : α_0), β))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β
            (@state_t.{u v} σ m inst_1 β) (@state_t_return.{u v} σ m inst_1 β)
            f)) α α (@id.{u+1} α) x x_1) (x x_1))
    (@eq.{v+1} (m (@prod.{u u} α σ))
      (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
        (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
        (@state_t_bind._match_1.{u v} σ m inst_1 α α
          (λ (x_0 : α) (s : σ),
          @pure.{u v} (λ {α_0 : Type u}, m α_0)
            (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
              (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1))
            (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s)))) (x x_1))
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{v+1} (m (@prod.{u u} α σ))
          ((λ (α_0 β : Type u) (f : (∀ (a : α_0), β))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β
                (@state_t.{u v} σ m inst_1 β)
                (@state_t_return.{u v} σ m inst_1 β) f)) α α (@id.{u+1} α) x
            x_1) (x x_1))
        (@eq.{v+1} (m (@prod.{u u} α σ))
          (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
            (@state_t_bind._match_1.{u v} σ m inst_1 α α
              (λ (x_0 : α) (s : σ),
              @pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                  (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                    inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s))))
          (x x_1)))
      ((λ (a a_0 : m (@prod.{u u} α σ))
          (e_1 : @eq.{v+1} (m (@prod.{u u} α σ)) a a_0)
          (a_1 a_2 : m (@prod.{u u} α σ))
          (e_2 : @eq.{v+1} (m (@prod.{u u} α σ)) a_1 a_2),
        @congr.{v+1 1} (m (@prod.{u u} α σ)) Prop
          (@eq.{v+1} (m (@prod.{u u} α σ)) a)
          (@eq.{v+1} (m (@prod.{u u} α σ)) a_0) a_1 a_2
          (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} α σ))
            (∀ (a_3 : m (@prod.{u u} α σ)), Prop) a a_0
            (@eq.{v+1} (m (@prod.{u u} α σ))) e_1) e_2)
        ((λ (α_0 β : Type u) (f : (∀ (a : α_0), β))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β x_0
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β
              (@state_t.{u v} σ m inst_1 β) (@state_t_return.{u v} σ m inst_1 β)
              f)) α α (@id.{u+1} α) x x_1)
        (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
          (@state_t_bind._match_1.{u v} σ m inst_1 α α
            (λ (x_0 : α) (s : σ),
            @pure.{u v} (λ {α_0 : Type u}, m α_0)
              (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1))
              (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s))))
        (@eq.trans.{v+1} (m (@prod.{u u} α σ))
          (@state_t_bind.{u v} σ m inst_1 α α x
            (@function.comp.{u+1 u+1 (max u v)+1} α α
              (@state_t.{u v} σ m inst_1 α) (@state_t_return.{u v} σ m inst_1 α)
              (@id.{u+1} α)) x_1)
          (@state_t_bind.{u v} σ m inst_1 α α x
            (λ (x_0 : α) (s : σ),
            @pure.{u v} (λ {α_0 : Type u}, m α_0)
              (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1))
              (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s)) x_1)
          ((λ (s : σ),
            (λ (this : m (@prod.{u u} α σ)), this)
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} α σ) (x s)
                (λ (p : @prod.{u u} α σ),
                @state_t_bind._match_1.{u v} σ m inst_1 α α
                  (λ (x_0 : α) (s_0 : σ),
                  @pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                      (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                        inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s_0))
                  p))) x_1)
          ((λ (act act_0 : @state_t.{u v} σ m inst_1 α)
              (e_1 : @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α) act act_0)
              (act_1 act_2 : (∀ (a_1 : α), @state_t.{u v} σ m inst_1 α))
              (e_2 :
                @eq.{max (u+1) ((max u v)+1)}
                  (∀ (a_1 : α), @state_t.{u v} σ m inst_1 α) act_1 act_2)
              (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
            @congr.{u+1 v+1} σ (m (@prod.{u u} α σ))
              (@state_t_bind.{u v} σ m inst_1 α α act act_1)
              (@state_t_bind.{u v} σ m inst_1 α α act_0 act_2) a a_0
              (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                (∀ (a_1 : α), @state_t.{u v} σ m inst_1 α)
                (@state_t.{u v} σ m inst_1 α)
                (@state_t_bind.{u v} σ m inst_1 α α act)
                (@state_t_bind.{u v} σ m inst_1 α α act_0) act_1 act_2
                (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                  (@state_t.{u v} σ m inst_1 α)
                  (∀ (act_3 : (∀ (a_1 : α), @state_t.{u v} σ m inst_1 α)),
                  @state_t.{u v} σ m inst_1 α) act act_0
                  (@state_t_bind.{u v} σ m inst_1 α α) e_1) e_2) e_3) x x
            (@eq.refl.{(max u v)+1} (@state_t.{u v} σ m inst_1 α) x)
            (@function.comp.{u+1 u+1 (max u v)+1} α α
              (@state_t.{u v} σ m inst_1 α) (@state_t_return.{u v} σ m inst_1 α)
              (@id.{u+1} α))
            (λ (x_0 : α) (s : σ),
            @pure.{u v} (λ {α_0 : Type u}, m α_0)
              (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1))
              (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s))
            (@eq.trans.{max (u+1) ((max u v)+1)}
              (∀ (a : α), @state_t.{u v} σ m inst_1 α)
              (@function.comp.{u+1 u+1 (max u v)+1} α α
                (@state_t.{u v} σ m inst_1 α)
                (@state_t_return.{u v} σ m inst_1 α) (@id.{u+1} α))
              (λ (x_0 : α),
              @state_t_return.{u v} σ m inst_1 α (@id.{u+1} α x_0))
              (λ (x_0 : α) (x_2 : σ),
              @pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                  (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                    inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 x_2))
              (@function.comp.equations._eqn_1.{u+1 u+1 (max u v)+1} α α
                (@state_t.{u v} σ m inst_1 α)
                (@state_t_return.{u v} σ m inst_1 α) (@id.{u+1} α))
              (@funext.{u+1 (max u v)+1} α
                (λ (x_0 : α), @state_t.{u v} σ m inst_1 α)
                (λ (x_0 : α),
                @state_t_return.{u v} σ m inst_1 α (@id.{u+1} α x_0))
                (λ (x_0 : α) (x_2 : σ),
                @pure.{u v} (λ {α_0 : Type u}, m α_0)
                  (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                      inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 x_2))
                (λ (x_0 : α),
                @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 α)
                  (@state_t_return.{u v} σ m inst_1 α (@id.{u+1} α x_0))
                  (λ (s : σ),
                  (λ (this : m (@prod.{u u} α σ)), this)
                    (@return.{u v} m inst_1 (@prod.{u u} α σ)
                      (@prod.mk.{u u} α σ x_0 s)))
                  (λ (x_2 : σ),
                  @pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                      (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                        inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 x_2))
                  (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 α)
                    (@state_t_return.{u v} σ m inst_1 α (@id.{u+1} α x_0))
                    (@state_t_return.{u v} σ m inst_1 α x_0)
                    (λ (s : σ),
                    (λ (this : m (@prod.{u u} α σ)), this)
                      (@return.{u v} m inst_1 (@prod.{u u} α σ)
                        (@prod.mk.{u u} α σ x_0 s)))
                    ((λ {σ_0 : Type u} {m_0 : (∀ (a_1 : Type u), Type v)}
                        [inst_1_0 : @monad.{u v} m_0] {α_0 : Type u}
                        (a a_0 : α_0) (e_5 : @eq.{u+1} α_0 a a_0),
                      @congr_arg.{u+1 (max u v)+1} α_0
                        (@state_t.{u v} σ_0 m_0 inst_1_0 α_0) a a_0
                        (@state_t_return.{u v} σ_0 m_0 inst_1_0 α_0) e_5) σ m
                      inst_1 α (@id.{u+1} α x_0) x_0 (@id.def.{u+1} α x_0))
                    (@state_t_return.equations._eqn_1.{u v} σ m inst_1 α x_0))
                  (@funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} α σ))
                    (λ (x_2 : σ),
                    @return.{u v} m inst_1 (@prod.{u u} α σ)
                      (@prod.mk.{u u} α σ x_0 x_2))
                    (λ (x_2 : σ),
                    @pure.{u v} (λ {α_0 : Type u}, m α_0)
                      (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                        (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                          inst_1)) (@prod.{u u} α σ)
                      (@prod.mk.{u u} α σ x_0 x_2))
                    (λ (s : σ),
                    @congr_fun.{u+1 v+1} (@prod.{u u} α σ)
                      (λ (a : @prod.{u u} α σ), m (@prod.{u u} α σ))
                      (@return.{u v} m inst_1 (@prod.{u u} α σ))
                      (@pure.{u v} (λ {α_0 : Type u}, m α_0)
                        (@applicative.to_has_pure.{u v}
                          (λ {α_0 : Type u}, m α_0)
                          (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                            inst_1)) (@prod.{u u} α σ))
                      (@return.equations._eqn_1.{u v} m inst_1
                        (@prod.{u u} α σ)) (@prod.mk.{u u} α σ x_0 s)))))) x_1
            x_1 (@eq.refl.{u+1} σ x_1))
          (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} α σ))
            (@state_t_bind.{u v} σ m inst_1 α α x
              (λ (x_0 : α) (s : σ),
              @pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                  (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                    inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s)))
            (λ (s : σ),
            (λ (this : m (@prod.{u u} α σ)), this)
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} α σ) (x s)
                (λ (p : @prod.{u u} α σ),
                @state_t_bind._match_1.{u v} σ m inst_1 α α
                  (λ (x_0 : α) (s_0 : σ),
                  @pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                      (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                        inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s_0))
                  p)))
            (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α α x
              (λ (x_0 : α) (s : σ),
              @pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                  (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                    inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s)))
            x_1)) (x x_1) (x x_1)
        (@eq.refl.{v+1} (m (@prod.{u u} α σ)) (x x_1))))
    (@eq.mpr.{0}
      (@eq.{v+1} (m (@prod.{u u} α σ))
        (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
          (@state_t_bind._match_1.{u v} σ m inst_1 α α
            (λ (x_0 : α) (s : σ),
            @pure.{u v} (λ {α_0 : Type u}, m α_0)
              (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0) inst_1))
              (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s)))) (x x_1))
      (@eq.{v+1} (m (@prod.{u u} α σ))
        (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
          (@pure.{u v} m
            (@applicative.to_has_pure.{u v} m
              (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)))
        (x x_1))
      (@id_locked.{0}
        (@eq.{1} Prop
          (@eq.{v+1} (m (@prod.{u u} α σ))
            (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
              (@state_t_bind._match_1.{u v} σ m inst_1 α α
                (λ (x_0 : α) (s : σ),
                @pure.{u v} (λ {α_0 : Type u}, m α_0)
                  (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                      inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s))))
            (x x_1))
          (@eq.{v+1} (m (@prod.{u u} α σ))
            (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
              (@pure.{u v} m
                (@applicative.to_has_pure.{u v} m
                  (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)))
            (x x_1)))
        (@eq.rec.{0 max (u+1) (v+1)}
          (∀ (a : @prod.{u u} α σ), m (@prod.{u u} α σ))
          (@state_t_bind._match_1.{u v} σ m inst_1 α α
            (λ (x_0 : α) (s : σ),
            @pure.{u v} m
              (@applicative.to_has_pure.{u v} m
                (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)
              (@prod.mk.{u u} α σ x_0 s)))
          (λ (a : (∀ (a_0 : @prod.{u u} α σ), m (@prod.{u u} α σ))),
          @eq.{1} Prop
            (@eq.{v+1} (m (@prod.{u u} α σ))
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
                (@state_t_bind._match_1.{u v} σ m inst_1 α α
                  (λ (x_0 : α) (s : σ),
                  @pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                      (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                        inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s))))
              (x x_1))
            (@eq.{v+1} (m (@prod.{u u} α σ))
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1) a) (x x_1)))
          (@eq.refl.{1} Prop
            (@eq.{v+1} (m (@prod.{u u} α σ))
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} α σ) (x x_1)
                (@state_t_bind._match_1.{u v} σ m inst_1 α α
                  (λ (x_0 : α) (s : σ),
                  @pure.{u v} (λ {α_0 : Type u}, m α_0)
                    (@applicative.to_has_pure.{u v} (λ {α_0 : Type u}, m α_0)
                      (@monad.to_applicative.{u v} (λ {α_0 : Type u}, m α_0)
                        inst_1)) (@prod.{u u} α σ) (@prod.mk.{u u} α σ x_0 s))))
              (x x_1)))
          (@pure.{u v} m
            (@applicative.to_has_pure.{u v} m
              (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ))
          (@funext.{u+1 v+1} (@prod.{u u} α σ)
            (λ (x_0 : @prod.{u u} α σ), m (@prod.{u u} α σ))
            (@state_t_bind._match_1.{u v} σ m inst_1 α α
              (λ (x_0 : α) (s : σ),
              @pure.{u v} m
                (@applicative.to_has_pure.{u v} m
                  (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)
                (@prod.mk.{u u} α σ x_0 s)))
            (@pure.{u v} m
              (@applicative.to_has_pure.{u v} m
                (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ))
            (λ (s : @prod.{u u} α σ),
            @prod.cases_on.{0 u u} α σ
              (λ (s_0 : @prod.{u u} α σ),
              @eq.{v+1} (m (@prod.{u u} α σ))
                (@state_t_bind._match_1.{u v} σ m inst_1 α α
                  (λ (x_0 : α) (s_1 : σ),
                  @pure.{u v} m
                    (@applicative.to_has_pure.{u v} m
                      (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)
                    (@prod.mk.{u u} α σ x_0 s_1)) s_0)
                (@pure.{u v} m
                  (@applicative.to_has_pure.{u v} m
                    (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)
                  s_0)) s
              (λ (fst : α) (snd : σ),
              @rfl.{v+1} (m (@prod.{u u} α σ))
                (@state_t_bind._match_1.{u v} σ m inst_1 α α
                  (λ (x_0 : α) (s_0 : σ),
                  @pure.{u v} m
                    (@applicative.to_has_pure.{u v} m
                      (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)
                    (@prod.mk.{u u} α σ x_0 s_0))
                  (@prod.mk.{u u} α σ fst snd)))))))
      (@monad.bind_pure.{u v} (@prod.{u u} α σ) σ m inst_1 (x x_1)))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(monad.pure_bind,Vector(Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} [c : @monad.{u v} m] {α β : Type u} (x : α)
  (f : (∀ (a : α), m β)),
@eq.{v+1} (m β)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c) α β
    (@has_pure.pure.{u v} m
      (@applicative.to_has_pure.{u v} m (@monad.to_applicative.{u v} m c)) α x)
    f) (f x),λ (m : (∀ (a : Type u), Type v)) [c : @monad.{u v} m],
@monad.rec.{0 u v} m
  (λ [c_0 : @monad.{u v} m],
  ∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
  @eq.{v+1} (m β)
    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c_0) α β
      (@has_pure.pure.{u v} m
        (@applicative.to_has_pure.{u v} m (@monad.to_applicative.{u v} m c_0)) α
        x) f) (f x))
  (λ (to_applicative : @applicative.{u v} m) (to_has_bind : @has_bind.{u v} m)
    (bind_pure_comp_eq_map :
      @auto_param.{0}
        (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind α β x
            (@function.comp.{u+1 u+1 v+1} α β (m β)
              (@has_pure.pure.{u v} m
                (@applicative.to_has_pure.{u v} m to_applicative) β) f))
          (@has_map.map.{u v} m
            (@functor.to_has_map.{u v} m
              (@applicative.to_functor.{u v} m to_applicative)) α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (bind_map_eq_seq :
      @auto_param.{0}
        (∀ {α β : Type u} (f : m (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind (∀ (a : α), β) β f
            (λ (x_0 : (∀ (a : α), β)),
            @has_map.map.{u v} m
              (@functor.to_has_map.{u v} m
                (@applicative.to_functor.{u v} m to_applicative)) α β x_0 x))
          (@has_seq.seq.{u v} m (@applicative.to_has_seq.{u v} m to_applicative)
            α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_bind :
      (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x)))
    (bind_assoc :
      (∀ {α β γ : Type u} (x : m α) (f : (∀ (a : α), m β))
        (g : (∀ (a : β), m γ)),
      @eq.{v+1} (m γ)
        (@has_bind.bind.{u v} m to_has_bind β γ
          (@has_bind.bind.{u v} m to_has_bind α β x f) g)
        (@has_bind.bind.{u v} m to_has_bind α γ x
          (λ (x_0 : α), @has_bind.bind.{u v} m to_has_bind β γ (f x_0) g)))),
  pure_bind) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t_bind._match_1.equations._eqn_1,Vector(Param(v), Param(u)),∀ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : (∀ (a_0 : α), @state_t.{u v} σ m inst_1 β)) (a : α)
  (new_s : σ),
@eq.{v+1} (m (@prod.{u u} β σ))
  (@state_t_bind._match_1.{u v} σ m inst_1 α β act (@prod.mk.{u u} α σ a new_s))
  (act a new_s),λ {σ : Type u} {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m]
  {α β : Type u} (act : (∀ (a_0 : α), @state_t.{u v} σ m inst_1 β)) (a : α)
  (new_s : σ),
@eq.refl.{v+1}
  ((λ (a_0 : @prod.{u u} α σ), m (@prod.{u u} β σ))
    (@prod.mk.{u u} α σ a new_s))
  (@prod.cases_on.{v+1 u u} α σ (λ (a_0 : @prod.{u u} α σ), m (@prod.{u u} β σ))
    (@prod.mk.{u u} α σ a new_s)
    (λ (fst : α) (snd : σ), @id_rhs.{v+1} (m (@prod.{u u} β σ)) (act fst snd))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(monad.bind_assoc,Vector(Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} [c : @monad.{u v} m] {α β γ : Type u} (x : m α)
  (f : (∀ (a : α), m β)) (g : (∀ (a : β), m γ)),
@eq.{v+1} (m γ)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c) β γ
    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c) α β x f) g)
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c) α γ x
    (λ (x_0 : α),
    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c) β γ (f x_0) g)),λ (m : (∀ (a : Type u), Type v)) [c : @monad.{u v} m],
@monad.rec.{0 u v} m
  (λ [c_0 : @monad.{u v} m],
  ∀ {α β γ : Type u} (x : m α) (f : (∀ (a : α), m β)) (g : (∀ (a : β), m γ)),
  @eq.{v+1} (m γ)
    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c_0) β γ
      (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c_0) α β x f) g)
    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c_0) α γ x
      (λ (x_0 : α),
      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m c_0) β γ (f x_0) g)))
  (λ (to_applicative : @applicative.{u v} m) (to_has_bind : @has_bind.{u v} m)
    (bind_pure_comp_eq_map :
      @auto_param.{0}
        (∀ {α β : Type u} (f : (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind α β x
            (@function.comp.{u+1 u+1 v+1} α β (m β)
              (@has_pure.pure.{u v} m
                (@applicative.to_has_pure.{u v} m to_applicative) β) f))
          (@has_map.map.{u v} m
            (@functor.to_has_map.{u v} m
              (@applicative.to_functor.{u v} m to_applicative)) α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (bind_map_eq_seq :
      @auto_param.{0}
        (∀ {α β : Type u} (f : m (∀ (a : α), β)) (x : m α),
        @eq.{v+1} (m β)
          (@has_bind.bind.{u v} m to_has_bind (∀ (a : α), β) β f
            (λ (x_0 : (∀ (a : α), β)),
            @has_map.map.{u v} m
              (@functor.to_has_map.{u v} m
                (@applicative.to_functor.{u v} m to_applicative)) α β x_0 x))
          (@has_seq.seq.{u v} m (@applicative.to_has_seq.{u v} m to_applicative)
            α β f x))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (pure_bind :
      (∀ {α β : Type u} (x : α) (f : (∀ (a : α), m β)),
      @eq.{v+1} (m β)
        (@has_bind.bind.{u v} m to_has_bind α β
          (@has_pure.pure.{u v} m
            (@applicative.to_has_pure.{u v} m to_applicative) α x) f) (f x)))
    (bind_assoc :
      (∀ {α β γ : Type u} (x : m α) (f : (∀ (a : α), m β))
        (g : (∀ (a : β), m γ)),
      @eq.{v+1} (m γ)
        (@has_bind.bind.{u v} m to_has_bind β γ
          (@has_bind.bind.{u v} m to_has_bind α β x f) g)
        (@has_bind.bind.{u v} m to_has_bind α γ x
          (λ (x_0 : α), @has_bind.bind.{u v} m to_has_bind β γ (f x_0) g)))),
  bind_assoc) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_3,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β γ : Type u) (g : (∀ (a : α), β)) (h : (∀ (a : β), γ))
  (x : @state_t.{u v} σ m inst_1 α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) α γ (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) β γ h
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α β g x)),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β γ : Type u) (g : (∀ (a : α), β)) (h : (∀ (a : β), γ))
  (x : @state_t.{u v} σ m inst_1 α),
@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) α γ (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) β γ h
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x))
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) β γ h
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α β g x))
  (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α γ (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ
      (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        β (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x))
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) β γ h
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        β (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x))
    (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
        (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        γ
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          (∀ (a : α), β) (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ)
            (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))
          (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β
        γ (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h)
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          α β (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x))
      (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
          (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          α γ
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) (∀ (a : α), β) (∀ (a : α), γ)
            (@state_t_return.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
              (@function.comp.{u+1 u+1 u+1} α β γ h))
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          α γ
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) (∀ (a : α), β) (∀ (a : α), γ)
            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
              (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
              (@function.comp.{u+1 u+1 u+1} α β γ)
              (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
        (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
            (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) α γ
            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) α γ
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) (∀ (a : α), β) (∀ (a : α), γ)
              (@state_t_return.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h))
              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
          (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
              (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) α γ
              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h g)) x)
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) α γ
              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
            (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) α γ
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h g)) x)
              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
              ((λ (α_0 β_0 : Type u) (g_0 : (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                  ((λ (α_1 β_1 : Type u)
                      (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                      (λ (x_2 : (∀ (a : α_1), β_1)),
                      (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                        @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                            (@state_t.{u v} σ m inst_1 β_2)
                            (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                        x_2 x_1)) α_0 β_0
                    (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                    x_0)
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
                    (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1
                      x_0))
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0
                    x_0)
                  (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
                      (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                      (λ (x_1 : (∀ (a : α_0), β_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0
                        x_1 x_0))
                    ((λ (α_1 β_1 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                        (λ (x_2 : (∀ (a : α_1), β_1)),
                        (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                            (x_3 : @state_t.{u v} σ m inst_1 α_2),
                          @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                              (@state_t.{u v} σ m inst_1 β_2)
                              (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1
                          β_1 x_2 x_1)) α_0 β_0
                      (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                      x_0)
                    ((λ (α_1 β_1 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_1), β_1)
                          β_1 f
                          (λ (x_2 : (∀ (a : α_1), β_1)),
                          @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                (x_3 : @state_t.{u v} σ m inst_1 α_2),
                              @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                  (@state_t.{u v} σ m inst_1 β_2)
                                  (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                              (λ (α_2 β_2 : Type u),
                              @function.comp.{u+1 u+1 (max u v)+1} α_2
                                (∀ (a : β_2), α_2)
                                (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                                @state_t.{u v} σ m inst_1 α_2)
                                ((λ (α_3 β_3 : Type u)
                                    (f_0 : (∀ (a : α_3), β_3))
                                    (x_3 : @state_t.{u v} σ m inst_1 α_3),
                                  @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_3
                                      β_3 (@state_t.{u v} σ m inst_1 β_3)
                                      (@state_t_return.{u v} σ m inst_1 β_3)
                                      f_0)) β_2 α_2)
                                (@function.const.{u+1 u+1} α_2 β_2))) α_1 β_1
                            x_2 x_1))) α_0 β_0
                      (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                      x_0))
                  ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                      (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
                    @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f)
                      (f x_1)
                      (λ (x_1_0 : σ),
                      @eq.mpr.{0}
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0) (f x_1 x_1_0)) @true
                        (@id_locked.{0}
                          (@eq.{1} Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0)) @true)
                          (@eq.trans.{1} Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0))
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                              (f x_1 x_1_0)) @true
                            ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                                (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                                (a_1 a_2 : m (@prod.{u u} β_1 σ))
                                (e_2 :
                                  @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                              @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                                (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                                (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                                (@congr_arg.{v+1 max (v+1) 1}
                                  (m (@prod.{u u} β_1 σ))
                                  (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0)
                              (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                  (@has_pure.pure.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_pure.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_return.{u v} σ m inst_1)) α_1
                                    x_1) f x_1_0)
                                ((λ (s : σ),
                                  (λ (this : m (@prod.{u u} β_1 σ)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                      ((λ (s_0 : σ),
                                        @return.{u v} m inst_1
                                          (@prod.{u u} α_1 σ)
                                          (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                      (λ (p : @prod.{u u} α_1 σ),
                                      @state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f p))) x_1_0) (f x_1 x_1_0)
                                (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_1
                                      x_1) f x_1_0)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                    (λ (s : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                                  ((λ (s : σ),
                                    (λ (this : m (@prod.{u u} β_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        ((λ (s_0 : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_1 σ)
                                            (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f p))) x_1_0)
                                  ((λ (act act_0 :
                                        @state_t.{u v} σ m inst_1 α_1)
                                      (e_1 :
                                        @eq.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 α_1) act
                                          act_0)
                                      (act_1 act_2 :
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1))
                                      (e_2 :
                                        @eq.{max (u+1) ((max u v)+1)}
                                          (∀ (a_1 : α_1),
                                          @state_t.{u v} σ m inst_1 β_1) act_1
                                          act_2) (a a_0 : σ)
                                      (e_3 : @eq.{u+1} σ a a_0),
                                    @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                        act act_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                        act_0 act_2) a a_0
                                      (@congr.{max (u+1)
                                        ((max u
                                        v)+1) (max u v)+1}
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1)
                                        (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          act)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          act_0) act_1 act_2
                                        (@congr_arg.{(max u
                                          v)+1 max (u+1) ((max u v)+1)}
                                          (@state_t.{u v} σ m inst_1 α_1)
                                          (∀ (act_3 :
                                              (∀ (a_1 : α_1),
                                              @state_t.{u v} σ m inst_1 β_1)),
                                          @state_t.{u v} σ m inst_1 β_1) act
                                          act_0
                                          (@state_t_bind.{u v} σ m inst_1 α_1
                                            β_1) e_1) e_2) e_3)
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_1
                                      x_1)
                                    (λ (s : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s))
                                    (@state_t_return.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 x_1) f f
                                    (@eq.refl.{max (u+1) ((max u v)+1)}
                                      (∀ (a : α_1),
                                      @state_t.{u v} σ m inst_1 β_1) f) x_1_0
                                    x_1_0 (@eq.refl.{u+1} σ x_1_0))
                                  (@congr_fun.{u+1 v+1} σ
                                    (λ (a : σ), m (@prod.{u u} β_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                      (λ (s : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s)) f)
                                    (λ (s : σ),
                                    (λ (this : m (@prod.{u u} β_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        ((λ (s_0 : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_1 σ)
                                            (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f p)))
                                    (@state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 β_1
                                      (λ (s : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                                (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@has_pure.pure.{u v} m
                                      (@applicative.to_has_pure.{u v} m
                                        (@monad.to_applicative.{u v} m inst_1))
                                      (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f))
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                  (f x_1 x_1_0)
                                  (@monad.pure_bind.{u v} m inst_1
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f))
                                  (@state_t_bind._match_1.equations._eqn_1.{v u}
                                    σ m inst_1 α_1 β_1 f x_1 x_1_0)))
                              (f x_1 x_1_0) (f x_1 x_1_0)
                              (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ))
                                (f x_1 x_1_0)))
                            (@propext
                              (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                                (f x_1 x_1_0)) @true
                              (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                                (f x_1 x_1_0))))) @trivial)) (∀ (a : α_0), β_0)
                    β_0 g_0
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1
                      x_0))) α γ (@function.comp.{u+1 u+1 u+1} α β γ h g) x))
            (@eq.rec.{0 (max u v)+1} (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g))
              (λ (x_0 : @state_t.{u v} σ m inst_1 (∀ (a : α), γ)),
              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_2 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_2 x_1)) α γ x_0 x)
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_2 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_2 x_1)) α γ
                  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f))
                    (∀ (a : α), β) (∀ (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h)
                    (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x))
              (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_1 x_0)) α γ
                  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_0 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f))
                    (∀ (a : α), β) (∀ (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h)
                    (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x))
              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h g))
              ((λ (α_0 β_0 : Type u) (g_0 : (∀ (a : α_0), β_0)) (x_0 : α_0),
                @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0
                    (@state_t_return.{u v} σ m inst_1 α_0 x_0))
                  (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                    (@state_t_return.{u v} σ m inst_1 α_0 x_0)
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) g_0))
                  (@state_t_return.{u v} σ m inst_1 β_0 (g_0 x_0))
                  (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                      (@state_t_return.{u v} σ m inst_1 α_0 x_0)
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) g_0))
                    ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0
                      (@state_t_return.{u v} σ m inst_1 α_0 x_0))
                    ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) β_1) f)))
                      α_0 β_0 g_0 (@state_t_return.{u v} σ m inst_1 α_0 x_0)))
                  ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                      (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
                    @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f)
                      (f x_1)
                      (λ (x_1_0 : σ),
                      @eq.mpr.{0}
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0) (f x_1 x_1_0)) @true
                        (@id_locked.{0}
                          (@eq.{1} Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0)) @true)
                          (@eq.trans.{1} Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0))
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                              (f x_1 x_1_0)) @true
                            ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                                (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                                (a_1 a_2 : m (@prod.{u u} β_1 σ))
                                (e_2 :
                                  @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                              @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                                (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                                (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                                (@congr_arg.{v+1 max (v+1) 1}
                                  (m (@prod.{u u} β_1 σ))
                                  (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0)
                              (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                  (@has_pure.pure.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_pure.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_return.{u v} σ m inst_1)) α_1
                                    x_1) f x_1_0)
                                ((λ (s : σ),
                                  (λ (this : m (@prod.{u u} β_1 σ)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                      ((λ (s_0 : σ),
                                        @return.{u v} m inst_1
                                          (@prod.{u u} α_1 σ)
                                          (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                      (λ (p : @prod.{u u} α_1 σ),
                                      @state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f p))) x_1_0) (f x_1 x_1_0)
                                (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_1
                                      x_1) f x_1_0)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                    (λ (s : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                                  ((λ (s : σ),
                                    (λ (this : m (@prod.{u u} β_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        ((λ (s_0 : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_1 σ)
                                            (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f p))) x_1_0)
                                  ((λ (act act_0 :
                                        @state_t.{u v} σ m inst_1 α_1)
                                      (e_1 :
                                        @eq.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 α_1) act
                                          act_0)
                                      (act_1 act_2 :
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1))
                                      (e_2 :
                                        @eq.{max (u+1) ((max u v)+1)}
                                          (∀ (a_1 : α_1),
                                          @state_t.{u v} σ m inst_1 β_1) act_1
                                          act_2) (a a_0 : σ)
                                      (e_3 : @eq.{u+1} σ a a_0),
                                    @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                        act act_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                        act_0 act_2) a a_0
                                      (@congr.{max (u+1)
                                        ((max u
                                        v)+1) (max u v)+1}
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1)
                                        (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          act)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          act_0) act_1 act_2
                                        (@congr_arg.{(max u
                                          v)+1 max (u+1) ((max u v)+1)}
                                          (@state_t.{u v} σ m inst_1 α_1)
                                          (∀ (act_3 :
                                              (∀ (a_1 : α_1),
                                              @state_t.{u v} σ m inst_1 β_1)),
                                          @state_t.{u v} σ m inst_1 β_1) act
                                          act_0
                                          (@state_t_bind.{u v} σ m inst_1 α_1
                                            β_1) e_1) e_2) e_3)
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_1
                                      x_1)
                                    (λ (s : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s))
                                    (@state_t_return.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 x_1) f f
                                    (@eq.refl.{max (u+1) ((max u v)+1)}
                                      (∀ (a : α_1),
                                      @state_t.{u v} σ m inst_1 β_1) f) x_1_0
                                    x_1_0 (@eq.refl.{u+1} σ x_1_0))
                                  (@congr_fun.{u+1 v+1} σ
                                    (λ (a : σ), m (@prod.{u u} β_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                      (λ (s : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s)) f)
                                    (λ (s : σ),
                                    (λ (this : m (@prod.{u u} β_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        ((λ (s_0 : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_1 σ)
                                            (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f p)))
                                    (@state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 β_1
                                      (λ (s : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                                (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@has_pure.pure.{u v} m
                                      (@applicative.to_has_pure.{u v} m
                                        (@monad.to_applicative.{u v} m inst_1))
                                      (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f))
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                  (f x_1 x_1_0)
                                  (@monad.pure_bind.{u v} m inst_1
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f))
                                  (@state_t_bind._match_1.equations._eqn_1.{v u}
                                    σ m inst_1 α_1 β_1 f x_1 x_1_0)))
                              (f x_1 x_1_0) (f x_1 x_1_0)
                              (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ))
                                (f x_1 x_1_0)))
                            (@propext
                              (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                                (f x_1 x_1_0)) @true
                              (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                                (f x_1 x_1_0))))) @trivial)) α_0 β_0 x_0
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) g_0)))
                (∀ (a : α), β) (∀ (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h) g)))
          (@eq.rec.{0 (max u v)+1} (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g))
            (λ (x_0 : @state_t.{u v} σ m inst_1 (∀ (a : α), γ)),
            @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_2 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_3 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2
                    x_1)) α γ
                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
                  (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_2 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_3 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2
                    x_1)) α γ x_0 x))
            (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) α γ
                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
                  (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x))
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) (∀ (a : α), β) (∀ (a : α), γ)
              (@state_t_return.{u v} σ m inst_1
                (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h))
              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g))
            (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) (∀ (a : α), β) (∀ (a : α), γ)
                (@state_t_return.{u v} σ m inst_1
                  (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h))
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g))
              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h)
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g))
              ((λ (α_0 β_0 : Type u) (g_0 : (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                  ((λ (α_1 β_1 : Type u)
                      (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                      (λ (x_2 : (∀ (a : α_1), β_1)),
                      (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                        @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                            (@state_t.{u v} σ m inst_1 β_2)
                            (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                        x_2 x_1)) α_0 β_0
                    (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                    x_0)
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
                    (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1
                      x_0))
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0
                    x_0)
                  (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
                      (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                      (λ (x_1 : (∀ (a : α_0), β_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0
                        x_1 x_0))
                    ((λ (α_1 β_1 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                        (λ (x_2 : (∀ (a : α_1), β_1)),
                        (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                            (x_3 : @state_t.{u v} σ m inst_1 α_2),
                          @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                              (@state_t.{u v} σ m inst_1 β_2)
                              (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1
                          β_1 x_2 x_1)) α_0 β_0
                      (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                      x_0)
                    ((λ (α_1 β_1 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_1), β_1)
                          β_1 f
                          (λ (x_2 : (∀ (a : α_1), β_1)),
                          @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                (x_3 : @state_t.{u v} σ m inst_1 α_2),
                              @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                  (@state_t.{u v} σ m inst_1 β_2)
                                  (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                              (λ (α_2 β_2 : Type u),
                              @function.comp.{u+1 u+1 (max u v)+1} α_2
                                (∀ (a : β_2), α_2)
                                (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                                @state_t.{u v} σ m inst_1 α_2)
                                ((λ (α_3 β_3 : Type u)
                                    (f_0 : (∀ (a : α_3), β_3))
                                    (x_3 : @state_t.{u v} σ m inst_1 α_3),
                                  @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_3
                                      β_3 (@state_t.{u v} σ m inst_1 β_3)
                                      (@state_t_return.{u v} σ m inst_1 β_3)
                                      f_0)) β_2 α_2)
                                (@function.const.{u+1 u+1} α_2 β_2))) α_1 β_1
                            x_2 x_1))) α_0 β_0
                      (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
                      x_0))
                  ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                      (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
                    @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f)
                      (f x_1)
                      (λ (x_1_0 : σ),
                      @eq.mpr.{0}
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0) (f x_1 x_1_0)) @true
                        (@id_locked.{0}
                          (@eq.{1} Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0)) @true)
                          (@eq.trans.{1} Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0))
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                              (f x_1 x_1_0)) @true
                            ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                                (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                                (a_1 a_2 : m (@prod.{u u} β_1 σ))
                                (e_2 :
                                  @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                              @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                                (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                                (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                                (@congr_arg.{v+1 max (v+1) 1}
                                  (m (@prod.{u u} β_1 σ))
                                  (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0) (f x_1 x_1_0)
                              (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                  (@has_pure.pure.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_pure.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_return.{u v} σ m inst_1)) α_1
                                    x_1) f x_1_0)
                                ((λ (s : σ),
                                  (λ (this : m (@prod.{u u} β_1 σ)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                      ((λ (s_0 : σ),
                                        @return.{u v} m inst_1
                                          (@prod.{u u} α_1 σ)
                                          (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                      (λ (p : @prod.{u u} α_1 σ),
                                      @state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f p))) x_1_0) (f x_1 x_1_0)
                                (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_1
                                      x_1) f x_1_0)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                    (λ (s : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                                  ((λ (s : σ),
                                    (λ (this : m (@prod.{u u} β_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        ((λ (s_0 : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_1 σ)
                                            (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f p))) x_1_0)
                                  ((λ (act act_0 :
                                        @state_t.{u v} σ m inst_1 α_1)
                                      (e_1 :
                                        @eq.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 α_1) act
                                          act_0)
                                      (act_1 act_2 :
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1))
                                      (e_2 :
                                        @eq.{max (u+1) ((max u v)+1)}
                                          (∀ (a_1 : α_1),
                                          @state_t.{u v} σ m inst_1 β_1) act_1
                                          act_2) (a a_0 : σ)
                                      (e_3 : @eq.{u+1} σ a a_0),
                                    @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                        act act_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                        act_0 act_2) a a_0
                                      (@congr.{max (u+1)
                                        ((max u
                                        v)+1) (max u v)+1}
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1)
                                        (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          act)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          act_0) act_1 act_2
                                        (@congr_arg.{(max u
                                          v)+1 max (u+1) ((max u v)+1)}
                                          (@state_t.{u v} σ m inst_1 α_1)
                                          (∀ (act_3 :
                                              (∀ (a_1 : α_1),
                                              @state_t.{u v} σ m inst_1 β_1)),
                                          @state_t.{u v} σ m inst_1 β_1) act
                                          act_0
                                          (@state_t_bind.{u v} σ m inst_1 α_1
                                            β_1) e_1) e_2) e_3)
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_1
                                      x_1)
                                    (λ (s : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s))
                                    (@state_t_return.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 x_1) f f
                                    (@eq.refl.{max (u+1) ((max u v)+1)}
                                      (∀ (a : α_1),
                                      @state_t.{u v} σ m inst_1 β_1) f) x_1_0
                                    x_1_0 (@eq.refl.{u+1} σ x_1_0))
                                  (@congr_fun.{u+1 v+1} σ
                                    (λ (a : σ), m (@prod.{u u} β_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                      (λ (s : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s)) f)
                                    (λ (s : σ),
                                    (λ (this : m (@prod.{u u} β_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        ((λ (s_0 : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_1 σ)
                                            (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f p)))
                                    (@state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 β_1
                                      (λ (s : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                                (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@has_pure.pure.{u v} m
                                      (@applicative.to_has_pure.{u v} m
                                        (@monad.to_applicative.{u v} m inst_1))
                                      (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f))
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                  (f x_1 x_1_0)
                                  (@monad.pure_bind.{u v} m inst_1
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f))
                                  (@state_t_bind._match_1.equations._eqn_1.{v u}
                                    σ m inst_1 α_1 β_1 f x_1 x_1_0)))
                              (f x_1 x_1_0) (f x_1 x_1_0)
                              (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ))
                                (f x_1 x_1_0)))
                            (@propext
                              (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                                (f x_1 x_1_0)) @true
                              (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                                (f x_1 x_1_0))))) @trivial)) (∀ (a : α_0), β_0)
                    β_0 g_0
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1
                      x_0))) (∀ (a : α), β) (∀ (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h)
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)))))
        (@eq.rec.{0 (max u v)+1}
          (@state_t.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ)
            (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))
          (λ (x_0 :
              @state_t.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_2 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_3 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2
                  x_1)) α γ
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_2 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_3 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2
                    x_1)) (∀ (a : α), β) (∀ (a : α), γ) x_0
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_2 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_3 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2
                  x_1)) α γ
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_2 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_3 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2
                    x_1)) (∀ (a : α), β) (∀ (a : α), γ)
                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
                  (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ)
                  (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x))
          (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) α γ
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) (∀ (a : α), β) (∀ (a : α), γ)
                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ)
                  (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))
                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x))
          (@state_t_return.{u v} σ m inst_1
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ h))
          ((λ (α_0 β_0 : Type u) (g_0 : (∀ (a : α_0), β_0)) (x_0 : α_0),
            @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
              ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0
                (@state_t_return.{u v} σ m inst_1 α_0 x_0))
              (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                (@state_t_return.{u v} σ m inst_1 α_0 x_0)
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) g_0))
              (@state_t_return.{u v} σ m inst_1 β_0 (g_0 x_0))
              (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                  (@state_t_return.{u v} σ m inst_1 α_0 x_0)
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) g_0))
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0
                  (@state_t_return.{u v} σ m inst_1 α_0 x_0))
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) β_1) f))) α_0
                  β_0 g_0 (@state_t_return.{u v} σ m inst_1 α_0 x_0)))
              ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                  (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
                @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f) (f x_1)
                  (λ (x_1_0 : σ),
                  @eq.mpr.{0}
                    (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                        x_1_0) (f x_1 x_1_0)) @true
                    (@id_locked.{0}
                      (@eq.{1} Prop
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0) (f x_1 x_1_0)) @true)
                      (@eq.trans.{1} Prop
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0) (f x_1 x_1_0))
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                          (f x_1 x_1_0)) @true
                        ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                            (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                            (a_1 a_2 : m (@prod.{u u} β_1 σ))
                            (e_2 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                          @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                            (@congr_arg.{v+1 max (v+1) 1}
                              (m (@prod.{u u} β_1 σ))
                              (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                              (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0) (f x_1 x_1_0)
                          (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                              (@has_pure.pure.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_pure.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                              x_1_0)
                            ((λ (s : σ),
                              (λ (this : m (@prod.{u u} β_1 σ)), this)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                  ((λ (s_0 : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                  (λ (p : @prod.{u u} α_1 σ),
                                  @state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f p))) x_1_0) (f x_1 x_1_0)
                            (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                f x_1_0)
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                (λ (s : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                              ((λ (s : σ),
                                (λ (this : m (@prod.{u u} β_1 σ)), this)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    ((λ (s_0 : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                    (λ (p : @prod.{u u} α_1 σ),
                                    @state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f p))) x_1_0)
                              ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_1)
                                  (e_1 :
                                    @eq.{(max u v)+1}
                                      (@state_t.{u v} σ m inst_1 α_1) act act_0)
                                  (act_1 act_2 :
                                    (∀ (a_1 : α_1),
                                    @state_t.{u v} σ m inst_1 β_1))
                                  (e_2 :
                                    @eq.{max (u+1) ((max u v)+1)}
                                      (∀ (a_1 : α_1),
                                      @state_t.{u v} σ m inst_1 β_1) act_1
                                      act_2) (a a_0 : σ)
                                  (e_3 : @eq.{u+1} σ a a_0),
                                @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act
                                    act_1)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0
                                    act_2) a a_0
                                  (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                                    (∀ (a_1 : α_1),
                                    @state_t.{u v} σ m inst_1 β_1)
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act)
                                    (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                      act_0) act_1 act_2
                                    (@congr_arg.{(max u
                                      v)+1 max (u+1) ((max u v)+1)}
                                      (@state_t.{u v} σ m inst_1 α_1)
                                      (∀ (act_3 :
                                          (∀ (a_1 : α_1),
                                          @state_t.{u v} σ m inst_1 β_1)),
                                      @state_t.{u v} σ m inst_1 β_1) act act_0
                                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1)
                                      e_1) e_2) e_3)
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                                (λ (s : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s))
                                (@state_t_return.equations._eqn_1.{u v} σ m
                                  inst_1 α_1 x_1) f f
                                (@eq.refl.{max (u+1) ((max u v)+1)}
                                  (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)
                                  f) x_1_0 x_1_0 (@eq.refl.{u+1} σ x_1_0))
                              (@congr_fun.{u+1 v+1} σ
                                (λ (a : σ), m (@prod.{u u} β_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                  (λ (s : σ),
                                  @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                    (@prod.mk.{u u} α_1 σ x_1 s)) f)
                                (λ (s : σ),
                                (λ (this : m (@prod.{u u} β_1 σ)), this)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    ((λ (s_0 : σ),
                                      @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                        (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                    (λ (p : @prod.{u u} α_1 σ),
                                    @state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f p)))
                                (@state_t_bind.equations._eqn_1.{u v} σ m inst_1
                                  α_1 β_1
                                  (λ (s : σ),
                                  @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                    (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                            (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                (@has_pure.pure.{u v} m
                                  (@applicative.to_has_pure.{u v} m
                                    (@monad.to_applicative.{u v} m inst_1))
                                  (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                  f))
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                                (@prod.mk.{u u} α_1 σ x_1 x_1_0)) (f x_1 x_1_0)
                              (@monad.pure_bind.{u v} m inst_1
                                (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                  f))
                              (@state_t_bind._match_1.equations._eqn_1.{v u} σ m
                                inst_1 α_1 β_1 f x_1 x_1_0))) (f x_1 x_1_0)
                          (f x_1 x_1_0)
                          (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ))
                            (f x_1 x_1_0)))
                        (@propext
                          (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                            (f x_1 x_1_0)) @true
                          (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                            (f x_1 x_1_0))))) @trivial)) α_0 β_0 x_0
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) g_0))) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)))
      (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          β γ (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h)
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) α β (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)
            x))
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          α γ
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) (∀ (a : α), β) (∀ (a : α), γ)
            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
              (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
              (@function.comp.{u+1 u+1 u+1} α β γ)
              (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)) x)
        ((λ (α_0 β_0 γ_0 : Type u) (x_0 : @state_t.{u v} σ m inst_1 α_0)
            (g_0 : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (h_0 : @state_t.{u v} σ m inst_1 (∀ (a : β_0), γ_0)),
          @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
            ((λ (α_1 β_1 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                (x_1 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                (λ (x_2 : (∀ (a : α_1), β_1)),
                (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_3 : @state_t.{u v} σ m inst_1 α_2),
                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                    (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                      (@state_t.{u v} σ m inst_1 β_2)
                      (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                  x_1)) β_0 γ_0 h_0
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                  (λ (x_2 : (∀ (a : α_1), β_1)),
                  (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                    x_1)) α_0 β_0 g_0 x_0))
            ((λ (α_1 β_1 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                (x_1 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                (λ (x_2 : (∀ (a : α_1), β_1)),
                (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_3 : @state_t.{u v} σ m inst_1 α_2),
                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                    (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                      (@state_t.{u v} σ m inst_1 β_2)
                      (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                  x_1)) α_0 γ_0
              (@state_t_bind.{u v} σ m inst_1
                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                (∀ (a : α_0), γ_0)
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : β_0), γ_0)
                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)) x_0)
            ((λ (α_1 β_1 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                (x_1 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                (λ (x_2 : (∀ (a : α_1), β_1)),
                (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_3 : @state_t.{u v} σ m inst_1 α_2),
                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                    (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                      (@state_t.{u v} σ m inst_1 β_2)
                      (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                  x_1)) α_0 γ_0
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                  (λ (x_2 : (∀ (a : α_1), β_1)),
                  (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                    x_1)) (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : β_0), γ_0)
                  (∀ (a : (∀ (a_1 : α_0), β_0)) (a_0 : α_0), γ_0)
                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0) g_0) x_0)
            (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                  (λ (x_2 : (∀ (a : α_1), β_1)),
                  (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                    x_1)) β_0 γ_0 h_0
                ((λ (α_1 β_1 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                    (λ (x_2 : (∀ (a : α_1), β_1)),
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                        (x_3 : @state_t.{u v} σ m inst_1 α_2),
                      @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                          (@state_t.{u v} σ m inst_1 β_2)
                          (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                      x_2 x_1)) α_0 β_0 g_0 x_0))
              (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                (@state_t_bind.{u v} σ m inst_1
                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                  (∀ (a : α_0), γ_0)
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : β_0), γ_0)
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                  (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                (λ (x_1 : (∀ (a : α_0), γ_0)),
                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0 x_1
                  x_0))
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                  (λ (x_2 : (∀ (a : α_1), β_1)),
                  (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                    x_1)) α_0 γ_0
                (@state_t_bind.{u v} σ m inst_1
                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                  (∀ (a : α_0), γ_0)
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : β_0), γ_0)
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                  (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)) x_0)
              (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                ((λ (α_1 β_1 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                    (λ (x_2 : (∀ (a : α_1), β_1)),
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                        (x_3 : @state_t.{u v} σ m inst_1 α_2),
                      @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                          (@state_t.{u v} σ m inst_1 β_2)
                          (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                      x_2 x_1)) β_0 γ_0 h_0
                  ((λ (α_1 β_1 : Type u)
                      (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                      (λ (x_2 : (∀ (a : α_1), β_1)),
                      (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                        @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                            (@state_t.{u v} σ m inst_1 β_2)
                            (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                        x_2 x_1)) α_0 β_0 g_0 x_0))
                (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                  (@state_t_bind.{u v} σ m inst_1
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (∀ (a : α_0), γ_0)
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                      (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (@state_t.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                        (@state_t_return.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                        (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                    (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                  (λ (x_1 : (∀ (a : α_0), γ_0)),
                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0 x_1
                    x_0))
                (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                  (@state_t_bind.{u v} σ m inst_1
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (∀ (a : α_0), γ_0)
                    ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : β_0), γ_0)
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                    (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                  (λ (x_1 : (∀ (a : α_0), γ_0)),
                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0 x_1
                    x_0))
                (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                  ((λ (α_1 β_1 : Type u)
                      (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                      (λ (x_2 : (∀ (a : α_1), β_1)),
                      (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                        @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                            (@state_t.{u v} σ m inst_1 β_2)
                            (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                        x_2 x_1)) β_0 γ_0 h_0
                    ((λ (α_1 β_1 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                        (λ (x_2 : (∀ (a : α_1), β_1)),
                        (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                            (x_3 : @state_t.{u v} σ m inst_1 α_2),
                          @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                              (@state_t.{u v} σ m inst_1 β_2)
                              (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1
                          β_1 x_2 x_1)) α_0 β_0 g_0 x_0))
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                      (∀ (a : α_0), γ_0) h_0
                      (λ (h_1 : (∀ (a : β_0), γ_0)),
                      @state_t_bind.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (∀ (a : α_0), γ_0)
                        (@state_t_return.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                        (λ (x_1 :
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f))
                          (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)))
                    (λ (x_1 : (∀ (a : α_0), γ_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0 x_1
                      x_0))
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                    (@state_t_bind.{u v} σ m inst_1
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (∀ (a : α_0), γ_0)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                        (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (@state_t.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                          (@state_t_return.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                          (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                      (λ (x_1 :
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f))
                        (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                    (λ (x_1 : (∀ (a : α_0), γ_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0 x_1
                      x_0))
                  (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                    ((λ (α_1 β_1 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                        (λ (x_2 : (∀ (a : α_1), β_1)),
                        (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                            (x_3 : @state_t.{u v} σ m inst_1 α_2),
                          @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                              (@state_t.{u v} σ m inst_1 β_2)
                              (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1
                          β_1 x_2 x_1)) β_0 γ_0 h_0
                      ((λ (α_1 β_1 : Type u)
                          (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                          (x_1 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                          (λ (x_2 : (∀ (a : α_1), β_1)),
                          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                              (x_3 : @state_t.{u v} σ m inst_1 α_2),
                            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                (@state_t.{u v} σ m inst_1 β_2)
                                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1
                            β_1 x_2 x_1)) α_0 β_0 g_0 x_0))
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0) γ_0 h_0
                      (λ (h_1 : (∀ (a : β_0), γ_0)),
                      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                        (@state_t_bind.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (∀ (a : α_0), γ_0)
                          (@state_t_return.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                          (λ (x_1 :
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f))
                            (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                        (λ (x_1 : (∀ (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                          x_1 x_0)))
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                        (∀ (a : α_0), γ_0) h_0
                        (λ (h_1 : (∀ (a : β_0), γ_0)),
                        @state_t_bind.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (∀ (a : α_0), γ_0)
                          (@state_t_return.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                          (λ (x_1 :
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f))
                            (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)))
                      (λ (x_1 : (∀ (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                        x_1 x_0))
                    (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                      ((λ (α_1 β_1 : Type u)
                          (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                          (x_1 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                          (λ (x_2 : (∀ (a : α_1), β_1)),
                          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                              (x_3 : @state_t.{u v} σ m inst_1 α_2),
                            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                (@state_t.{u v} σ m inst_1 β_2)
                                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1
                            β_1 x_2 x_1)) β_0 γ_0 h_0
                        ((λ (α_1 β_1 : Type u)
                            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                            (x_1 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1
                            f
                            (λ (x_2 : (∀ (a : α_1), β_1)),
                            (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                (x_3 : @state_t.{u v} σ m inst_1 α_2),
                              @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                  (@state_t.{u v} σ m inst_1 β_2)
                                  (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                              α_1 β_1 x_2 x_1)) α_0 β_0 g_0 x_0))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0) γ_0 h_0
                        (λ (x_1 : (∀ (a : β_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0 γ_0
                          x_1
                          ((λ (α_1 β_1 : Type u)
                              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1)
                              β_1 f
                              (λ (x_3 : (∀ (a : α_1), β_1)),
                              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                  (x_4 : @state_t.{u v} σ m inst_1 α_2),
                                @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_4
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                    (@state_t.{u v} σ m inst_1 β_2)
                                    (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                                α_1 β_1 x_3 x_2)) α_0 β_0 g_0 x_0)))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0) γ_0 h_0
                        (λ (h_1 : (∀ (a : β_0), γ_0)),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                          (@state_t_bind.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (∀ (a : α_0), γ_0)
                            (@state_t_return.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                            (λ (x_1 :
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                γ_0)),
                            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f))
                              (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                          (λ (x_1 : (∀ (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
                            γ_0 x_1 x_0)))
                      (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0) γ_0
                          h_0
                          (λ (x_1 : (∀ (a : β_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0
                            γ_0 x_1
                            ((λ (α_1 β_1 : Type u)
                                (f :
                                  @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1)
                                β_1 f
                                (λ (x_3 : (∀ (a : α_1), β_1)),
                                (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                    (x_4 : @state_t.{u v} σ m inst_1 α_2),
                                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_4
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_2
                                      β_2 (@state_t.{u v} σ m inst_1 β_2)
                                      (@state_t_return.{u v} σ m inst_1 β_2)
                                      f_0)) α_1 β_1 x_3 x_2)) α_0 β_0 g_0 x_0)))
                        ((λ (α_1 β_1 : Type u)
                            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                            (x_1 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1
                            f
                            (λ (x_2 : (∀ (a : α_1), β_1)),
                            (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                (x_3 : @state_t.{u v} σ m inst_1 α_2),
                              @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                  (@state_t.{u v} σ m inst_1 β_2)
                                  (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                              α_1 β_1 x_2 x_1)) β_0 γ_0 h_0
                          ((λ (α_1 β_1 : Type u)
                              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                              (x_1 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1)
                              β_1 f
                              (λ (x_2 : (∀ (a : α_1), β_1)),
                              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                  (x_3 : @state_t.{u v} σ m inst_1 α_2),
                                @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                    (@state_t.{u v} σ m inst_1 β_2)
                                    (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                                α_1 β_1 x_2 x_1)) α_0 β_0 g_0 x_0))
                        ((λ (α_1 β_1 : Type u)
                            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                            (x_1 : @state_t.{u v} σ m inst_1 α_1),
                          @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1))
                              (∀ (a : α_1), β_1) β_1 f
                              (λ (x_2 : (∀ (a : α_1), β_1)),
                              @has_map.map.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_map.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (λ (α_2 β_2 : Type u)
                                    (f_0 : (∀ (a : α_2), β_2))
                                    (x_3 : @state_t.{u v} σ m inst_1 α_2),
                                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_2
                                      β_2 (@state_t.{u v} σ m inst_1 β_2)
                                      (@state_t_return.{u v} σ m inst_1 β_2)
                                      f_0))
                                  (λ (α_2 β_2 : Type u),
                                  @function.comp.{u+1 u+1 (max u v)+1} α_2
                                    (∀ (a : β_2), α_2)
                                    (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                                    @state_t.{u v} σ m inst_1 α_2)
                                    ((λ (α_3 β_3 : Type u)
                                        (f_0 : (∀ (a : α_3), β_3))
                                        (x_3 : @state_t.{u v} σ m inst_1 α_3),
                                      @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_3 β_3
                                          (@state_t.{u v} σ m inst_1 β_3)
                                          (@state_t_return.{u v} σ m inst_1 β_3)
                                          f_0)) β_2 α_2)
                                    (@function.const.{u+1 u+1} α_2 β_2))) α_1
                                β_1 x_2 x_1))) β_0 γ_0 h_0
                          ((λ (α_1 β_1 : Type u)
                              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                              (x_1 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1)
                              β_1 f
                              (λ (x_2 : (∀ (a : α_1), β_1)),
                              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                  (x_3 : @state_t.{u v} σ m inst_1 α_2),
                                @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                    (@state_t.{u v} σ m inst_1 β_2)
                                    (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                                α_1 β_1 x_2 x_1)) α_0 β_0 g_0 x_0)))
                      (@congr_arg.{max (u+1) ((max u v)+1) (max u v)+1}
                        (∀ (x_1 : (∀ (a : β_0), γ_0)),
                        @state_t.{u v} σ m inst_1 γ_0)
                        (@state_t.{u v} σ m inst_1 γ_0)
                        (λ (x_1 : (∀ (a : β_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0 γ_0
                          x_1
                          ((λ (α_1 β_1 : Type u)
                              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1)
                              β_1 f
                              (λ (x_3 : (∀ (a : α_1), β_1)),
                              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                  (x_4 : @state_t.{u v} σ m inst_1 α_2),
                                @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_4
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                    (@state_t.{u v} σ m inst_1 β_2)
                                    (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                                α_1 β_1 x_3 x_2)) α_0 β_0 g_0 x_0))
                        (λ (h_1 : (∀ (a : β_0), γ_0)),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                          (@state_t_bind.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (∀ (a : α_0), γ_0)
                            (@state_t_return.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                            (λ (x_1 :
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                γ_0)),
                            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f))
                              (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                          (λ (x_1 : (∀ (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
                            γ_0 x_1 x_0))
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0) γ_0
                          h_0)
                        (@funext.{u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                          (λ (x_1 : (∀ (a : β_0), γ_0)),
                          @state_t.{u v} σ m inst_1 γ_0)
                          (λ (x_1 : (∀ (a : β_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0
                            γ_0 x_1
                            ((λ (α_1 β_1 : Type u)
                                (f :
                                  @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1)
                                β_1 f
                                (λ (x_3 : (∀ (a : α_1), β_1)),
                                (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                                    (x_4 : @state_t.{u v} σ m inst_1 α_2),
                                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_4
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_2
                                      β_2 (@state_t.{u v} σ m inst_1 β_2)
                                      (@state_t_return.{u v} σ m inst_1 β_2)
                                      f_0)) α_1 β_1 x_3 x_2)) α_0 β_0 g_0 x_0))
                          (λ (h_1 : (∀ (a : β_0), γ_0)),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                            (@state_t_bind.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (∀ (a : α_0), γ_0)
                              (@state_t_return.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                                (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                              (λ (x_1 :
                                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                  γ_0)),
                              (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_return.{u v} σ m inst_1 β_1) f))
                                (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                            (λ (x_1 : (∀ (a : α_0), γ_0)),
                            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
                              γ_0 x_1 x_0))
                          (λ (h_1 : (∀ (a : β_0), γ_0)),
                          @eq.trans.{(max u v)+1}
                            (@state_t.{u v} σ m inst_1 γ_0)
                            ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                (x_1 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f)) β_0
                              γ_0 h_1
                              ((λ (α_1 β_1 : Type u)
                                  (f :
                                    @state_t.{u v} σ m inst_1
                                      (∀ (a : α_1), β_1))
                                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_1), β_1) β_1 f
                                  (λ (x_2 : (∀ (a : α_1), β_1)),
                                  (λ (α_2 β_2 : Type u)
                                      (f_0 : (∀ (a : α_2), β_2))
                                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_2
                                        β_2 (@state_t.{u v} σ m inst_1 β_2)
                                        (@state_t_return.{u v} σ m inst_1 β_2)
                                        f_0)) α_1 β_1 x_2 x_1)) α_0 β_0 g_0
                                x_0))
                            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0)
                              γ_0
                              ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_return.{u v} σ m inst_1 β_1) f))
                                (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1)
                                g_0)
                              (λ (x_1 : (∀ (a : α_0), γ_0)),
                              (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_return.{u v} σ m inst_1 β_1) f))
                                α_0 γ_0 x_1 x_0))
                            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0)
                              γ_0
                              (@state_t_bind.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                                (∀ (a : α_0), γ_0)
                                (@state_t_return.{u v} σ m inst_1
                                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                  γ_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                    h_1))
                                (λ (x_1 :
                                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                    γ_0)),
                                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1
                                  g_0))
                              (λ (x_1 : (∀ (a : α_0), γ_0)),
                              (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_return.{u v} σ m inst_1 β_1) f))
                                α_0 γ_0 x_1 x_0))
                            (@eq.trans.{(max u v)+1}
                              (@state_t.{u v} σ m inst_1 γ_0)
                              ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_return.{u v} σ m inst_1 β_1) f))
                                β_0 γ_0 h_1
                                ((λ (α_1 β_1 : Type u)
                                    (f :
                                      @state_t.{u v} σ m inst_1
                                        (∀ (a : α_1), β_1))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_1), β_1) β_1 f
                                    (λ (x_2 : (∀ (a : α_1), β_1)),
                                    (λ (α_2 β_2 : Type u)
                                        (f_0 : (∀ (a : α_2), β_2))
                                        (x_3 : @state_t.{u v} σ m inst_1 α_2),
                                      @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_2 β_2
                                          (@state_t.{u v} σ m inst_1 β_2)
                                          (@state_t_return.{u v} σ m inst_1 β_2)
                                          f_0)) α_1 β_1 x_2 x_1)) α_0 β_0 g_0
                                  x_0))
                              (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0)
                                γ_0
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) g_0
                                  (@function.comp.{u+1 u+1 (max u v)+1}
                                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                    (@state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0))
                                    (@state_t_return.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0))
                                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                      h_1)))
                                (λ (x_1 : (∀ (a : α_0), γ_0)),
                                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  α_0 γ_0 x_1 x_0))
                              (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0)
                                γ_0
                                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1)
                                  g_0)
                                (λ (x_1 : (∀ (a : α_0), γ_0)),
                                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  α_0 γ_0 x_1 x_0))
                              (@eq.trans.{(max u v)+1}
                                (@state_t.{u v} σ m inst_1 γ_0)
                                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  β_0 γ_0 h_1
                                  ((λ (α_1 β_1 : Type u)
                                      (f :
                                        @state_t.{u v} σ m inst_1
                                          (∀ (a : α_1), β_1))
                                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_1), β_1) β_1 f
                                      (λ (x_2 : (∀ (a : α_1), β_1)),
                                      (λ (α_2 β_2 : Type u)
                                          (f_0 : (∀ (a : α_2), β_2))
                                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                                        @state_t_bind.{u v} σ m inst_1 α_2 β_2
                                          x_3
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_2 β_2
                                            (@state_t.{u v} σ m inst_1 β_2)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_2) f_0)) α_1 β_1 x_2 x_1)) α_0
                                    β_0 g_0 x_0))
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), β_0) γ_0 g_0
                                  (λ (g_1 : (∀ (a : α_0), β_0)),
                                  @state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), γ_0) γ_0
                                    (@state_t_return.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0)
                                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                        h_1 g_1))
                                    (λ (x_1 : (∀ (a : α_0), γ_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) α_0 γ_0 x_1 x_0)))
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), γ_0) γ_0
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) g_0
                                    (@function.comp.{u+1 u+1 (max u v)+1}
                                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                      (@state_t.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0))
                                      (@state_t_return.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0))
                                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                        h_1)))
                                  (λ (x_1 : (∀ (a : α_0), γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) α_0 γ_0 x_1 x_0))
                                (@eq.trans.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 γ_0)
                                  ((λ (α_1 β_1 : Type u)
                                      (f : (∀ (a : α_1), β_1))
                                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) β_0 γ_0 h_1
                                    ((λ (α_1 β_1 : Type u)
                                        (f :
                                          @state_t.{u v} σ m inst_1
                                            (∀ (a : α_1), β_1))
                                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1
                                        (∀ (a : α_1), β_1) β_1 f
                                        (λ (x_2 : (∀ (a : α_1), β_1)),
                                        (λ (α_2 β_2 : Type u)
                                            (f_0 : (∀ (a : α_2), β_2))
                                            (x_3 :
                                              @state_t.{u v} σ m inst_1 α_2),
                                          @state_t_bind.{u v} σ m inst_1 α_2 β_2
                                            x_3
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_2 β_2
                                              (@state_t.{u v} σ m inst_1 β_2)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_2) f_0)) α_1 β_1 x_2 x_1)) α_0
                                      β_0 g_0 x_0))
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) γ_0 g_0
                                    (λ (g_1 : (∀ (a : α_0), β_0)),
                                    @state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                      ((λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_1
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) α_0 β_0 g_1 x_0)
                                      (@function.comp.{u+1 u+1 (max u v)+1} β_0
                                        γ_0 (@state_t.{u v} σ m inst_1 γ_0)
                                        (@state_t_return.{u v} σ m inst_1 γ_0)
                                        h_1)))
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) γ_0 g_0
                                    (λ (g_1 : (∀ (a : α_0), β_0)),
                                    @state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0) γ_0
                                      (@state_t_return.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0)
                                        (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                          γ_0 h_1 g_1))
                                      (λ (x_1 : (∀ (a : α_0), γ_0)),
                                      (λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_2
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) α_0 γ_0 x_1 x_0)))
                                  (@eq.trans.{(max u v)+1}
                                    (@state_t.{u v} σ m inst_1 γ_0)
                                    ((λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) β_0 γ_0 h_1
                                      ((λ (α_1 β_1 : Type u)
                                          (f :
                                            @state_t.{u v} σ m inst_1
                                              (∀ (a : α_1), β_1))
                                          (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1
                                          (∀ (a : α_1), β_1) β_1 f
                                          (λ (x_2 : (∀ (a : α_1), β_1)),
                                          (λ (α_2 β_2 : Type u)
                                              (f_0 : (∀ (a : α_2), β_2))
                                              (x_3 :
                                                @state_t.{u v} σ m inst_1 α_2),
                                            @state_t_bind.{u v} σ m inst_1 α_2
                                              β_2 x_3
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_2 β_2
                                                (@state_t.{u v} σ m inst_1 β_2)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_2) f_0)) α_1 β_1 x_2
                                            x_1)) α_0 β_0 g_0 x_0))
                                    (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                      (@state_t_bind.{u v} σ m inst_1
                                        (∀ (a : α_0), β_0) β_0 g_0
                                        (λ (x_1 : (∀ (a : α_0), β_0)),
                                        (λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_2 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                            x_2
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_1 β_1
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_1) f)) α_0 β_0 x_1 x_0))
                                      (@function.comp.{u+1 u+1 (max u v)+1} β_0
                                        γ_0 (@state_t.{u v} σ m inst_1 γ_0)
                                        (@state_t_return.{u v} σ m inst_1 γ_0)
                                        h_1))
                                    (@state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0) γ_0 g_0
                                      (λ (g_1 : (∀ (a : α_0), β_0)),
                                      @state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        ((λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                            x_1
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_1 β_1
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_1) f)) α_0 β_0 g_1 x_0)
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          β_0 γ_0
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_return.{u v} σ m inst_1 γ_0)
                                          h_1)))
                                    (@eq.trans.{(max u v)+1}
                                      (@state_t.{u v} σ m inst_1 γ_0)
                                      ((λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_1
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) β_0 γ_0 h_1
                                        ((λ (α_1 β_1 : Type u)
                                            (f :
                                              @state_t.{u v} σ m inst_1
                                                (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1
                                            (∀ (a : α_1), β_1) β_1 f
                                            (λ (x_2 : (∀ (a : α_1), β_1)),
                                            (λ (α_2 β_2 : Type u)
                                                (f_0 : (∀ (a : α_2), β_2))
                                                (x_3 :
                                                  @state_t.{u v} σ m inst_1
                                                    α_2),
                                              @state_t_bind.{u v} σ m inst_1 α_2
                                                β_2 x_3
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_2 β_2
                                                  (@state_t.{u v} σ m inst_1
                                                    β_2)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_2) f_0)) α_1 β_1
                                              x_2 x_1)) α_0 β_0 g_0 x_0))
                                      (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        ((λ (α_1 β_1 : Type u)
                                            (f :
                                              @state_t.{u v} σ m inst_1
                                                (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1
                                            (∀ (a : α_1), β_1) β_1 f
                                            (λ (x_2 : (∀ (a : α_1), β_1)),
                                            (λ (α_2 β_2 : Type u)
                                                (f_0 : (∀ (a : α_2), β_2))
                                                (x_3 :
                                                  @state_t.{u v} σ m inst_1
                                                    α_2),
                                              @state_t_bind.{u v} σ m inst_1 α_2
                                                β_2 x_3
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_2 β_2
                                                  (@state_t.{u v} σ m inst_1
                                                    β_2)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_2) f_0)) α_1 β_1
                                              x_2 x_1)) α_0 β_0 g_0 x_0)
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          β_0 γ_0
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_return.{u v} σ m inst_1 γ_0)
                                          h_1))
                                      (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        (@state_t_bind.{u v} σ m inst_1
                                          (∀ (a : α_0), β_0) β_0 g_0
                                          (λ (x_1 : (∀ (a : α_0), β_0)),
                                          (λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_2 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1 α_1
                                              β_1 x_2
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_1) f)) α_0 β_0 x_1
                                            x_0))
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          β_0 γ_0
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_return.{u v} σ m inst_1 γ_0)
                                          h_1))
                                      (@eq.symm.{(max u v)+1}
                                        (@state_t.{u v} σ m inst_1 γ_0)
                                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                          ((λ (α_1 β_1 : Type u)
                                              (f :
                                                @state_t.{u v} σ m inst_1
                                                  (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1
                                              (∀ (a : α_1), β_1) β_1 f
                                              (λ (x_2 : (∀ (a : α_1), β_1)),
                                              (λ (α_2 β_2 : Type u)
                                                  (f_0 : (∀ (a : α_2), β_2))
                                                  (x_3 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_2),
                                                @state_t_bind.{u v} σ m inst_1
                                                  α_2 β_2 x_3
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_2 β_2
                                                    (@state_t.{u v} σ m inst_1
                                                      β_2)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_2) f_0)) α_1 β_1
                                                x_2 x_1)) α_0 β_0 g_0 x_0)
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            β_0 γ_0
                                            (@state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t_return.{u v} σ m inst_1
                                              γ_0) h_1))
                                        ((λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                            x_1
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_1 β_1
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_1) f)) β_0 γ_0 h_1
                                          ((λ (α_1 β_1 : Type u)
                                              (f :
                                                @state_t.{u v} σ m inst_1
                                                  (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1
                                              (∀ (a : α_1), β_1) β_1 f
                                              (λ (x_2 : (∀ (a : α_1), β_1)),
                                              (λ (α_2 β_2 : Type u)
                                                  (f_0 : (∀ (a : α_2), β_2))
                                                  (x_3 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_2),
                                                @state_t_bind.{u v} σ m inst_1
                                                  α_2 β_2 x_3
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_2 β_2
                                                    (@state_t.{u v} σ m inst_1
                                                      β_2)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_2) f_0)) α_1 β_1
                                                x_2 x_1)) α_0 β_0 g_0 x_0))
                                        ((λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @rfl.{(max u v)+1}
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 β_1 x_1
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@has_pure.pure.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_pure.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1)) β_1) f))) β_0 γ_0
                                          h_1
                                          ((λ (α_1 β_1 : Type u)
                                              (f :
                                                @state_t.{u v} σ m inst_1
                                                  (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1
                                              (∀ (a : α_1), β_1) β_1 f
                                              (λ (x_2 : (∀ (a : α_1), β_1)),
                                              (λ (α_2 β_2 : Type u)
                                                  (f_0 : (∀ (a : α_2), β_2))
                                                  (x_3 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_2),
                                                @state_t_bind.{u v} σ m inst_1
                                                  α_2 β_2 x_3
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_2 β_2
                                                    (@state_t.{u v} σ m inst_1
                                                      β_2)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_2) f_0)) α_1 β_1
                                                x_2 x_1)) α_0 β_0 g_0 x_0)))
                                      (@eq.rec.{0 (max u v)+1}
                                        (@state_t.{u v} σ m inst_1 β_0)
                                        (@state_t_bind.{u v} σ m inst_1
                                          (∀ (a : α_0), β_0) β_0 g_0
                                          (λ (x_1 : (∀ (a : α_0), β_0)),
                                          (λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_2 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1 α_1
                                              β_1 x_2
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_1) f)) α_0 β_0 x_1
                                            x_0))
                                        (λ (x_1 :
                                            @state_t.{u v} σ m inst_1 β_0),
                                        @eq.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0 x_1
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} β_0 γ_0
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t_return.{u v} σ m inst_1
                                                γ_0) h_1))
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0
                                            (@state_t_bind.{u v} σ m inst_1
                                              (∀ (a : α_0), β_0) β_0 g_0
                                              (λ (x_2 : (∀ (a : α_0), β_0)),
                                              (λ (α_1 β_1 : Type u)
                                                  (f : (∀ (a : α_1), β_1))
                                                  (x_3 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_1),
                                                @state_t_bind.{u v} σ m inst_1
                                                  α_1 β_1 x_3
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_1 β_1
                                                    (@state_t.{u v} σ m inst_1
                                                      β_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_1) f)) α_0 β_0
                                                x_2 x_0))
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} β_0 γ_0
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t_return.{u v} σ m inst_1
                                                γ_0) h_1)))
                                        (@rfl.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0
                                            (@state_t_bind.{u v} σ m inst_1
                                              (∀ (a : α_0), β_0) β_0 g_0
                                              (λ (x_1 : (∀ (a : α_0), β_0)),
                                              (λ (α_1 β_1 : Type u)
                                                  (f : (∀ (a : α_1), β_1))
                                                  (x_2 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_1),
                                                @state_t_bind.{u v} σ m inst_1
                                                  α_1 β_1 x_2
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_1 β_1
                                                    (@state_t.{u v} σ m inst_1
                                                      β_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_1) f)) α_0 β_0
                                                x_1 x_0))
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} β_0 γ_0
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t_return.{u v} σ m inst_1
                                                γ_0) h_1)))
                                        ((λ (α_1 β_1 : Type u)
                                            (f :
                                              @state_t.{u v} σ m inst_1
                                                (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1
                                            (∀ (a : α_1), β_1) β_1 f
                                            (λ (x_2 : (∀ (a : α_1), β_1)),
                                            (λ (α_2 β_2 : Type u)
                                                (f_0 : (∀ (a : α_2), β_2))
                                                (x_3 :
                                                  @state_t.{u v} σ m inst_1
                                                    α_2),
                                              @state_t_bind.{u v} σ m inst_1 α_2
                                                β_2 x_3
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_2 β_2
                                                  (@state_t.{u v} σ m inst_1
                                                    β_2)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_2) f_0)) α_1 β_1
                                              x_2 x_1)) α_0 β_0 g_0 x_0)
                                        ((λ (α_1 β_1 : Type u)
                                            (f :
                                              @state_t.{u v} σ m inst_1
                                                (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @rfl.{(max u v)+1}
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) (∀ (a : α_1), β_1)
                                              β_1 f
                                              (λ (x_2 : (∀ (a : α_1), β_1)),
                                              @has_map.map.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_map.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (λ (α_2 β_2 : Type u)
                                                    (f_0 : (∀ (a : α_2), β_2))
                                                    (x_3 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_2),
                                                  @state_t_bind.{u v} σ m inst_1
                                                    α_2 β_2 x_3
                                                    (@function.comp.{u+1 u+1
                                                      (max u
                                                      v)+1} α_2 β_2
                                                      (@state_t.{u v} σ m inst_1
                                                        β_2)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1 β_2) f_0))
                                                  (λ (α_2 β_2 : Type u),
                                                  @function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_2 (∀ (a : β_2), α_2)
                                                    (∀ (a :
                                                        @state_t.{u v} σ m
                                                          inst_1 β_2),
                                                    @state_t.{u v} σ m inst_1
                                                      α_2)
                                                    ((λ (α_3 β_3 : Type u)
                                                        (f_0 :
                                                          (∀ (a : α_3), β_3))
                                                        (x_3 :
                                                          @state_t.{u v} σ m
                                                            inst_1 α_3),
                                                      @state_t_bind.{u v} σ m
                                                        inst_1 α_3 β_3 x_3
                                                        (@function.comp.{u+1 u+1
                                                          (max u
                                                          v)+1} α_3 β_3
                                                          (@state_t.{u v} σ m
                                                            inst_1 β_3)
                                                          (@state_t_return.{u v}
                                                            σ m inst_1 β_3)
                                                          f_0)) β_2 α_2)
                                                    (@function.const.{u+1 u+1}
                                                      α_2 β_2))) α_1 β_1 x_2
                                                x_1))) α_0 β_0 g_0 x_0)))
                                    ((λ (α_1 β_1 γ_1 : Type u)
                                        (x_1 : @state_t.{u v} σ m inst_1 α_1)
                                        (f :
                                          (∀ (a : α_1),
                                          @state_t.{u v} σ m inst_1 β_1))
                                        (g_1 :
                                          (∀ (a : β_1),
                                          @state_t.{u v} σ m inst_1 γ_1)),
                                      @funext.{u+1 v+1} σ
                                        (λ (x_2 : σ), m (@prod.{u u} γ_1 σ))
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          β_1 γ_1
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_1 β_1 x_1 f) g_1)
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_1 γ_1 x_1
                                          (λ (x_2 : α_1),
                                          @has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            β_1 γ_1 (f x_2) g_1))
                                        (λ (x_1_0 : σ),
                                        @eq.mpr.{0}
                                          (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) β_1 γ_1
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_1 β_1 x_1 f) g_1
                                              x_1_0)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 γ_1 x_1
                                              (λ (x_2 : α_1),
                                              @has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) β_1 γ_1 (f x_2)
                                                g_1) x_1_0))
                                          (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                              (λ (x_2 : @prod.{u u} α_1 σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 β_1 f x_2)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1)))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 γ_1
                                                (λ (x_2 : α_1) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1)))))
                                          (@id_locked.{0}
                                            (@eq.{1} Prop
                                              (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_1 γ_1
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_1 β_1 x_1 f)
                                                  g_1 x_1_0)
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) α_1 γ_1 x_1
                                                  (λ (x_2 : α_1),
                                                  @has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_1 γ_1 (f x_2)
                                                    g_1) x_1_0))
                                              (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (x_1 x_1_0)
                                                  (λ (x_2 : @prod.{u u} α_1 σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_1 β_1 f
                                                      x_2)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1)))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (x_1 x_1_0)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 γ_1
                                                    (λ (x_2 : α_1) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1))))))
                                            ((λ (a a_0 : m (@prod.{u u} γ_1 σ))
                                                (e_1 :
                                                  @eq.{v+1}
                                                    (m (@prod.{u u} γ_1 σ)) a
                                                    a_0)
                                                (a_1 a_2 :
                                                  m (@prod.{u u} γ_1 σ))
                                                (e_2 :
                                                  @eq.{v+1}
                                                    (m (@prod.{u u} γ_1 σ)) a_1
                                                    a_2),
                                              @congr.{v+1 1}
                                                (m (@prod.{u u} γ_1 σ)) Prop
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} γ_1 σ)) a)
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} γ_1 σ)) a_0)
                                                a_1 a_2
                                                (@congr_arg.{v+1 max (v+1) 1}
                                                  (m (@prod.{u u} γ_1 σ))
                                                  (∀ (a_3 :
                                                      m (@prod.{u u} γ_1 σ)),
                                                  Prop) a a_0
                                                  (@eq.{v+1}
                                                    (m (@prod.{u u} γ_1 σ)))
                                                  e_1) e_2)
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) β_1 γ_1
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) α_1 β_1 x_1 f)
                                                g_1 x_1_0)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_1 σ)
                                                (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                                (λ (x_2 : @prod.{u u} α_1 σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f x_2)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1)))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} γ_1 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  β_1 γ_1
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_1 β_1 x_1 f)
                                                  g_1 x_1_0)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      ((λ (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.{u u} β_1 σ)
                                                          (x_1 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            β_1 f)) s)
                                                      (λ (p :
                                                          @prod.{u u} β_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1 p))) x_1_0)
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (x_1 x_1_0)
                                                  (λ (x_2 : @prod.{u u} α_1 σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_1 β_1 f
                                                      x_2)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1)))
                                                (@eq.trans.{v+1}
                                                  (m (@prod.{u u} γ_1 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_1 γ_1
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_1 β_1 x_1
                                                      f) g_1 x_1_0)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_1 γ_1
                                                    (λ (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} β_1 σ)
                                                      (x_1 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 β_1
                                                        f)) g_1 x_1_0)
                                                  ((λ (s : σ),
                                                    (λ (this :
                                                          m
                                                            (@prod.{u u} γ_1
                                                              σ)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        ((λ (s_0 : σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} β_1 σ)
                                                            (x_1 s_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1 f)) s)
                                                        (λ (p :
                                                            @prod.{u u} β_1 σ),
                                                        @state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_1 γ_1
                                                          g_1 p))) x_1_0)
                                                  ((λ (act act_0 :
                                                        @state_t.{u v} σ m
                                                          inst_1 β_1)
                                                      (e_1 :
                                                        @eq.{(max u v)+1}
                                                          (@state_t.{u v} σ m
                                                            inst_1 β_1) act
                                                          act_0)
                                                      (act_1 act_2 :
                                                        (∀ (a_1 : β_1),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_1))
                                                      (e_2 :
                                                        @eq.{max (u+1)
                                                          ((max u
                                                          v)+1)}
                                                          (∀ (a_1 : β_1),
                                                          @state_t.{u v} σ m
                                                            inst_1 γ_1) act_1
                                                          act_2) (a a_0 : σ)
                                                      (e_3 : @eq.{u+1} σ a a_0),
                                                    @congr.{u+1 v+1} σ
                                                      (m (@prod.{u u} γ_1 σ))
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 β_1 γ_1 act
                                                        act_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 β_1 γ_1 act_0
                                                        act_2) a a_0
                                                      (@congr.{max (u+1)
                                                        ((max u
                                                        v)+1) (max u v)+1}
                                                        (∀ (a_1 : β_1),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_1)
                                                        (@state_t.{u v} σ m
                                                          inst_1 γ_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 β_1 γ_1 act)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 β_1 γ_1 act_0)
                                                        act_1 act_2
                                                        (@congr_arg.{(max u
                                                          v)+1
                                                          max (u+1)
                                                          ((max u
                                                          v)+1)}
                                                          (@state_t.{u v} σ m
                                                            inst_1 β_1)
                                                          (∀ (act_3 :
                                                              (∀ (a_1 : β_1),
                                                              @state_t.{u v} σ m
                                                                inst_1 γ_1)),
                                                          @state_t.{u v} σ m
                                                            inst_1 γ_1) act
                                                          act_0
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 β_1 γ_1)
                                                          e_1) e_2) e_3)
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_1 β_1 x_1
                                                      f)
                                                    (λ (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} β_1 σ)
                                                      (x_1 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 β_1
                                                        f))
                                                    (@state_t_bind.equations._eqn_1.{u
                                                      v} σ m inst_1 α_1 β_1 x_1
                                                      f) g_1 g_1
                                                    (@eq.refl.{max (u+1)
                                                      ((max u
                                                      v)+1)}
                                                      (∀ (a : β_1),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1) g_1) x_1_0 x_1_0
                                                    (@eq.refl.{u+1} σ x_1_0))
                                                  (@congr_fun.{u+1 v+1} σ
                                                    (λ (a : σ),
                                                    m (@prod.{u u} γ_1 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 β_1 γ_1
                                                      (λ (s : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.{u u} β_1 σ)
                                                        (x_1 s)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_1 β_1
                                                          f)) g_1)
                                                    (λ (s : σ),
                                                    (λ (this :
                                                          m
                                                            (@prod.{u u} γ_1
                                                              σ)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        ((λ (s_0 : σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} β_1 σ)
                                                            (x_1 s_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1 f)) s)
                                                        (λ (p :
                                                            @prod.{u u} β_1 σ),
                                                        @state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_1 γ_1
                                                          g_1 p)))
                                                    (@state_t_bind.equations._eqn_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      (λ (s : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.{u u} β_1 σ)
                                                        (x_1 s)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_1 β_1
                                                          f)) g_1) x_1_0))
                                                (@monad.bind_assoc.{u v} m
                                                  inst_1 (@prod.{u u} α_1 σ)
                                                  (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (x_1 x_1_0)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1)))
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_1 γ_1 x_1
                                                (λ (x_2 : α_1),
                                                @has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_1 γ_1 (f x_2)
                                                  g_1) x_1_0)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_1 σ)
                                                (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 γ_1
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1))))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} γ_1 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_1 γ_1 x_1
                                                  (λ (x_2 : α_1),
                                                  @has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_1 γ_1 (f x_2)
                                                    g_1) x_1_0)
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_1 γ_1 x_1
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1)) x_1_0)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (x_1 s)
                                                      (λ (p :
                                                          @prod.{u u} α_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 γ_1
                                                        (λ (x_2 : α_1)
                                                          (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (f x_2 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_1
                                                            γ_1 g_1)) p)))
                                                  x_1_0)
                                                ((λ (act act_0 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_1)
                                                    (e_1 :
                                                      @eq.{(max u v)+1}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_1) act act_0)
                                                    (act_1 act_2 :
                                                      (∀ (a_1 : α_1),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1))
                                                    (e_2 :
                                                      @eq.{max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (∀ (a_1 : α_1),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_1) act_1
                                                        act_2) (a a_0 : σ)
                                                    (e_3 : @eq.{u+1} σ a a_0),
                                                  @congr.{u+1 v+1} σ
                                                    (m (@prod.{u u} γ_1 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_1 γ_1 act act_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_1 γ_1 act_0
                                                      act_2) a a_0
                                                    (@congr.{max (u+1)
                                                      ((max u
                                                      v)+1) (max u v)+1}
                                                      (∀ (a_1 : α_1),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1)
                                                      (@state_t.{u v} σ m inst_1
                                                        γ_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_1 γ_1 act)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_1 γ_1 act_0)
                                                      act_1 act_2
                                                      (@congr_arg.{(max u
                                                        v)+1
                                                        max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_1)
                                                        (∀ (act_3 :
                                                            (∀ (a_1 : α_1),
                                                            @state_t.{u v} σ m
                                                              inst_1 γ_1)),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_1) act act_0
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 α_1 γ_1) e_1)
                                                      e_2) e_3) x_1 x_1
                                                  (@eq.refl.{(max u v)+1}
                                                    (@state_t.{u v} σ m inst_1
                                                      α_1) x_1)
                                                  (λ (x_2 : α_1),
                                                  @has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_1 γ_1 (f x_2)
                                                    g_1)
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1))
                                                  (@funext.{u+1 (max u v)+1} α_1
                                                    (λ (x_2 : α_1),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_1)
                                                    (λ (x_2 : α_1),
                                                    @state_t_bind.{u v} σ m
                                                      inst_1 β_1 γ_1 (f x_2)
                                                      g_1)
                                                    (λ (x_2 : α_1) (s : σ),
                                                    (λ (this :
                                                          m
                                                            (@prod.{u u} γ_1
                                                              σ)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (f x_2 s)
                                                        (λ (p :
                                                            @prod.{u u} β_1 σ),
                                                        @state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_1 γ_1
                                                          g_1 p)))
                                                    (λ (x_2 : α_1),
                                                    @state_t_bind.equations._eqn_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      (f x_2) g_1)) x_1_0 x_1_0
                                                  (@eq.refl.{u+1} σ x_1_0))
                                                (@congr_fun.{u+1 v+1} σ
                                                  (λ (a : σ),
                                                  m (@prod.{u u} γ_1 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 α_1 γ_1 x_1
                                                    (λ (x_2 : α_1) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1)))
                                                  (λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (x_1 s)
                                                      (λ (p :
                                                          @prod.{u u} α_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 γ_1
                                                        (λ (x_2 : α_1)
                                                          (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (f x_2 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_1
                                                            γ_1 g_1)) p)))
                                                  (@state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 α_1 γ_1 x_1
                                                    (λ (x_2 : α_1) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1))) x_1_0))))
                                          (@congr_arg.{max (u+1) (v+1) v+1}
                                            (∀ (x_2 : @prod.{u u} α_1 σ),
                                            m (@prod.{u u} γ_1 σ))
                                            (m (@prod.{u u} γ_1 σ))
                                            (λ (x_2 : @prod.{u u} α_1 σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_1 σ)
                                              (@prod.{u u} γ_1 σ)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 β_1 f x_2)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_1 γ_1 g_1))
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 γ_1
                                              (λ (x_2 : α_1) (s : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ) (f x_2 s)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1)))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} γ_1 σ) (x_1 x_1_0))
                                            (@funext.{u+1 v+1}
                                              (@prod.{u u} α_1 σ)
                                              (λ (x_2 : @prod.{u u} α_1 σ),
                                              m (@prod.{u u} γ_1 σ))
                                              (λ (x_2 : @prod.{u u} α_1 σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 β_1 f x_2)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1))
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 γ_1
                                                (λ (x_2 : α_1) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1)))
                                              (λ (r : @prod.{u u} α_1 σ),
                                              @prod.cases_on.{0 u u} α_1 σ
                                                (λ (r_0 : @prod.{u u} α_1 σ),
                                                @eq.{v+1}
                                                  (m (@prod.{u u} γ_1 σ))
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_1 β_1 f
                                                      r_0)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1))
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 γ_1
                                                    (λ (x_2 : α_1) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1)) r_0)) r
                                                (λ (fst : α_1) (snd : σ),
                                                @eq.refl.{v+1}
                                                  (m (@prod.{u u} γ_1 σ))
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_1 β_1 f
                                                      (@prod.mk.{u u} α_1 σ fst
                                                        snd))
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1))))))))
                                      (∀ (a : α_0), β_0) β_0 γ_0 g_0
                                      (λ (x_1 : (∀ (a : α_0), β_0)),
                                      (λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_2
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) α_0 β_0 x_1 x_0)
                                      (@function.comp.{u+1 u+1 (max u v)+1} β_0
                                        γ_0 (@state_t.{u v} σ m inst_1 γ_0)
                                        (@state_t_return.{u v} σ m inst_1 γ_0)
                                        h_1)))
                                  (@congr_arg.{max (u+1)
                                    ((max u
                                    v)+1) (max u v)+1}
                                    (∀ (g_1 : (∀ (a : α_0), β_0)),
                                    @state_t.{u v} σ m inst_1 γ_0)
                                    (@state_t.{u v} σ m inst_1 γ_0)
                                    (λ (g_1 : (∀ (a : α_0), β_0)),
                                    @state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                      ((λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_1
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) α_0 β_0 g_1 x_0)
                                      (@function.comp.{u+1 u+1 (max u v)+1} β_0
                                        γ_0 (@state_t.{u v} σ m inst_1 γ_0)
                                        (@state_t_return.{u v} σ m inst_1 γ_0)
                                        h_1))
                                    (λ (g_1 : (∀ (a : α_0), β_0)),
                                    @state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0) γ_0
                                      (@state_t_return.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0)
                                        (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                          γ_0 h_1 g_1))
                                      (λ (x_1 : (∀ (a : α_0), γ_0)),
                                      (λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_2
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) α_0 γ_0 x_1 x_0))
                                    (@state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0) γ_0 g_0)
                                    (@funext.{u+1 (max u v)+1}
                                      (∀ (a : α_0), β_0)
                                      (λ (x_1 : (∀ (a : α_0), β_0)),
                                      @state_t.{u v} σ m inst_1 γ_0)
                                      (λ (g_1 : (∀ (a : α_0), β_0)),
                                      @state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        ((λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                            x_1
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_1 β_1
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_1) f)) α_0 β_0 g_1 x_0)
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          β_0 γ_0
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_return.{u v} σ m inst_1 γ_0)
                                          h_1))
                                      (λ (g_1 : (∀ (a : α_0), β_0)),
                                      @state_t_bind.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0) γ_0
                                        (@state_t_return.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0)
                                          (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                            γ_0 h_1 g_1))
                                        (λ (x_1 : (∀ (a : α_0), γ_0)),
                                        (λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_2 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                            x_2
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_1 β_1
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_1) f)) α_0 γ_0 x_1 x_0))
                                      (λ (g_1 : (∀ (a : α_0), β_0)),
                                      @eq.trans.{(max u v)+1}
                                        (@state_t.{u v} σ m inst_1 γ_0)
                                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                          ((λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1 α_1
                                              β_1 x_1
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_1) f)) α_0 β_0 g_1
                                            x_0)
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            β_0 γ_0
                                            (@state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t_return.{u v} σ m inst_1
                                              γ_0) h_1))
                                        ((λ (α_1 β_1 : Type u)
                                            (f : (∀ (a : α_1), β_1))
                                            (x_1 :
                                              @state_t.{u v} σ m inst_1 α_1),
                                          @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                            x_1
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_1 β_1
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@state_t_return.{u v} σ m inst_1
                                                β_1) f)) α_0 γ_0
                                          (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                            γ_0 h_1 g_1) x_0)
                                        (@state_t_bind.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0) γ_0
                                          (@state_t_return.{u v} σ m inst_1
                                            (∀ (a : α_0), γ_0)
                                            (@function.comp.{u+1 u+1 u+1} α_0
                                              β_0 γ_0 h_1 g_1))
                                          (λ (x_1 : (∀ (a : α_0), γ_0)),
                                          (λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_2 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1 α_1
                                              β_1 x_2
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_1) f)) α_0 γ_0 x_1
                                            x_0))
                                        (@eq.trans.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0
                                            ((λ (α_1 β_1 : Type u)
                                                (f : (∀ (a : α_1), β_1))
                                                (x_1 :
                                                  @state_t.{u v} σ m inst_1
                                                    α_1),
                                              @state_t_bind.{u v} σ m inst_1 α_1
                                                β_1 x_1
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_1 β_1
                                                  (@state_t.{u v} σ m inst_1
                                                    β_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_1) f)) α_0 β_0 g_1
                                              x_0)
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} β_0 γ_0
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t_return.{u v} σ m inst_1
                                                γ_0) h_1))
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            γ_0 x_0
                                            (λ (x_1 : α_0),
                                            @state_t_return.{u v} σ m inst_1 γ_0
                                              (h_1 (g_1 x_1))))
                                          ((λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1 α_1
                                              β_1 x_1
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_1) f)) α_0 γ_0
                                            (@function.comp.{u+1 u+1 u+1} α_0
                                              β_0 γ_0 h_1 g_1) x_0)
                                          (@eq.trans.{(max u v)+1}
                                            (@state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t_bind.{u v} σ m inst_1 β_0
                                              γ_0
                                              ((λ (α_1 β_1 : Type u)
                                                  (f : (∀ (a : α_1), β_1))
                                                  (x_1 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_1),
                                                @state_t_bind.{u v} σ m inst_1
                                                  α_1 β_1 x_1
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_1 β_1
                                                    (@state_t.{u v} σ m inst_1
                                                      β_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_1) f)) α_0 β_0
                                                g_1 x_0)
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} β_0 γ_0
                                                (@state_t.{u v} σ m inst_1 γ_0)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 γ_0) h_1))
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              γ_0 x_0
                                              (λ (x_1 : α_0),
                                              @state_t_bind.{u v} σ m inst_1 β_0
                                                γ_0
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_0 (g_1 x_1))
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} β_0 γ_0
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 γ_0) h_1)))
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              γ_0 x_0
                                              (λ (x_1 : α_0),
                                              @state_t_return.{u v} σ m inst_1
                                                γ_0 (h_1 (g_1 x_1))))
                                            (@eq.trans.{(max u v)+1}
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t_bind.{u v} σ m inst_1
                                                β_0 γ_0
                                                ((λ (α_1 β_1 : Type u)
                                                    (f : (∀ (a : α_1), β_1))
                                                    (x_1 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_1),
                                                  @state_t_bind.{u v} σ m inst_1
                                                    α_1 β_1 x_1
                                                    (@function.comp.{u+1 u+1
                                                      (max u
                                                      v)+1} α_1 β_1
                                                      (@state_t.{u v} σ m inst_1
                                                        β_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1 β_1) f)) α_0 β_0
                                                  g_1 x_0)
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} β_0 γ_0
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 γ_0) h_1))
                                              (@state_t_bind.{u v} σ m inst_1
                                                β_0 γ_0
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_0 β_0 x_0
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_0 β_0
                                                    (@state_t.{u v} σ m inst_1
                                                      β_0)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_0) g_1))
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} β_0 γ_0
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 γ_0) h_1))
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_0 γ_0 x_0
                                                (λ (x_1 : α_0),
                                                @state_t_bind.{u v} σ m inst_1
                                                  β_0 γ_0
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_0 (g_1 x_1))
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} β_0 γ_0
                                                    (@state_t.{u v} σ m inst_1
                                                      γ_0)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 γ_0) h_1)))
                                              (@eq.rec.{0 (max u v)+1}
                                                (@state_t.{u v} σ m inst_1 β_0)
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_0 β_0 x_0
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} α_0 β_0
                                                    (@state_t.{u v} σ m inst_1
                                                      β_0)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 β_0) g_1))
                                                (λ (x_1 :
                                                    @state_t.{u v} σ m inst_1
                                                      β_0),
                                                @eq.{(max u v)+1}
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_0 γ_0 x_1
                                                    (@function.comp.{u+1 u+1
                                                      (max u
                                                      v)+1} β_0 γ_0
                                                      (@state_t.{u v} σ m inst_1
                                                        γ_0)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1 γ_0) h_1))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_0 γ_0
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 β_0 x_0
                                                      (@function.comp.{u+1 u+1
                                                        (max u
                                                        v)+1} α_0 β_0
                                                        (@state_t.{u v} σ m
                                                          inst_1 β_0)
                                                        (@state_t_return.{u v} σ
                                                          m inst_1 β_0) g_1))
                                                    (@function.comp.{u+1 u+1
                                                      (max u
                                                      v)+1} β_0 γ_0
                                                      (@state_t.{u v} σ m inst_1
                                                        γ_0)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1 γ_0) h_1)))
                                                (@rfl.{(max u v)+1}
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_0 γ_0
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 β_0 x_0
                                                      (@function.comp.{u+1 u+1
                                                        (max u
                                                        v)+1} α_0 β_0
                                                        (@state_t.{u v} σ m
                                                          inst_1 β_0)
                                                        (@state_t_return.{u v} σ
                                                          m inst_1 β_0) g_1))
                                                    (@function.comp.{u+1 u+1
                                                      (max u
                                                      v)+1} β_0 γ_0
                                                      (@state_t.{u v} σ m inst_1
                                                        γ_0)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1 γ_0) h_1)))
                                                ((λ (α_1 β_1 : Type u)
                                                    (f : (∀ (a : α_1), β_1))
                                                    (x_1 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_1),
                                                  @state_t_bind.{u v} σ m inst_1
                                                    α_1 β_1 x_1
                                                    (@function.comp.{u+1 u+1
                                                      (max u
                                                      v)+1} α_1 β_1
                                                      (@state_t.{u v} σ m inst_1
                                                        β_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1 β_1) f)) α_0 β_0
                                                  g_1 x_0)
                                                ((λ (α_1 β_1 : Type u)
                                                    (f : (∀ (a : α_1), β_1))
                                                    (x_1 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_1),
                                                  @rfl.{(max u v)+1}
                                                    (@state_t.{u v} σ m inst_1
                                                      β_1)
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_1 β_1 x_1
                                                      (@function.comp.{u+1 u+1
                                                        (max u
                                                        v)+1} α_1 β_1
                                                        (@state_t.{u v} σ m
                                                          inst_1 β_1)
                                                        (@has_pure.pure.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_pure.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_return.{u
                                                              v} σ m inst_1))
                                                          β_1) f))) α_0 β_0 g_1
                                                  x_0))
                                              ((λ (α_1 β_1 γ_1 : Type u)
                                                  (x_1 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_1)
                                                  (f :
                                                    (∀ (a : α_1),
                                                    @state_t.{u v} σ m inst_1
                                                      β_1))
                                                  (g_2 :
                                                    (∀ (a : β_1),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_1)),
                                                @funext.{u+1 v+1} σ
                                                  (λ (x_2 : σ),
                                                  m (@prod.{u u} γ_1 σ))
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_1 γ_1
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_1 β_1 x_1
                                                      f) g_2)
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_1 γ_1 x_1
                                                    (λ (x_2 : α_1),
                                                    @has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) β_1 γ_1
                                                      (f x_2) g_2))
                                                  (λ (x_1_0 : σ),
                                                  @eq.mpr.{0}
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} γ_1 σ))
                                                      (@has_bind.bind.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_bind.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1)) β_1 γ_1
                                                        (@has_bind.bind.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_bind.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1)) α_1
                                                          β_1 x_1 f) g_2 x_1_0)
                                                      (@has_bind.bind.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_bind.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1)) α_1 γ_1
                                                        x_1
                                                        (λ (x_2 : α_1),
                                                        @has_bind.bind.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_bind.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1)) β_1
                                                          γ_1 (f x_2) g_2)
                                                        x_1_0))
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} γ_1 σ))
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (x_1 x_1_0)
                                                        (λ (x_2 :
                                                            @prod.{u u} α_1 σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            β_1 f x_2)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_1
                                                            γ_1 g_2)))
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (x_1 x_1_0)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_1 γ_1
                                                          (λ (x_2 : α_1)
                                                            (s : σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} β_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (f x_2 s)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 β_1
                                                              γ_1 g_2)))))
                                                    (@id_locked.{0}
                                                      (@eq.{1} Prop
                                                        (@eq.{v+1}
                                                          (m
                                                            (@prod.{u u} γ_1 σ))
                                                          (@has_bind.bind.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@has_bind.mk.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1))
                                                            β_1 γ_1
                                                            (@has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              β_1 x_1 f) g_2
                                                            x_1_0)
                                                          (@has_bind.bind.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@has_bind.mk.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1))
                                                            α_1 γ_1 x_1
                                                            (λ (x_2 : α_1),
                                                            @has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) β_1
                                                              γ_1 (f x_2) g_2)
                                                            x_1_0))
                                                        (@eq.{v+1}
                                                          (m
                                                            (@prod.{u u} γ_1 σ))
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (x_1 x_1_0)
                                                            (λ (x_2 :
                                                                @prod.{u u} α_1
                                                                  σ),
                                                            @has_bind.bind.{u v}
                                                              m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 f x_2)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 g_2)))
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (x_1 x_1_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              γ_1
                                                              (λ (x_2 : α_1)
                                                                (s : σ),
                                                              @has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ) (f x_2 s)
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1
                                                                  g_2))))))
                                                      ((λ (a a_0 :
                                                            m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                          (e_1 :
                                                            @eq.{v+1}
                                                              (m
                                                                (@prod.{u u} γ_1
                                                                  σ)) a a_0)
                                                          (a_1 a_2 :
                                                            m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                          (e_2 :
                                                            @eq.{v+1}
                                                              (m
                                                                (@prod.{u u} γ_1
                                                                  σ)) a_1 a_2),
                                                        @congr.{v+1 1}
                                                          (m
                                                            (@prod.{u u} γ_1 σ))
                                                          Prop
                                                          (@eq.{v+1}
                                                            (m
                                                              (@prod.{u u} γ_1
                                                                σ)) a)
                                                          (@eq.{v+1}
                                                            (m
                                                              (@prod.{u u} γ_1
                                                                σ)) a_0) a_1 a_2
                                                          (@congr_arg.{v+1
                                                            max (v+1)
                                                            1}
                                                            (m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                            (∀ (a_3 :
                                                                m
                                                                  (@prod.{u u}
                                                                    γ_1 σ)),
                                                            Prop) a a_0
                                                            (@eq.{v+1}
                                                              (m
                                                                (@prod.{u u} γ_1
                                                                  σ))) e_1) e_2)
                                                        (@has_bind.bind.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_bind.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1)) β_1
                                                          γ_1
                                                          (@has_bind.bind.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@has_bind.mk.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1))
                                                            α_1 β_1 x_1 f) g_2
                                                          x_1_0)
                                                        (@has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (x_1 x_1_0)
                                                          (λ (x_2 :
                                                              @prod.{u u} α_1
                                                                σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} β_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1 f x_2)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 β_1
                                                              γ_1 g_2)))
                                                        (@eq.trans.{v+1}
                                                          (m
                                                            (@prod.{u u} γ_1 σ))
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 β_1 γ_1
                                                            (@has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              β_1 x_1 f) g_2
                                                            x_1_0)
                                                          ((λ (s : σ),
                                                            (λ (this :
                                                                  m
                                                                    (@prod.{u u}
                                                                      γ_1 σ)),
                                                              this)
                                                              (@has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ)
                                                                ((λ (s_0 : σ),
                                                                  @has_bind.bind.{u
                                                                    v} m
                                                                    (@monad.to_has_bind.{u
                                                                      v} m
                                                                      inst_1)
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.{u u}
                                                                      β_1 σ)
                                                                    (x_1 s_0)
                                                                    (@state_t_bind._match_1.{u
                                                                      v} σ m
                                                                      inst_1 α_1
                                                                      β_1 f)) s)
                                                                (λ (p :
                                                                    @prod.{u u}
                                                                      β_1 σ),
                                                                @state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1 g_2
                                                                  p))) x_1_0)
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (x_1 x_1_0)
                                                            (λ (x_2 :
                                                                @prod.{u u} α_1
                                                                  σ),
                                                            @has_bind.bind.{u v}
                                                              m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 f x_2)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 g_2)))
                                                          (@eq.trans.{v+1}
                                                            (m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1 β_1 γ_1
                                                              (@has_bind.bind.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@has_bind.mk.{u
                                                                  max u
                                                                  v}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1)
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1)) α_1
                                                                β_1 x_1 f) g_2
                                                              x_1_0)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1 β_1 γ_1
                                                              (λ (s : σ),
                                                              @has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.{u u} β_1
                                                                  σ) (x_1 s)
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 f))
                                                              g_2 x_1_0)
                                                            ((λ (s : σ),
                                                              (λ (this :
                                                                    m
                                                                      (@prod.{u
                                                                        u} γ_1
                                                                        σ)),
                                                                this)
                                                                (@has_bind.bind.{u
                                                                  v} m
                                                                  (@monad.to_has_bind.{u
                                                                    v} m inst_1)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (@prod.{u u}
                                                                    γ_1 σ)
                                                                  ((λ (s_0 : σ),
                                                                    @has_bind.bind.{u
                                                                      v} m
                                                                      (@monad.to_has_bind.{u
                                                                        v} m
                                                                        inst_1)
                                                                      (@prod.{u
                                                                        u} α_1
                                                                        σ)
                                                                      (@prod.{u
                                                                        u} β_1
                                                                        σ)
                                                                      (x_1 s_0)
                                                                      (@state_t_bind._match_1.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1 β_1
                                                                        f)) s)
                                                                  (λ (p :
                                                                      @prod.{u
                                                                        u} β_1
                                                                        σ),
                                                                  @state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 β_1
                                                                    γ_1 g_2 p)))
                                                              x_1_0)
                                                            ((λ (act act_0 :
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    β_1)
                                                                (e_1 :
                                                                  @eq.{(max u
                                                                    v)+1}
                                                                    (@state_t.{u
                                                                      v} σ m
                                                                      inst_1
                                                                      β_1) act
                                                                    act_0)
                                                                (act_1 act_2 :
                                                                  (∀ (a_1 :
                                                                      β_1),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    γ_1))
                                                                (e_2 :
                                                                  @eq.{max (u+1)
                                                                    ((max u
                                                                    v)+1)}
                                                                    (∀ (a_1 :
                                                                        β_1),
                                                                    @state_t.{u
                                                                      v} σ m
                                                                      inst_1
                                                                      γ_1) act_1
                                                                    act_2)
                                                                (a a_0 : σ)
                                                                (e_3 :
                                                                  @eq.{u+1} σ a
                                                                    a_0),
                                                              @congr.{u+1 v+1} σ
                                                                (m
                                                                  (@prod.{u u}
                                                                    γ_1 σ))
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1 act
                                                                  act_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1 act_0
                                                                  act_2) a a_0
                                                                (@congr.{max (u+1)
                                                                  ((max u
                                                                  v)+1)
                                                                  (max u
                                                                  v)+1}
                                                                  (∀ (a_1 :
                                                                      β_1),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    γ_1)
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1 γ_1)
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1 β_1
                                                                    γ_1 act)
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1 β_1
                                                                    γ_1 act_0)
                                                                  act_1 act_2
                                                                  (@congr_arg.{(max u
                                                                    v)+1
                                                                    max (u+1)
                                                                    ((max u
                                                                    v)+1)}
                                                                    (@state_t.{u
                                                                      v} σ m
                                                                      inst_1
                                                                      β_1)
                                                                    (∀ (act_3 :
                                                                        (∀ (a_1 :
                                                                            β_1),
                                                                        @state_t.{u
                                                                          v} σ m
                                                                          inst_1
                                                                          γ_1)),
                                                                    @state_t.{u
                                                                      v} σ m
                                                                      inst_1
                                                                      γ_1) act
                                                                    act_0
                                                                    (@state_t_bind.{u
                                                                      v} σ m
                                                                      inst_1 β_1
                                                                      γ_1) e_1)
                                                                  e_2) e_3)
                                                              (@has_bind.bind.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@has_bind.mk.{u
                                                                  max u
                                                                  v}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1)
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1)) α_1
                                                                β_1 x_1 f)
                                                              (λ (s : σ),
                                                              @has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.{u u} β_1
                                                                  σ) (x_1 s)
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 f))
                                                              (@state_t_bind.equations._eqn_1.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 x_1 f)
                                                              g_2 g_2
                                                              (@eq.refl.{max (u+1)
                                                                ((max u
                                                                v)+1)}
                                                                (∀ (a : β_1),
                                                                @state_t.{u v} σ
                                                                  m inst_1 γ_1)
                                                                g_2) x_1_0 x_1_0
                                                              (@eq.refl.{u+1} σ
                                                                x_1_0))
                                                            (@congr_fun.{u+1
                                                              v+1} σ
                                                              (λ (a : σ),
                                                              m
                                                                (@prod.{u u} γ_1
                                                                  σ))
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1
                                                                (λ (s : σ),
                                                                @has_bind.bind.{u
                                                                  v} m
                                                                  (@monad.to_has_bind.{u
                                                                    v} m inst_1)
                                                                  (@prod.{u u}
                                                                    α_1 σ)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (x_1 s)
                                                                  (@state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1 f)) g_2)
                                                              (λ (s : σ),
                                                              (λ (this :
                                                                    m
                                                                      (@prod.{u
                                                                        u} γ_1
                                                                        σ)),
                                                                this)
                                                                (@has_bind.bind.{u
                                                                  v} m
                                                                  (@monad.to_has_bind.{u
                                                                    v} m inst_1)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (@prod.{u u}
                                                                    γ_1 σ)
                                                                  ((λ (s_0 : σ),
                                                                    @has_bind.bind.{u
                                                                      v} m
                                                                      (@monad.to_has_bind.{u
                                                                        v} m
                                                                        inst_1)
                                                                      (@prod.{u
                                                                        u} α_1
                                                                        σ)
                                                                      (@prod.{u
                                                                        u} β_1
                                                                        σ)
                                                                      (x_1 s_0)
                                                                      (@state_t_bind._match_1.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1 β_1
                                                                        f)) s)
                                                                  (λ (p :
                                                                      @prod.{u
                                                                        u} β_1
                                                                        σ),
                                                                  @state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 β_1
                                                                    γ_1 g_2 p)))
                                                              (@state_t_bind.equations._eqn_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1
                                                                (λ (s : σ),
                                                                @has_bind.bind.{u
                                                                  v} m
                                                                  (@monad.to_has_bind.{u
                                                                    v} m inst_1)
                                                                  (@prod.{u u}
                                                                    α_1 σ)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (x_1 s)
                                                                  (@state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1 f)) g_2)
                                                              x_1_0))
                                                          (@monad.bind_assoc.{u
                                                            v} m inst_1
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} β_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (x_1 x_1_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1 f)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 β_1
                                                              γ_1 g_2)))
                                                        (@has_bind.bind.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_bind.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1)) α_1
                                                          γ_1 x_1
                                                          (λ (x_2 : α_1),
                                                          @has_bind.bind.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@has_bind.mk.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1))
                                                            β_1 γ_1 (f x_2) g_2)
                                                          x_1_0)
                                                        (@has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (x_1 x_1_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            γ_1
                                                            (λ (x_2 : α_1)
                                                              (s : σ),
                                                            @has_bind.bind.{u v}
                                                              m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ) (f x_2 s)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 g_2))))
                                                        (@eq.trans.{v+1}
                                                          (m
                                                            (@prod.{u u} γ_1 σ))
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 α_1 γ_1 x_1
                                                            (λ (x_2 : α_1),
                                                            @has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) β_1
                                                              γ_1 (f x_2) g_2)
                                                            x_1_0)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 α_1 γ_1 x_1
                                                            (λ (x_2 : α_1)
                                                              (s : σ),
                                                            @has_bind.bind.{u v}
                                                              m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ) (f x_2 s)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 g_2))
                                                            x_1_0)
                                                          ((λ (s : σ),
                                                            (λ (this :
                                                                  m
                                                                    (@prod.{u u}
                                                                      γ_1 σ)),
                                                              this)
                                                              (@has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ) (x_1 s)
                                                                (λ (p :
                                                                    @prod.{u u}
                                                                      α_1 σ),
                                                                @state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 γ_1
                                                                  (λ (x_2 : α_1)
                                                                    (s_0 : σ),
                                                                  @has_bind.bind.{u
                                                                    v} m
                                                                    (@monad.to_has_bind.{u
                                                                      v} m
                                                                      inst_1)
                                                                    (@prod.{u u}
                                                                      β_1 σ)
                                                                    (@prod.{u u}
                                                                      γ_1 σ)
                                                                    (f x_2 s_0)
                                                                    (@state_t_bind._match_1.{u
                                                                      v} σ m
                                                                      inst_1 β_1
                                                                      γ_1 g_2))
                                                                  p))) x_1_0)
                                                          ((λ (act act_0 :
                                                                @state_t.{u v} σ
                                                                  m inst_1 α_1)
                                                              (e_1 :
                                                                @eq.{(max u
                                                                  v)+1}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1 α_1)
                                                                  act act_0)
                                                              (act_1 act_2 :
                                                                (∀ (a_1 : α_1),
                                                                @state_t.{u v} σ
                                                                  m inst_1 γ_1))
                                                              (e_2 :
                                                                @eq.{max (u+1)
                                                                  ((max u
                                                                  v)+1)}
                                                                  (∀ (a_1 :
                                                                      α_1),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    γ_1) act_1
                                                                  act_2)
                                                              (a a_0 : σ)
                                                              (e_3 :
                                                                @eq.{u+1} σ a
                                                                  a_0),
                                                            @congr.{u+1 v+1} σ
                                                              (m
                                                                (@prod.{u u} γ_1
                                                                  σ))
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                α_1 γ_1 act
                                                                act_1)
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                α_1 γ_1 act_0
                                                                act_2) a a_0
                                                              (@congr.{max (u+1)
                                                                ((max u
                                                                v)+1)
                                                                (max u
                                                                v)+1}
                                                                (∀ (a_1 : α_1),
                                                                @state_t.{u v} σ
                                                                  m inst_1 γ_1)
                                                                (@state_t.{u v}
                                                                  σ m inst_1
                                                                  γ_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  α_1 γ_1 act)
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  α_1 γ_1 act_0)
                                                                act_1 act_2
                                                                (@congr_arg.{(max u
                                                                  v)+1
                                                                  max (u+1)
                                                                  ((max u
                                                                  v)+1)}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1 α_1)
                                                                  (∀ (act_3 :
                                                                      (∀ (a_1 :
                                                                          α_1),
                                                                      @state_t.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        γ_1)),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    γ_1) act
                                                                  act_0
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    γ_1) e_1)
                                                                e_2) e_3) x_1
                                                            x_1
                                                            (@eq.refl.{(max u
                                                              v)+1}
                                                              (@state_t.{u v} σ
                                                                m inst_1 α_1)
                                                              x_1)
                                                            (λ (x_2 : α_1),
                                                            @has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) β_1
                                                              γ_1 (f x_2) g_2)
                                                            (λ (x_2 : α_1)
                                                              (s : σ),
                                                            @has_bind.bind.{u v}
                                                              m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ) (f x_2 s)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 g_2))
                                                            (@funext.{u+1
                                                              (max u
                                                              v)+1} α_1
                                                              (λ (x_2 : α_1),
                                                              @state_t.{u v} σ m
                                                                inst_1 γ_1)
                                                              (λ (x_2 : α_1),
                                                              @state_t_bind.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 (f x_2)
                                                                g_2)
                                                              (λ (x_2 : α_1)
                                                                (s : σ),
                                                              (λ (this :
                                                                    m
                                                                      (@prod.{u
                                                                        u} γ_1
                                                                        σ)),
                                                                this)
                                                                (@has_bind.bind.{u
                                                                  v} m
                                                                  (@monad.to_has_bind.{u
                                                                    v} m inst_1)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (@prod.{u u}
                                                                    γ_1 σ)
                                                                  (f x_2 s)
                                                                  (λ (p :
                                                                      @prod.{u
                                                                        u} β_1
                                                                        σ),
                                                                  @state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 β_1
                                                                    γ_1 g_2 p)))
                                                              (λ (x_2 : α_1),
                                                              @state_t_bind.equations._eqn_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 (f x_2)
                                                                g_2)) x_1_0
                                                            x_1_0
                                                            (@eq.refl.{u+1} σ
                                                              x_1_0))
                                                          (@congr_fun.{u+1 v+1}
                                                            σ
                                                            (λ (a : σ),
                                                            m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1 α_1 γ_1
                                                              x_1
                                                              (λ (x_2 : α_1)
                                                                (s : σ),
                                                              @has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ) (f x_2 s)
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1 g_2)))
                                                            (λ (s : σ),
                                                            (λ (this :
                                                                  m
                                                                    (@prod.{u u}
                                                                      γ_1 σ)),
                                                              this)
                                                              (@has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ) (x_1 s)
                                                                (λ (p :
                                                                    @prod.{u u}
                                                                      α_1 σ),
                                                                @state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 γ_1
                                                                  (λ (x_2 : α_1)
                                                                    (s_0 : σ),
                                                                  @has_bind.bind.{u
                                                                    v} m
                                                                    (@monad.to_has_bind.{u
                                                                      v} m
                                                                      inst_1)
                                                                    (@prod.{u u}
                                                                      β_1 σ)
                                                                    (@prod.{u u}
                                                                      γ_1 σ)
                                                                    (f x_2 s_0)
                                                                    (@state_t_bind._match_1.{u
                                                                      v} σ m
                                                                      inst_1 β_1
                                                                      γ_1 g_2))
                                                                  p)))
                                                            (@state_t_bind.equations._eqn_1.{u
                                                              v} σ m inst_1 α_1
                                                              γ_1 x_1
                                                              (λ (x_2 : α_1)
                                                                (s : σ),
                                                              @has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ) (f x_2 s)
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1 g_2)))
                                                            x_1_0))))
                                                    (@congr_arg.{max (u+1)
                                                      (v+1) v+1}
                                                      (∀ (x_2 :
                                                          @prod.{u u} α_1 σ),
                                                      m (@prod.{u u} γ_1 σ))
                                                      (m (@prod.{u u} γ_1 σ))
                                                      (λ (x_2 :
                                                          @prod.{u u} α_1 σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_1 β_1
                                                          f x_2)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_1 γ_1
                                                          g_2))
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 γ_1
                                                        (λ (x_2 : α_1) (s : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (f x_2 s)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_1
                                                            γ_1 g_2)))
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (x_1 x_1_0))
                                                      (@funext.{u+1 v+1}
                                                        (@prod.{u u} α_1 σ)
                                                        (λ (x_2 :
                                                            @prod.{u u} α_1 σ),
                                                        m (@prod.{u u} γ_1 σ))
                                                        (λ (x_2 :
                                                            @prod.{u u} α_1 σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_1 σ)
                                                          (@prod.{u u} γ_1 σ)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            β_1 f x_2)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_1
                                                            γ_1 g_2))
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_1 γ_1
                                                          (λ (x_2 : α_1)
                                                            (s : σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} β_1 σ)
                                                            (@prod.{u u} γ_1 σ)
                                                            (f x_2 s)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 β_1
                                                              γ_1 g_2)))
                                                        (λ (r :
                                                            @prod.{u u} α_1 σ),
                                                        @prod.cases_on.{0 u u}
                                                          α_1 σ
                                                          (λ (r_0 :
                                                              @prod.{u u} α_1
                                                                σ),
                                                          @eq.{v+1}
                                                            (m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                            (@has_bind.bind.{u
                                                              v} m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 f r_0)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1 g_2))
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              γ_1
                                                              (λ (x_2 : α_1)
                                                                (s : σ),
                                                              @has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                (@prod.{u u} γ_1
                                                                  σ) (f x_2 s)
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  β_1 γ_1 g_2))
                                                              r_0)) r
                                                          (λ (fst : α_1)
                                                            (snd : σ),
                                                          @eq.refl.{v+1}
                                                            (m
                                                              (@prod.{u u} γ_1
                                                                σ))
                                                            (@has_bind.bind.{u
                                                              v} m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              (@prod.{u u} γ_1
                                                                σ)
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 f
                                                                (@prod.mk.{u u}
                                                                  α_1 σ fst
                                                                  snd))
                                                              (@state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                β_1 γ_1
                                                                g_2)))))))) α_0
                                                β_0 γ_0 x_0
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_0 β_0
                                                  (@state_t.{u v} σ m inst_1
                                                    β_0)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_0) g_1)
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} β_0 γ_0
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 γ_0) h_1)))
                                            (@congr_arg.{max (u+1)
                                              ((max u
                                              v)+1) (max u v)+1}
                                              (∀ (x_1 : α_0),
                                              @state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (λ (x_1 : α_0),
                                              @state_t_bind.{u v} σ m inst_1 β_0
                                                γ_0
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_0 (g_1 x_1))
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} β_0 γ_0
                                                  (@state_t.{u v} σ m inst_1
                                                    γ_0)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 γ_0) h_1))
                                              (λ (x_1 : α_0),
                                              @state_t_return.{u v} σ m inst_1
                                                γ_0 (h_1 (g_1 x_1)))
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_0 γ_0 x_0)
                                              (@funext.{u+1 (max u v)+1} α_0
                                                (λ (x_1 : α_0),
                                                @state_t.{u v} σ m inst_1 γ_0)
                                                (λ (x_1 : α_0),
                                                @state_t_bind.{u v} σ m inst_1
                                                  β_0 γ_0
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_0 (g_1 x_1))
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} β_0 γ_0
                                                    (@state_t.{u v} σ m inst_1
                                                      γ_0)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 γ_0) h_1))
                                                (λ (x_1 : α_0),
                                                @state_t_return.{u v} σ m inst_1
                                                  γ_0 (h_1 (g_1 x_1)))
                                                (λ (x_1 : α_0),
                                                (λ (α_1 β_1 : Type u)
                                                    (x_2 : α_1)
                                                    (f :
                                                      (∀ (a : α_1),
                                                      @state_t.{u v} σ m inst_1
                                                        β_1)),
                                                  @funext.{u+1 v+1} σ
                                                    (λ (x_3 : σ),
                                                    m (@prod.{u u} β_1 σ))
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_1 β_1
                                                      (@has_pure.pure.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_pure.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_return.{u v}
                                                            σ m inst_1)) α_1
                                                        x_2) f) (f x_2)
                                                    (λ (x_1_0 : σ),
                                                    @eq.mpr.{0}
                                                      (@eq.{v+1}
                                                        (m (@prod.{u u} β_1 σ))
                                                        (@has_bind.bind.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_bind.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1)) α_1
                                                          β_1
                                                          (@has_pure.pure.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@has_pure.mk.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@state_t_return.{u
                                                                v} σ m inst_1))
                                                            α_1 x_2) f x_1_0)
                                                        (f x_2 x_1_0)) @true
                                                      (@id_locked.{0}
                                                        (@eq.{1} Prop
                                                          (@eq.{v+1}
                                                            (m
                                                              (@prod.{u u} β_1
                                                                σ))
                                                            (@has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              β_1
                                                              (@has_pure.pure.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@has_pure.mk.{u
                                                                  max u
                                                                  v}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1)
                                                                  (@state_t_return.{u
                                                                    v} σ m
                                                                    inst_1)) α_1
                                                                x_2) f x_1_0)
                                                            (f x_2 x_1_0))
                                                          @true)
                                                        (@eq.trans.{1} Prop
                                                          (@eq.{v+1}
                                                            (m
                                                              (@prod.{u u} β_1
                                                                σ))
                                                            (@has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              β_1
                                                              (@has_pure.pure.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@has_pure.mk.{u
                                                                  max u
                                                                  v}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1)
                                                                  (@state_t_return.{u
                                                                    v} σ m
                                                                    inst_1)) α_1
                                                                x_2) f x_1_0)
                                                            (f x_2 x_1_0))
                                                          (@eq.{v+1}
                                                            (m
                                                              (@prod.{u u} β_1
                                                                σ))
                                                            (f x_2 x_1_0)
                                                            (f x_2 x_1_0)) @true
                                                          ((λ (a a_0 :
                                                                m
                                                                  (@prod.{u u}
                                                                    β_1 σ))
                                                              (e_1 :
                                                                @eq.{v+1}
                                                                  (m
                                                                    (@prod.{u u}
                                                                      β_1 σ)) a
                                                                  a_0)
                                                              (a_1 a_2 :
                                                                m
                                                                  (@prod.{u u}
                                                                    β_1 σ))
                                                              (e_2 :
                                                                @eq.{v+1}
                                                                  (m
                                                                    (@prod.{u u}
                                                                      β_1 σ))
                                                                  a_1 a_2),
                                                            @congr.{v+1 1}
                                                              (m
                                                                (@prod.{u u} β_1
                                                                  σ)) Prop
                                                              (@eq.{v+1}
                                                                (m
                                                                  (@prod.{u u}
                                                                    β_1 σ)) a)
                                                              (@eq.{v+1}
                                                                (m
                                                                  (@prod.{u u}
                                                                    β_1 σ)) a_0)
                                                              a_1 a_2
                                                              (@congr_arg.{v+1
                                                                max (v+1)
                                                                1}
                                                                (m
                                                                  (@prod.{u u}
                                                                    β_1 σ))
                                                                (∀ (a_3 :
                                                                    m
                                                                      (@prod.{u
                                                                        u} β_1
                                                                        σ)),
                                                                Prop) a a_0
                                                                (@eq.{v+1}
                                                                  (m
                                                                    (@prod.{u u}
                                                                      β_1 σ)))
                                                                e_1) e_2)
                                                            (@has_bind.bind.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_bind.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              β_1
                                                              (@has_pure.pure.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@has_pure.mk.{u
                                                                  max u
                                                                  v}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1)
                                                                  (@state_t_return.{u
                                                                    v} σ m
                                                                    inst_1)) α_1
                                                                x_2) f x_1_0)
                                                            (f x_2 x_1_0)
                                                            (@eq.trans.{v+1}
                                                              (m
                                                                (@prod.{u u} β_1
                                                                  σ))
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                α_1 β_1
                                                                (@has_pure.pure.{u
                                                                  max u
                                                                  v}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1)
                                                                  (@has_pure.mk.{u
                                                                    max u
                                                                    v}
                                                                    (@state_t.{u
                                                                      v} σ m
                                                                      inst_1)
                                                                    (@state_t_return.{u
                                                                      v} σ m
                                                                      inst_1))
                                                                  α_1 x_2) f
                                                                x_1_0)
                                                              ((λ (s : σ),
                                                                (λ (this :
                                                                      m
                                                                        (@prod.{u
                                                                          u} β_1
                                                                          σ)),
                                                                  this)
                                                                  (@has_bind.bind.{u
                                                                    v} m
                                                                    (@monad.to_has_bind.{u
                                                                      v} m
                                                                      inst_1)
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.{u u}
                                                                      β_1 σ)
                                                                    ((λ (s_0 :
                                                                          σ),
                                                                      @return.{u
                                                                        v} m
                                                                        inst_1
                                                                        (@prod.{u
                                                                          u} α_1
                                                                          σ)
                                                                        (@prod.mk.{u
                                                                          u} α_1
                                                                          σ x_2
                                                                          s_0))
                                                                      s)
                                                                    (λ (p :
                                                                        @prod.{u
                                                                          u} α_1
                                                                          σ),
                                                                    @state_t_bind._match_1.{u
                                                                      v} σ m
                                                                      inst_1 α_1
                                                                      β_1 f p)))
                                                                x_1_0)
                                                              (f x_2 x_1_0)
                                                              (@eq.trans.{v+1}
                                                                (m
                                                                  (@prod.{u u}
                                                                    β_1 σ))
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1
                                                                  (@has_pure.pure.{u
                                                                    max u
                                                                    v}
                                                                    (@state_t.{u
                                                                      v} σ m
                                                                      inst_1)
                                                                    (@has_pure.mk.{u
                                                                      max u
                                                                      v}
                                                                      (@state_t.{u
                                                                        v} σ m
                                                                        inst_1)
                                                                      (@state_t_return.{u
                                                                        v} σ m
                                                                        inst_1))
                                                                    α_1 x_2) f
                                                                  x_1_0)
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1
                                                                  (λ (s : σ),
                                                                  @return.{u v}
                                                                    m inst_1
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.mk.{u
                                                                      u} α_1 σ
                                                                      x_2 s)) f
                                                                  x_1_0)
                                                                ((λ (s : σ),
                                                                  (λ (this :
                                                                        m
                                                                          (@prod.{u
                                                                            u}
                                                                            β_1
                                                                            σ)),
                                                                    this)
                                                                    (@has_bind.bind.{u
                                                                      v} m
                                                                      (@monad.to_has_bind.{u
                                                                        v} m
                                                                        inst_1)
                                                                      (@prod.{u
                                                                        u} α_1
                                                                        σ)
                                                                      (@prod.{u
                                                                        u} β_1
                                                                        σ)
                                                                      ((λ (s_0 :
                                                                            σ),
                                                                        @return.{u
                                                                          v} m
                                                                          inst_1
                                                                          (@prod.{u
                                                                            u}
                                                                            α_1
                                                                            σ)
                                                                          (@prod.mk.{u
                                                                            u}
                                                                            α_1
                                                                            σ
                                                                            x_2
                                                                            s_0))
                                                                        s)
                                                                      (λ (p :
                                                                          @prod.{u
                                                                            u}
                                                                            α_1
                                                                            σ),
                                                                      @state_t_bind._match_1.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1 β_1
                                                                        f p)))
                                                                  x_1_0)
                                                                ((λ (act act_0 :
                                                                      @state_t.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1)
                                                                    (e_1 :
                                                                      @eq.{(max u
                                                                        v)+1}
                                                                        (@state_t.{u
                                                                          v} σ m
                                                                          inst_1
                                                                          α_1)
                                                                        act
                                                                        act_0)
                                                                    (act_1
                                                                      act_2 :
                                                                      (∀ (a_1 :
                                                                          α_1),
                                                                      @state_t.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        β_1))
                                                                    (e_2 :
                                                                      @eq.{max (u+1)
                                                                        ((max u
                                                                        v)+1)}
                                                                        (∀ (a_1 :
                                                                            α_1),
                                                                        @state_t.{u
                                                                          v} σ m
                                                                          inst_1
                                                                          β_1)
                                                                        act_1
                                                                        act_2)
                                                                    (a a_0 : σ)
                                                                    (e_3 :
                                                                      @eq.{u+1}
                                                                        σ a
                                                                        a_0),
                                                                  @congr.{u+1
                                                                    v+1} σ
                                                                    (m
                                                                      (@prod.{u
                                                                        u} β_1
                                                                        σ))
                                                                    (@state_t_bind.{u
                                                                      v} σ m
                                                                      inst_1 α_1
                                                                      β_1 act
                                                                      act_1)
                                                                    (@state_t_bind.{u
                                                                      v} σ m
                                                                      inst_1 α_1
                                                                      β_1 act_0
                                                                      act_2) a
                                                                    a_0
                                                                    (@congr.{max (u+1)
                                                                      ((max u
                                                                      v)+1)
                                                                      (max u
                                                                      v)+1}
                                                                      (∀ (a_1 :
                                                                          α_1),
                                                                      @state_t.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        β_1)
                                                                      (@state_t.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        β_1)
                                                                      (@state_t_bind.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1 β_1
                                                                        act)
                                                                      (@state_t_bind.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1 β_1
                                                                        act_0)
                                                                      act_1
                                                                      act_2
                                                                      (@congr_arg.{(max u
                                                                        v)+1
                                                                        max (u+1)
                                                                        ((max u
                                                                        v)+1)}
                                                                        (@state_t.{u
                                                                          v} σ m
                                                                          inst_1
                                                                          α_1)
                                                                        (∀ (act_3 :
                                                                            (∀ (a_1 :
                                                                                α_1),
                                                                            @state_t.{u
                                                                              v}
                                                                              σ
                                                                              m
                                                                              inst_1
                                                                              β_1)),
                                                                        @state_t.{u
                                                                          v} σ m
                                                                          inst_1
                                                                          β_1)
                                                                        act
                                                                        act_0
                                                                        (@state_t_bind.{u
                                                                          v} σ m
                                                                          inst_1
                                                                          α_1
                                                                          β_1)
                                                                        e_1)
                                                                      e_2) e_3)
                                                                  (@has_pure.pure.{u
                                                                    max u
                                                                    v}
                                                                    (@state_t.{u
                                                                      v} σ m
                                                                      inst_1)
                                                                    (@has_pure.mk.{u
                                                                      max u
                                                                      v}
                                                                      (@state_t.{u
                                                                        v} σ m
                                                                        inst_1)
                                                                      (@state_t_return.{u
                                                                        v} σ m
                                                                        inst_1))
                                                                    α_1 x_2)
                                                                  (λ (s : σ),
                                                                  @return.{u v}
                                                                    m inst_1
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.mk.{u
                                                                      u} α_1 σ
                                                                      x_2 s))
                                                                  (@state_t_return.equations._eqn_1.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    x_2) f f
                                                                  (@eq.refl.{max (u+1)
                                                                    ((max u
                                                                    v)+1)}
                                                                    (∀ (a :
                                                                        α_1),
                                                                    @state_t.{u
                                                                      v} σ m
                                                                      inst_1
                                                                      β_1) f)
                                                                  x_1_0 x_1_0
                                                                  (@eq.refl.{u+1}
                                                                    σ x_1_0))
                                                                (@congr_fun.{u+1
                                                                  v+1} σ
                                                                  (λ (a : σ),
                                                                  m
                                                                    (@prod.{u u}
                                                                      β_1 σ))
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1
                                                                    (λ (s : σ),
                                                                    @return.{u
                                                                      v} m
                                                                      inst_1
                                                                      (@prod.{u
                                                                        u} α_1
                                                                        σ)
                                                                      (@prod.mk.{u
                                                                        u} α_1 σ
                                                                        x_2 s))
                                                                    f)
                                                                  (λ (s : σ),
                                                                  (λ (this :
                                                                        m
                                                                          (@prod.{u
                                                                            u}
                                                                            β_1
                                                                            σ)),
                                                                    this)
                                                                    (@has_bind.bind.{u
                                                                      v} m
                                                                      (@monad.to_has_bind.{u
                                                                        v} m
                                                                        inst_1)
                                                                      (@prod.{u
                                                                        u} α_1
                                                                        σ)
                                                                      (@prod.{u
                                                                        u} β_1
                                                                        σ)
                                                                      ((λ (s_0 :
                                                                            σ),
                                                                        @return.{u
                                                                          v} m
                                                                          inst_1
                                                                          (@prod.{u
                                                                            u}
                                                                            α_1
                                                                            σ)
                                                                          (@prod.mk.{u
                                                                            u}
                                                                            α_1
                                                                            σ
                                                                            x_2
                                                                            s_0))
                                                                        s)
                                                                      (λ (p :
                                                                          @prod.{u
                                                                            u}
                                                                            α_1
                                                                            σ),
                                                                      @state_t_bind._match_1.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        α_1 β_1
                                                                        f p)))
                                                                  (@state_t_bind.equations._eqn_1.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1
                                                                    (λ (s : σ),
                                                                    @return.{u
                                                                      v} m
                                                                      inst_1
                                                                      (@prod.{u
                                                                        u} α_1
                                                                        σ)
                                                                      (@prod.mk.{u
                                                                        u} α_1 σ
                                                                        x_2 s))
                                                                    f) x_1_0))
                                                              (@eq.trans.{v+1}
                                                                (m
                                                                  (@prod.{u u}
                                                                    β_1 σ))
                                                                (@has_bind.bind.{u
                                                                  v} m
                                                                  (@monad.to_has_bind.{u
                                                                    v} m inst_1)
                                                                  (@prod.{u u}
                                                                    α_1 σ)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (@has_pure.pure.{u
                                                                    v} m
                                                                    (@applicative.to_has_pure.{u
                                                                      v} m
                                                                      (@monad.to_applicative.{u
                                                                        v} m
                                                                        inst_1))
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.mk.{u
                                                                      u} α_1 σ
                                                                      x_2
                                                                      x_1_0))
                                                                  (@state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1 f))
                                                                (@state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 f
                                                                  (@prod.mk.{u
                                                                    u} α_1 σ x_2
                                                                    x_1_0))
                                                                (f x_2 x_1_0)
                                                                (@monad.pure_bind.{u
                                                                  v} m inst_1
                                                                  (@prod.{u u}
                                                                    α_1 σ)
                                                                  (@prod.{u u}
                                                                    β_1 σ)
                                                                  (@prod.mk.{u
                                                                    u} α_1 σ x_2
                                                                    x_1_0)
                                                                  (@state_t_bind._match_1.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1 f))
                                                                (@state_t_bind._match_1.equations._eqn_1.{v
                                                                  u} σ m inst_1
                                                                  α_1 β_1 f x_2
                                                                  x_1_0)))
                                                            (f x_2 x_1_0)
                                                            (f x_2 x_1_0)
                                                            (@eq.refl.{v+1}
                                                              (m
                                                                (@prod.{u u} β_1
                                                                  σ))
                                                              (f x_2 x_1_0)))
                                                          (@propext
                                                            (@eq.{v+1}
                                                              (m
                                                                (@prod.{u u} β_1
                                                                  σ))
                                                              (f x_2 x_1_0)
                                                              (f x_2 x_1_0))
                                                            @true
                                                            (@eq_self_iff_true.{v+1}
                                                              (m
                                                                (@prod.{u u} β_1
                                                                  σ))
                                                              (f x_2 x_1_0)))))
                                                      @trivial)) β_0 γ_0
                                                  (g_1 x_1)
                                                  (@function.comp.{u+1 u+1
                                                    (max u
                                                    v)+1} β_0 γ_0
                                                    (@state_t.{u v} σ m inst_1
                                                      γ_0)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1 γ_0) h_1)))))
                                          ((λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @rfl.{(max u v)+1}
                                              (@state_t.{u v} σ m inst_1 β_1)
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_1 β_1 x_1
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_1 β_1
                                                  (@state_t.{u v} σ m inst_1
                                                    β_1)
                                                  (@has_pure.pure.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_pure.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1)) β_1) f))) α_0
                                            γ_0 (λ (x_1 : α_0), h_1 (g_1 x_1))
                                            x_0))
                                        (@eq.symm.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_bind.{u v} σ m inst_1
                                            (∀ (a : α_0), γ_0) γ_0
                                            (@state_t_return.{u v} σ m inst_1
                                              (∀ (a : α_0), γ_0)
                                              (@function.comp.{u+1 u+1 u+1} α_0
                                                β_0 γ_0 h_1 g_1))
                                            (λ (x_1 : (∀ (a : α_0), γ_0)),
                                            (λ (α_1 β_1 : Type u)
                                                (f : (∀ (a : α_1), β_1))
                                                (x_2 :
                                                  @state_t.{u v} σ m inst_1
                                                    α_1),
                                              @state_t_bind.{u v} σ m inst_1 α_1
                                                β_1 x_2
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_1 β_1
                                                  (@state_t.{u v} σ m inst_1
                                                    β_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_1) f)) α_0 γ_0 x_1
                                              x_0))
                                          ((λ (α_1 β_1 : Type u)
                                              (f : (∀ (a : α_1), β_1))
                                              (x_1 :
                                                @state_t.{u v} σ m inst_1 α_1),
                                            @state_t_bind.{u v} σ m inst_1 α_1
                                              β_1 x_1
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_1 β_1
                                                (@state_t.{u v} σ m inst_1 β_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_1) f)) α_0 γ_0
                                            (@function.comp.{u+1 u+1 u+1} α_0
                                              β_0 γ_0 h_1 g_1) x_0)
                                          ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                                              (f :
                                                (∀ (a : α_1),
                                                @state_t.{u v} σ m inst_1 β_1)),
                                            @funext.{u+1 v+1} σ
                                              (λ (x_2 : σ),
                                              m (@prod.{u u} β_1 σ))
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_1 β_1
                                                (@has_pure.pure.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_pure.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1)) α_1 x_1) f)
                                              (f x_1)
                                              (λ (x_1_0 : σ),
                                              @eq.mpr.{0}
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} β_1 σ))
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_1 β_1
                                                    (@has_pure.pure.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_pure.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_return.{u v} σ
                                                          m inst_1)) α_1 x_1) f
                                                    x_1_0) (f x_1 x_1_0)) @true
                                                (@id_locked.{0}
                                                  (@eq.{1} Prop
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} β_1 σ))
                                                      (@has_bind.bind.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_bind.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1)) α_1 β_1
                                                        (@has_pure.pure.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_pure.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_return.{u
                                                              v} σ m inst_1))
                                                          α_1 x_1) f x_1_0)
                                                      (f x_1 x_1_0)) @true)
                                                  (@eq.trans.{1} Prop
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} β_1 σ))
                                                      (@has_bind.bind.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_bind.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1)) α_1 β_1
                                                        (@has_pure.pure.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_pure.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_return.{u
                                                              v} σ m inst_1))
                                                          α_1 x_1) f x_1_0)
                                                      (f x_1 x_1_0))
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} β_1 σ))
                                                      (f x_1 x_1_0)
                                                      (f x_1 x_1_0)) @true
                                                    ((λ (a a_0 :
                                                          m (@prod.{u u} β_1 σ))
                                                        (e_1 :
                                                          @eq.{v+1}
                                                            (m
                                                              (@prod.{u u} β_1
                                                                σ)) a a_0)
                                                        (a_1 a_2 :
                                                          m (@prod.{u u} β_1 σ))
                                                        (e_2 :
                                                          @eq.{v+1}
                                                            (m
                                                              (@prod.{u u} β_1
                                                                σ)) a_1 a_2),
                                                      @congr.{v+1 1}
                                                        (m (@prod.{u u} β_1 σ))
                                                        Prop
                                                        (@eq.{v+1}
                                                          (m
                                                            (@prod.{u u} β_1 σ))
                                                          a)
                                                        (@eq.{v+1}
                                                          (m
                                                            (@prod.{u u} β_1 σ))
                                                          a_0) a_1 a_2
                                                        (@congr_arg.{v+1
                                                          max (v+1)
                                                          1}
                                                          (m
                                                            (@prod.{u u} β_1 σ))
                                                          (∀ (a_3 :
                                                              m
                                                                (@prod.{u u} β_1
                                                                  σ)),
                                                          Prop) a a_0
                                                          (@eq.{v+1}
                                                            (m
                                                              (@prod.{u u} β_1
                                                                σ))) e_1) e_2)
                                                      (@has_bind.bind.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_bind.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1)) α_1 β_1
                                                        (@has_pure.pure.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_pure.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_return.{u
                                                              v} σ m inst_1))
                                                          α_1 x_1) f x_1_0)
                                                      (f x_1 x_1_0)
                                                      (@eq.trans.{v+1}
                                                        (m (@prod.{u u} β_1 σ))
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 α_1 β_1
                                                          (@has_pure.pure.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@has_pure.mk.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@state_t_return.{u
                                                                v} σ m inst_1))
                                                            α_1 x_1) f x_1_0)
                                                        ((λ (s : σ),
                                                          (λ (this :
                                                                m
                                                                  (@prod.{u u}
                                                                    β_1 σ)),
                                                            this)
                                                            (@has_bind.bind.{u
                                                              v} m
                                                              (@monad.to_has_bind.{u
                                                                v} m inst_1)
                                                              (@prod.{u u} α_1
                                                                σ)
                                                              (@prod.{u u} β_1
                                                                σ)
                                                              ((λ (s_0 : σ),
                                                                @return.{u v} m
                                                                  inst_1
                                                                  (@prod.{u u}
                                                                    α_1 σ)
                                                                  (@prod.mk.{u
                                                                    u} α_1 σ x_1
                                                                    s_0)) s)
                                                              (λ (p :
                                                                  @prod.{u u}
                                                                    α_1 σ),
                                                              @state_t_bind._match_1.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 f p)))
                                                          x_1_0) (f x_1 x_1_0)
                                                        (@eq.trans.{v+1}
                                                          (m
                                                            (@prod.{u u} β_1 σ))
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 α_1 β_1
                                                            (@has_pure.pure.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_pure.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_return.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              x_1) f x_1_0)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 α_1 β_1
                                                            (λ (s : σ),
                                                            @return.{u v} m
                                                              inst_1
                                                              (@prod.{u u} α_1
                                                                σ)
                                                              (@prod.mk.{u u}
                                                                α_1 σ x_1 s)) f
                                                            x_1_0)
                                                          ((λ (s : σ),
                                                            (λ (this :
                                                                  m
                                                                    (@prod.{u u}
                                                                      β_1 σ)),
                                                              this)
                                                              (@has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                ((λ (s_0 : σ),
                                                                  @return.{u v}
                                                                    m inst_1
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.mk.{u
                                                                      u} α_1 σ
                                                                      x_1 s_0))
                                                                  s)
                                                                (λ (p :
                                                                    @prod.{u u}
                                                                      α_1 σ),
                                                                @state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 f p)))
                                                            x_1_0)
                                                          ((λ (act act_0 :
                                                                @state_t.{u v} σ
                                                                  m inst_1 α_1)
                                                              (e_1 :
                                                                @eq.{(max u
                                                                  v)+1}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1 α_1)
                                                                  act act_0)
                                                              (act_1 act_2 :
                                                                (∀ (a_1 : α_1),
                                                                @state_t.{u v} σ
                                                                  m inst_1 β_1))
                                                              (e_2 :
                                                                @eq.{max (u+1)
                                                                  ((max u
                                                                  v)+1)}
                                                                  (∀ (a_1 :
                                                                      α_1),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    β_1) act_1
                                                                  act_2)
                                                              (a a_0 : σ)
                                                              (e_3 :
                                                                @eq.{u+1} σ a
                                                                  a_0),
                                                            @congr.{u+1 v+1} σ
                                                              (m
                                                                (@prod.{u u} β_1
                                                                  σ))
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 act
                                                                act_1)
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                α_1 β_1 act_0
                                                                act_2) a a_0
                                                              (@congr.{max (u+1)
                                                                ((max u
                                                                v)+1)
                                                                (max u
                                                                v)+1}
                                                                (∀ (a_1 : α_1),
                                                                @state_t.{u v} σ
                                                                  m inst_1 β_1)
                                                                (@state_t.{u v}
                                                                  σ m inst_1
                                                                  β_1)
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 act)
                                                                (@state_t_bind.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 act_0)
                                                                act_1 act_2
                                                                (@congr_arg.{(max u
                                                                  v)+1
                                                                  max (u+1)
                                                                  ((max u
                                                                  v)+1)}
                                                                  (@state_t.{u
                                                                    v} σ m
                                                                    inst_1 α_1)
                                                                  (∀ (act_3 :
                                                                      (∀ (a_1 :
                                                                          α_1),
                                                                      @state_t.{u
                                                                        v} σ m
                                                                        inst_1
                                                                        β_1)),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    β_1) act
                                                                  act_0
                                                                  (@state_t_bind.{u
                                                                    v} σ m
                                                                    inst_1 α_1
                                                                    β_1) e_1)
                                                                e_2) e_3)
                                                            (@has_pure.pure.{u
                                                              max u
                                                              v}
                                                              (@state_t.{u v} σ
                                                                m inst_1)
                                                              (@has_pure.mk.{u
                                                                max u
                                                                v}
                                                                (@state_t.{u v}
                                                                  σ m inst_1)
                                                                (@state_t_return.{u
                                                                  v} σ m
                                                                  inst_1)) α_1
                                                              x_1)
                                                            (λ (s : σ),
                                                            @return.{u v} m
                                                              inst_1
                                                              (@prod.{u u} α_1
                                                                σ)
                                                              (@prod.mk.{u u}
                                                                α_1 σ x_1 s))
                                                            (@state_t_return.equations._eqn_1.{u
                                                              v} σ m inst_1 α_1
                                                              x_1) f f
                                                            (@eq.refl.{max (u+1)
                                                              ((max u
                                                              v)+1)}
                                                              (∀ (a : α_1),
                                                              @state_t.{u v} σ m
                                                                inst_1 β_1) f)
                                                            x_1_0 x_1_0
                                                            (@eq.refl.{u+1} σ
                                                              x_1_0))
                                                          (@congr_fun.{u+1 v+1}
                                                            σ
                                                            (λ (a : σ),
                                                            m
                                                              (@prod.{u u} β_1
                                                                σ))
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1 α_1 β_1
                                                              (λ (s : σ),
                                                              @return.{u v} m
                                                                inst_1
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.mk.{u u}
                                                                  α_1 σ x_1 s))
                                                              f)
                                                            (λ (s : σ),
                                                            (λ (this :
                                                                  m
                                                                    (@prod.{u u}
                                                                      β_1 σ)),
                                                              this)
                                                              (@has_bind.bind.{u
                                                                v} m
                                                                (@monad.to_has_bind.{u
                                                                  v} m inst_1)
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.{u u} β_1
                                                                  σ)
                                                                ((λ (s_0 : σ),
                                                                  @return.{u v}
                                                                    m inst_1
                                                                    (@prod.{u u}
                                                                      α_1 σ)
                                                                    (@prod.mk.{u
                                                                      u} α_1 σ
                                                                      x_1 s_0))
                                                                  s)
                                                                (λ (p :
                                                                    @prod.{u u}
                                                                      α_1 σ),
                                                                @state_t_bind._match_1.{u
                                                                  v} σ m inst_1
                                                                  α_1 β_1 f p)))
                                                            (@state_t_bind.equations._eqn_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1
                                                              (λ (s : σ),
                                                              @return.{u v} m
                                                                inst_1
                                                                (@prod.{u u} α_1
                                                                  σ)
                                                                (@prod.mk.{u u}
                                                                  α_1 σ x_1 s))
                                                              f) x_1_0))
                                                        (@eq.trans.{v+1}
                                                          (m
                                                            (@prod.{u u} β_1 σ))
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} β_1 σ)
                                                            (@has_pure.pure.{u
                                                              v} m
                                                              (@applicative.to_has_pure.{u
                                                                v} m
                                                                (@monad.to_applicative.{u
                                                                  v} m inst_1))
                                                              (@prod.{u u} α_1
                                                                σ)
                                                              (@prod.mk.{u u}
                                                                α_1 σ x_1
                                                                x_1_0))
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1 f))
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            β_1 f
                                                            (@prod.mk.{u u} α_1
                                                              σ x_1 x_1_0))
                                                          (f x_1 x_1_0)
                                                          (@monad.pure_bind.{u
                                                            v} m inst_1
                                                            (@prod.{u u} α_1 σ)
                                                            (@prod.{u u} β_1 σ)
                                                            (@prod.mk.{u u} α_1
                                                              σ x_1 x_1_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_1
                                                              β_1 f))
                                                          (@state_t_bind._match_1.equations._eqn_1.{v
                                                            u} σ m inst_1 α_1
                                                            β_1 f x_1 x_1_0)))
                                                      (f x_1 x_1_0)
                                                      (f x_1 x_1_0)
                                                      (@eq.refl.{v+1}
                                                        (m (@prod.{u u} β_1 σ))
                                                        (f x_1 x_1_0)))
                                                    (@propext
                                                      (@eq.{v+1}
                                                        (m (@prod.{u u} β_1 σ))
                                                        (f x_1 x_1_0)
                                                        (f x_1 x_1_0)) @true
                                                      (@eq_self_iff_true.{v+1}
                                                        (m (@prod.{u u} β_1 σ))
                                                        (f x_1 x_1_0)))))
                                                @trivial)) (∀ (a : α_0), γ_0)
                                            γ_0
                                            (@function.comp.{u+1 u+1 u+1} α_0
                                              β_0 γ_0 h_1 g_1)
                                            (λ (x_1 : (∀ (a : α_0), γ_0)),
                                            (λ (α_1 β_1 : Type u)
                                                (f : (∀ (a : α_1), β_1))
                                                (x_2 :
                                                  @state_t.{u v} σ m inst_1
                                                    α_1),
                                              @state_t_bind.{u v} σ m inst_1 α_1
                                                β_1 x_2
                                                (@function.comp.{u+1 u+1
                                                  (max u
                                                  v)+1} α_1 β_1
                                                  (@state_t.{u v} σ m inst_1
                                                    β_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1 β_1) f)) α_0 γ_0 x_1
                                              x_0)))))))
                                (@eq.symm.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 γ_0)
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), γ_0) γ_0
                                    (@state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) g_0
                                      (@function.comp.{u+1 u+1 (max u v)+1}
                                        (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                        (@state_t.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0))
                                        (@state_t_return.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0))
                                        (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                          γ_0 h_1)))
                                    (λ (x_1 : (∀ (a : α_0), γ_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) α_0 γ_0 x_1 x_0))
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) γ_0 g_0
                                    (λ (g_1 : (∀ (a : α_0), β_0)),
                                    @state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0) γ_0
                                      (@state_t_return.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0)
                                        (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                          γ_0 h_1 g_1))
                                      (λ (x_1 : (∀ (a : α_0), γ_0)),
                                      (λ (α_1 β_1 : Type u)
                                          (f : (∀ (a : α_1), β_1))
                                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_2
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f)) α_0 γ_0 x_1 x_0)))
                                  ((λ (α_1 β_1 γ_1 : Type u)
                                      (x_1 : @state_t.{u v} σ m inst_1 α_1)
                                      (f :
                                        (∀ (a : α_1),
                                        @state_t.{u v} σ m inst_1 β_1))
                                      (g_1 :
                                        (∀ (a : β_1),
                                        @state_t.{u v} σ m inst_1 γ_1)),
                                    @funext.{u+1 v+1} σ
                                      (λ (x_2 : σ), m (@prod.{u u} γ_1 σ))
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) β_1
                                        γ_1
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_1 β_1 x_1 f) g_1)
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_1
                                        γ_1 x_1
                                        (λ (x_2 : α_1),
                                        @has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          β_1 γ_1 (f x_2) g_1))
                                      (λ (x_1_0 : σ),
                                      @eq.mpr.{0}
                                        (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            β_1 γ_1
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 β_1 x_1 f) g_1
                                            x_1_0)
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_1 γ_1 x_1
                                            (λ (x_2 : α_1),
                                            @has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) β_1 γ_1 (f x_2) g_1)
                                            x_1_0))
                                        (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_1 σ)
                                            (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                            (λ (x_2 : @prod.{u u} α_1 σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_1 σ)
                                              (@prod.{u u} γ_1 σ)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 β_1 f x_2)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_1 γ_1 g_1)))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_1 σ)
                                            (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 γ_1
                                              (λ (x_2 : α_1) (s : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ) (f x_2 s)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1)))))
                                        (@id_locked.{0}
                                          (@eq.{1} Prop
                                            (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) β_1 γ_1
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) α_1 β_1 x_1 f)
                                                g_1 x_1_0)
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_1 γ_1 x_1
                                                (λ (x_2 : α_1),
                                                @has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_1 γ_1 (f x_2)
                                                  g_1) x_1_0))
                                            (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_1 σ)
                                                (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                                (λ (x_2 : @prod.{u u} α_1 σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f x_2)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1)))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_1 σ)
                                                (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 γ_1
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1))))))
                                          ((λ (a a_0 : m (@prod.{u u} γ_1 σ))
                                              (e_1 :
                                                @eq.{v+1}
                                                  (m (@prod.{u u} γ_1 σ)) a a_0)
                                              (a_1 a_2 : m (@prod.{u u} γ_1 σ))
                                              (e_2 :
                                                @eq.{v+1}
                                                  (m (@prod.{u u} γ_1 σ)) a_1
                                                  a_2),
                                            @congr.{v+1 1}
                                              (m (@prod.{u u} γ_1 σ)) Prop
                                              (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                                a)
                                              (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                                a_0) a_1 a_2
                                              (@congr_arg.{v+1 max (v+1) 1}
                                                (m (@prod.{u u} γ_1 σ))
                                                (∀ (a_3 :
                                                    m (@prod.{u u} γ_1 σ)),
                                                Prop) a a_0
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} γ_1 σ))) e_1)
                                              e_2)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) β_1 γ_1
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_1 β_1 x_1 f) g_1
                                              x_1_0)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                              (λ (x_2 : @prod.{u u} α_1 σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 β_1 f x_2)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1)))
                                            (@eq.trans.{v+1}
                                              (m (@prod.{u u} γ_1 σ))
                                              (@state_t_bind.{u v} σ m inst_1
                                                β_1 γ_1
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) α_1 β_1 x_1 f)
                                                g_1 x_1_0)
                                              ((λ (s : σ),
                                                (λ (this :
                                                      m (@prod.{u u} γ_1 σ)),
                                                  this)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    ((λ (s_0 : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.{u u} β_1 σ)
                                                        (x_1 s_0)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_1 β_1
                                                          f)) s)
                                                    (λ (p : @prod.{u u} β_1 σ),
                                                    @state_t_bind._match_1.{u v}
                                                      σ m inst_1 β_1 γ_1 g_1
                                                      p))) x_1_0)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_1 σ)
                                                (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                                (λ (x_2 : @prod.{u u} α_1 σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f x_2)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1)))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} γ_1 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  β_1 γ_1
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_1 β_1 x_1 f)
                                                  g_1 x_1_0)
                                                (@state_t_bind.{u v} σ m inst_1
                                                  β_1 γ_1
                                                  (λ (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.{u u} β_1 σ) (x_1 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_1 β_1 f))
                                                  g_1 x_1_0)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      ((λ (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.{u u} β_1 σ)
                                                          (x_1 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            β_1 f)) s)
                                                      (λ (p :
                                                          @prod.{u u} β_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1 p))) x_1_0)
                                                ((λ (act act_0 :
                                                      @state_t.{u v} σ m inst_1
                                                        β_1)
                                                    (e_1 :
                                                      @eq.{(max u v)+1}
                                                        (@state_t.{u v} σ m
                                                          inst_1 β_1) act act_0)
                                                    (act_1 act_2 :
                                                      (∀ (a_1 : β_1),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1))
                                                    (e_2 :
                                                      @eq.{max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (∀ (a_1 : β_1),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_1) act_1
                                                        act_2) (a a_0 : σ)
                                                    (e_3 : @eq.{u+1} σ a a_0),
                                                  @congr.{u+1 v+1} σ
                                                    (m (@prod.{u u} γ_1 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 β_1 γ_1 act act_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 β_1 γ_1 act_0
                                                      act_2) a a_0
                                                    (@congr.{max (u+1)
                                                      ((max u
                                                      v)+1) (max u v)+1}
                                                      (∀ (a_1 : β_1),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1)
                                                      (@state_t.{u v} σ m inst_1
                                                        γ_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 β_1 γ_1 act)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 β_1 γ_1 act_0)
                                                      act_1 act_2
                                                      (@congr_arg.{(max u
                                                        v)+1
                                                        max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (@state_t.{u v} σ m
                                                          inst_1 β_1)
                                                        (∀ (act_3 :
                                                            (∀ (a_1 : β_1),
                                                            @state_t.{u v} σ m
                                                              inst_1 γ_1)),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_1) act act_0
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 β_1 γ_1) e_1)
                                                      e_2) e_3)
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_1 β_1 x_1 f)
                                                  (λ (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.{u u} β_1 σ) (x_1 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_1 β_1 f))
                                                  (@state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 α_1 β_1 x_1 f)
                                                  g_1 g_1
                                                  (@eq.refl.{max (u+1)
                                                    ((max u
                                                    v)+1)}
                                                    (∀ (a : β_1),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_1) g_1) x_1_0 x_1_0
                                                  (@eq.refl.{u+1} σ x_1_0))
                                                (@congr_fun.{u+1 v+1} σ
                                                  (λ (a : σ),
                                                  m (@prod.{u u} γ_1 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_1 γ_1
                                                    (λ (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} β_1 σ)
                                                      (x_1 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 β_1
                                                        f)) g_1)
                                                  (λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      ((λ (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.{u u} β_1 σ)
                                                          (x_1 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_1
                                                            β_1 f)) s)
                                                      (λ (p :
                                                          @prod.{u u} β_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1 p)))
                                                  (@state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 β_1 γ_1
                                                    (λ (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} β_1 σ)
                                                      (x_1 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 β_1
                                                        f)) g_1) x_1_0))
                                              (@monad.bind_assoc.{u v} m inst_1
                                                (@prod.{u u} α_1 σ)
                                                (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 β_1 f)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1)))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 γ_1 x_1
                                              (λ (x_2 : α_1),
                                              @has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) β_1 γ_1 (f x_2)
                                                g_1) x_1_0)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 γ_1
                                                (λ (x_2 : α_1) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1))))
                                            (@eq.trans.{v+1}
                                              (m (@prod.{u u} γ_1 σ))
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_1 γ_1 x_1
                                                (λ (x_2 : α_1),
                                                @has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_1 γ_1 (f x_2)
                                                  g_1) x_1_0)
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_1 γ_1 x_1
                                                (λ (x_2 : α_1) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1))
                                                x_1_0)
                                              ((λ (s : σ),
                                                (λ (this :
                                                      m (@prod.{u u} γ_1 σ)),
                                                  this)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.{u u} γ_1 σ) (x_1 s)
                                                    (λ (p : @prod.{u u} α_1 σ),
                                                    @state_t_bind._match_1.{u v}
                                                      σ m inst_1 α_1 γ_1
                                                      (λ (x_2 : α_1) (s_0 : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (f x_2 s_0)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_1 γ_1
                                                          g_1)) p))) x_1_0)
                                              ((λ (act act_0 :
                                                    @state_t.{u v} σ m inst_1
                                                      α_1)
                                                  (e_1 :
                                                    @eq.{(max u v)+1}
                                                      (@state_t.{u v} σ m inst_1
                                                        α_1) act act_0)
                                                  (act_1 act_2 :
                                                    (∀ (a_1 : α_1),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_1))
                                                  (e_2 :
                                                    @eq.{max (u+1)
                                                      ((max u
                                                      v)+1)}
                                                      (∀ (a_1 : α_1),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1) act_1 act_2)
                                                  (a a_0 : σ)
                                                  (e_3 : @eq.{u+1} σ a a_0),
                                                @congr.{u+1 v+1} σ
                                                  (m (@prod.{u u} γ_1 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 α_1 γ_1 act act_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 α_1 γ_1 act_0 act_2)
                                                  a a_0
                                                  (@congr.{max (u+1)
                                                    ((max u
                                                    v)+1) (max u v)+1}
                                                    (∀ (a_1 : α_1),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_1)
                                                    (@state_t.{u v} σ m inst_1
                                                      γ_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_1 γ_1 act)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_1 γ_1 act_0)
                                                    act_1 act_2
                                                    (@congr_arg.{(max u
                                                      v)+1
                                                      max (u+1)
                                                      ((max u
                                                      v)+1)}
                                                      (@state_t.{u v} σ m inst_1
                                                        α_1)
                                                      (∀ (act_3 :
                                                          (∀ (a_1 : α_1),
                                                          @state_t.{u v} σ m
                                                            inst_1 γ_1)),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_1) act act_0
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_1 γ_1) e_1)
                                                    e_2) e_3) x_1 x_1
                                                (@eq.refl.{(max u v)+1}
                                                  (@state_t.{u v} σ m inst_1
                                                    α_1) x_1)
                                                (λ (x_2 : α_1),
                                                @has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_1 γ_1 (f x_2)
                                                  g_1)
                                                (λ (x_2 : α_1) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1))
                                                (@funext.{u+1 (max u v)+1} α_1
                                                  (λ (x_2 : α_1),
                                                  @state_t.{u v} σ m inst_1 γ_1)
                                                  (λ (x_2 : α_1),
                                                  @state_t_bind.{u v} σ m inst_1
                                                    β_1 γ_1 (f x_2) g_1)
                                                  (λ (x_2 : α_1) (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_1 σ)
                                                      (@prod.{u u} γ_1 σ)
                                                      (f x_2 s)
                                                      (λ (p :
                                                          @prod.{u u} β_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_1 γ_1
                                                        g_1 p)))
                                                  (λ (x_2 : α_1),
                                                  @state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 β_1 γ_1
                                                    (f x_2) g_1)) x_1_0 x_1_0
                                                (@eq.refl.{u+1} σ x_1_0))
                                              (@congr_fun.{u+1 v+1} σ
                                                (λ (a : σ),
                                                m (@prod.{u u} γ_1 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_1 γ_1 x_1
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1)))
                                                (λ (s : σ),
                                                (λ (this :
                                                      m (@prod.{u u} γ_1 σ)),
                                                  this)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.{u u} γ_1 σ) (x_1 s)
                                                    (λ (p : @prod.{u u} α_1 σ),
                                                    @state_t_bind._match_1.{u v}
                                                      σ m inst_1 α_1 γ_1
                                                      (λ (x_2 : α_1) (s_0 : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_1 σ)
                                                        (@prod.{u u} γ_1 σ)
                                                        (f x_2 s_0)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_1 γ_1
                                                          g_1)) p)))
                                                (@state_t_bind.equations._eqn_1.{u
                                                  v} σ m inst_1 α_1 γ_1 x_1
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1))) x_1_0))))
                                        (@congr_arg.{max (u+1) (v+1) v+1}
                                          (∀ (x_2 : @prod.{u u} α_1 σ),
                                          m (@prod.{u u} γ_1 σ))
                                          (m (@prod.{u u} γ_1 σ))
                                          (λ (x_2 : @prod.{u u} α_1 σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_1 σ)
                                            (@prod.{u u} γ_1 σ)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 β_1 f x_2)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_1 γ_1 g_1))
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_1 γ_1
                                            (λ (x_2 : α_1) (s : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_1 σ)
                                              (@prod.{u u} γ_1 σ) (f x_2 s)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_1 γ_1 g_1)))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_1 σ)
                                            (@prod.{u u} γ_1 σ) (x_1 x_1_0))
                                          (@funext.{u+1 v+1} (@prod.{u u} α_1 σ)
                                            (λ (x_2 : @prod.{u u} α_1 σ),
                                            m (@prod.{u u} γ_1 σ))
                                            (λ (x_2 : @prod.{u u} α_1 σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_1 σ)
                                              (@prod.{u u} γ_1 σ)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 β_1 f x_2)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_1 γ_1 g_1))
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 γ_1
                                              (λ (x_2 : α_1) (s : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_1 σ)
                                                (@prod.{u u} γ_1 σ) (f x_2 s)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_1 γ_1 g_1)))
                                            (λ (r : @prod.{u u} α_1 σ),
                                            @prod.cases_on.{0 u u} α_1 σ
                                              (λ (r_0 : @prod.{u u} α_1 σ),
                                              @eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f r_0)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1 g_1))
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 γ_1
                                                  (λ (x_2 : α_1) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_1 σ)
                                                    (@prod.{u u} γ_1 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_1 γ_1
                                                      g_1)) r_0)) r
                                              (λ (fst : α_1) (snd : σ),
                                              @eq.refl.{v+1}
                                                (m (@prod.{u u} γ_1 σ))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_1 σ)
                                                  (@prod.{u u} γ_1 σ)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f
                                                    (@prod.mk.{u u} α_1 σ fst
                                                      snd))
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_1 γ_1
                                                    g_1))))))))
                                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) γ_0
                                    g_0
                                    (@function.comp.{u+1 u+1 (max u v)+1}
                                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                      (@state_t.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0))
                                      (@state_t_return.{u v} σ m inst_1
                                        (∀ (a : α_0), γ_0))
                                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                        h_1))
                                    (λ (x_1 : (∀ (a : α_0), γ_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) α_0 γ_0 x_1 x_0))))
                              (@eq.rec.{0 (max u v)+1}
                                (@state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0))
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) g_0
                                  (@function.comp.{u+1 u+1 (max u v)+1}
                                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                    (@state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0))
                                    (@state_t_return.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0))
                                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                      h_1)))
                                (λ (x_1 :
                                    @state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), γ_0)),
                                @eq.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 γ_0)
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), γ_0) γ_0
                                    (@state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) g_0
                                      (@function.comp.{u+1 u+1 (max u v)+1}
                                        (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                        (@state_t.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0))
                                        (@state_t_return.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0))
                                        (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                          γ_0 h_1)))
                                    (λ (x_2 : (∀ (a : α_0), γ_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) α_0 γ_0 x_2 x_0))
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), γ_0) γ_0 x_1
                                    (λ (x_2 : (∀ (a : α_0), γ_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) α_0 γ_0 x_2 x_0)))
                                (@rfl.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 γ_0)
                                  (@state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), γ_0) γ_0
                                    (@state_t_bind.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) g_0
                                      (@function.comp.{u+1 u+1 (max u v)+1}
                                        (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                        (@state_t.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0))
                                        (@state_t_return.{u v} σ m inst_1
                                          (∀ (a : α_0), γ_0))
                                        (@function.comp.{u+1 u+1 u+1} α_0 β_0
                                          γ_0 h_1)))
                                    (λ (x_1 : (∀ (a : α_0), γ_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f)) α_0 γ_0 x_1 x_0)))
                                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1)
                                  g_0)
                                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                  @rfl.{(max u v)+1}
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_1
                                      β_1 x_1
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@has_pure.pure.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_pure.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_return.{u v} σ m inst_1))
                                          β_1) f))) (∀ (a : α_0), β_0)
                                  (∀ (a : α_0), γ_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1)
                                  g_0)))
                            (@eq.rec.{0 (max u v)+1}
                              (@state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0))
                              ((λ (x_1 :
                                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                    γ_0)),
                                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)
                                (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                              (λ (x_1 :
                                  @state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0)),
                              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), γ_0) γ_0
                                  ((λ (α_1 β_1 : Type u)
                                      (f : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) (∀ (a : α_0), β_0)
                                    (∀ (a : α_0), γ_0)
                                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                      h_1) g_0)
                                  (λ (x_2 : (∀ (a : α_0), γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_3 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) α_0 γ_0 x_2 x_0))
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), γ_0) γ_0 x_1
                                  (λ (x_2 : (∀ (a : α_0), γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_3 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) α_0 γ_0 x_2 x_0)))
                              (@rfl.{(max u v)+1}
                                (@state_t.{u v} σ m inst_1 γ_0)
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), γ_0) γ_0
                                  ((λ (α_1 β_1 : Type u)
                                      (f : (∀ (a : α_1), β_1))
                                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) (∀ (a : α_0), β_0)
                                    (∀ (a : α_0), γ_0)
                                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                      h_1) g_0)
                                  (λ (x_1 : (∀ (a : α_0), γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) α_0 γ_0 x_1 x_0)))
                              (@state_t_bind.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                                (∀ (a : α_0), γ_0)
                                (@state_t_return.{u v} σ m inst_1
                                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                  γ_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                    h_1))
                                (λ (x_1 :
                                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                    γ_0)),
                                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1
                                  g_0))
                              (@eq.symm.{(max u v)+1}
                                (@state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0))
                                (@state_t_bind.{u v} σ m inst_1
                                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                  γ_0) (∀ (a : α_0), γ_0)
                                  (@state_t_return.{u v} σ m inst_1
                                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                    γ_0)
                                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                      h_1))
                                  (λ (x_1 :
                                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                      γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) (∀ (a : α_0), β_0)
                                    (∀ (a : α_0), γ_0) x_1 g_0))
                                ((λ (x_1 :
                                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                      γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) (∀ (a : α_0), β_0)
                                    (∀ (a : α_0), γ_0) x_1 g_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0
                                    h_1))
                                ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                                    (f :
                                      (∀ (a : α_1),
                                      @state_t.{u v} σ m inst_1 β_1)),
                                  @funext.{u+1 v+1} σ
                                    (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_1
                                      β_1
                                      (@has_pure.pure.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_pure.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_return.{u v} σ m inst_1))
                                        α_1 x_1) f) (f x_1)
                                    (λ (x_1_0 : σ),
                                    @eq.mpr.{0}
                                      (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_1 β_1
                                          (@has_pure.pure.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_pure.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_return.{u v} σ m
                                                inst_1)) α_1 x_1) f x_1_0)
                                        (f x_1 x_1_0)) @true
                                      (@id_locked.{0}
                                        (@eq.{1} Prop
                                          (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 β_1
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) α_1 x_1) f x_1_0)
                                            (f x_1 x_1_0)) @true)
                                        (@eq.trans.{1} Prop
                                          (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 β_1
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) α_1 x_1) f x_1_0)
                                            (f x_1 x_1_0))
                                          (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                            (f x_1 x_1_0) (f x_1 x_1_0)) @true
                                          ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                                              (e_1 :
                                                @eq.{v+1}
                                                  (m (@prod.{u u} β_1 σ)) a a_0)
                                              (a_1 a_2 : m (@prod.{u u} β_1 σ))
                                              (e_2 :
                                                @eq.{v+1}
                                                  (m (@prod.{u u} β_1 σ)) a_1
                                                  a_2),
                                            @congr.{v+1 1}
                                              (m (@prod.{u u} β_1 σ)) Prop
                                              (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                                a)
                                              (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                                a_0) a_1 a_2
                                              (@congr_arg.{v+1 max (v+1) 1}
                                                (m (@prod.{u u} β_1 σ))
                                                (∀ (a_3 :
                                                    m (@prod.{u u} β_1 σ)),
                                                Prop) a a_0
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} β_1 σ))) e_1)
                                              e_2)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_1 β_1
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) α_1 x_1) f x_1_0)
                                            (f x_1 x_1_0)
                                            (@eq.trans.{v+1}
                                              (m (@prod.{u u} β_1 σ))
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_1 β_1
                                                (@has_pure.pure.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_pure.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1)) α_1 x_1) f x_1_0)
                                              ((λ (s : σ),
                                                (λ (this :
                                                      m (@prod.{u u} β_1 σ)),
                                                  this)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.{u u} β_1 σ)
                                                    ((λ (s_0 : σ),
                                                      @return.{u v} m inst_1
                                                        (@prod.{u u} α_1 σ)
                                                        (@prod.mk.{u u} α_1 σ
                                                          x_1 s_0)) s)
                                                    (λ (p : @prod.{u u} α_1 σ),
                                                    @state_t_bind._match_1.{u v}
                                                      σ m inst_1 α_1 β_1 f p)))
                                                x_1_0) (f x_1 x_1_0)
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} β_1 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_1 β_1
                                                  (@has_pure.pure.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_pure.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1)) α_1 x_1) f
                                                  x_1_0)
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_1 β_1
                                                  (λ (s : σ),
                                                  @return.{u v} m inst_1
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.mk.{u u} α_1 σ x_1
                                                      s)) f x_1_0)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} β_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} β_1 σ)
                                                      ((λ (s_0 : σ),
                                                        @return.{u v} m inst_1
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.mk.{u u} α_1 σ
                                                            x_1 s_0)) s)
                                                      (λ (p :
                                                          @prod.{u u} α_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 β_1 f
                                                        p))) x_1_0)
                                                ((λ (act act_0 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_1)
                                                    (e_1 :
                                                      @eq.{(max u v)+1}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_1) act act_0)
                                                    (act_1 act_2 :
                                                      (∀ (a_1 : α_1),
                                                      @state_t.{u v} σ m inst_1
                                                        β_1))
                                                    (e_2 :
                                                      @eq.{max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (∀ (a_1 : α_1),
                                                        @state_t.{u v} σ m
                                                          inst_1 β_1) act_1
                                                        act_2) (a a_0 : σ)
                                                    (e_3 : @eq.{u+1} σ a a_0),
                                                  @congr.{u+1 v+1} σ
                                                    (m (@prod.{u u} β_1 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_1 β_1 act act_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_1 β_1 act_0
                                                      act_2) a a_0
                                                    (@congr.{max (u+1)
                                                      ((max u
                                                      v)+1) (max u v)+1}
                                                      (∀ (a_1 : α_1),
                                                      @state_t.{u v} σ m inst_1
                                                        β_1)
                                                      (@state_t.{u v} σ m inst_1
                                                        β_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_1 β_1 act)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_1 β_1 act_0)
                                                      act_1 act_2
                                                      (@congr_arg.{(max u
                                                        v)+1
                                                        max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_1)
                                                        (∀ (act_3 :
                                                            (∀ (a_1 : α_1),
                                                            @state_t.{u v} σ m
                                                              inst_1 β_1)),
                                                        @state_t.{u v} σ m
                                                          inst_1 β_1) act act_0
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 α_1 β_1) e_1)
                                                      e_2) e_3)
                                                  (@has_pure.pure.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_pure.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1)) α_1 x_1)
                                                  (λ (s : σ),
                                                  @return.{u v} m inst_1
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.mk.{u u} α_1 σ x_1
                                                      s))
                                                  (@state_t_return.equations._eqn_1.{u
                                                    v} σ m inst_1 α_1 x_1) f f
                                                  (@eq.refl.{max (u+1)
                                                    ((max u
                                                    v)+1)}
                                                    (∀ (a : α_1),
                                                    @state_t.{u v} σ m inst_1
                                                      β_1) f) x_1_0 x_1_0
                                                  (@eq.refl.{u+1} σ x_1_0))
                                                (@congr_fun.{u+1 v+1} σ
                                                  (λ (a : σ),
                                                  m (@prod.{u u} β_1 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 α_1 β_1
                                                    (λ (s : σ),
                                                    @return.{u v} m inst_1
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.mk.{u u} α_1 σ x_1
                                                        s)) f)
                                                  (λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} β_1 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.{u u} β_1 σ)
                                                      ((λ (s_0 : σ),
                                                        @return.{u v} m inst_1
                                                          (@prod.{u u} α_1 σ)
                                                          (@prod.mk.{u u} α_1 σ
                                                            x_1 s_0)) s)
                                                      (λ (p :
                                                          @prod.{u u} α_1 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_1 β_1 f
                                                        p)))
                                                  (@state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 α_1 β_1
                                                    (λ (s : σ),
                                                    @return.{u v} m inst_1
                                                      (@prod.{u u} α_1 σ)
                                                      (@prod.mk.{u u} α_1 σ x_1
                                                        s)) f) x_1_0))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} β_1 σ))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_1 σ)
                                                  (@prod.{u u} β_1 σ)
                                                  (@has_pure.pure.{u v} m
                                                    (@applicative.to_has_pure.{u
                                                      v} m
                                                      (@monad.to_applicative.{u
                                                        v} m inst_1))
                                                    (@prod.{u u} α_1 σ)
                                                    (@prod.mk.{u u} α_1 σ x_1
                                                      x_1_0))
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f))
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_1 β_1 f
                                                  (@prod.mk.{u u} α_1 σ x_1
                                                    x_1_0)) (f x_1 x_1_0)
                                                (@monad.pure_bind.{u v} m inst_1
                                                  (@prod.{u u} α_1 σ)
                                                  (@prod.{u u} β_1 σ)
                                                  (@prod.mk.{u u} α_1 σ x_1
                                                    x_1_0)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_1 β_1 f))
                                                (@state_t_bind._match_1.equations._eqn_1.{v
                                                  u} σ m inst_1 α_1 β_1 f x_1
                                                  x_1_0))) (f x_1 x_1_0)
                                            (f x_1 x_1_0)
                                            (@eq.refl.{v+1}
                                              (m (@prod.{u u} β_1 σ))
                                              (f x_1 x_1_0)))
                                          (@propext
                                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                                              (f x_1 x_1_0) (f x_1 x_1_0)) @true
                                            (@eq_self_iff_true.{v+1}
                                              (m (@prod.{u u} β_1 σ))
                                              (f x_1 x_1_0))))) @trivial))
                                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                  γ_0) (∀ (a : α_0), γ_0)
                                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1)
                                  (λ (x_1 :
                                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                      γ_0)),
                                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f)) (∀ (a : α_0), β_0)
                                    (∀ (a : α_0), γ_0) x_1 g_0))))))))
                    (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                          (∀ (a : α_0), γ_0) h_0
                          (λ (h_1 : (∀ (a : β_0), γ_0)),
                          @state_t_bind.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (∀ (a : α_0), γ_0)
                            (@state_t_return.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                            (λ (x_1 :
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                γ_0)),
                            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f))
                              (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)))
                        (λ (x_1 : (∀ (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                          x_1 x_0))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0) γ_0 h_0
                        (λ (h_1 : (∀ (a : β_0), γ_0)),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                          (@state_t_bind.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (∀ (a : α_0), γ_0)
                            (@state_t_return.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                            (λ (x_1 :
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0),
                                γ_0)),
                            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f))
                              (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                          (λ (x_1 : (∀ (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
                            γ_0 x_1 x_0)))
                      ((λ (α_1 β_1 γ_1 : Type u)
                          (x_1 : @state_t.{u v} σ m inst_1 α_1)
                          (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1))
                          (g_1 : (∀ (a : β_1), @state_t.{u v} σ m inst_1 γ_1)),
                        @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} γ_1 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1 f)
                            g_1)
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1 x_1
                            (λ (x_2 : α_1),
                            @has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                              (f x_2) g_1))
                          (λ (x_1_0 : σ),
                          @eq.mpr.{0}
                            (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                  x_1 f) g_1 x_1_0)
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1 x_1
                                (λ (x_2 : α_1),
                                @has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                  (f x_2) g_1) x_1_0))
                            (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                (x_1 x_1_0)
                                (λ (x_2 : @prod.{u u} α_1 σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f x_2)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1)))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                (x_1 x_1_0)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                                  (λ (x_2 : α_1) (s : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (f x_2 s)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))))
                            (@id_locked.{0}
                              (@eq.{1} Prop
                                (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_1
                                      β_1 x_1 f) g_1 x_1_0)
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1
                                    x_1
                                    (λ (x_2 : α_1),
                                    @has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_1
                                      γ_1 (f x_2) g_1) x_1_0))
                                (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                    (x_1 x_1_0)
                                    (λ (x_2 : @prod.{u u} α_1 σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f x_2)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1)))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                    (x_1 x_1_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      γ_1
                                      (λ (x_2 : α_1) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1))))))
                              ((λ (a a_0 : m (@prod.{u u} γ_1 σ))
                                  (e_1 :
                                    @eq.{v+1} (m (@prod.{u u} γ_1 σ)) a a_0)
                                  (a_1 a_2 : m (@prod.{u u} γ_1 σ))
                                  (e_2 :
                                    @eq.{v+1} (m (@prod.{u u} γ_1 σ)) a_1 a_2),
                                @congr.{v+1 1} (m (@prod.{u u} γ_1 σ)) Prop
                                  (@eq.{v+1} (m (@prod.{u u} γ_1 σ)) a)
                                  (@eq.{v+1} (m (@prod.{u u} γ_1 σ)) a_0) a_1
                                  a_2
                                  (@congr_arg.{v+1 max (v+1) 1}
                                    (m (@prod.{u u} γ_1 σ))
                                    (∀ (a_3 : m (@prod.{u u} γ_1 σ)), Prop) a
                                    a_0 (@eq.{v+1} (m (@prod.{u u} γ_1 σ))) e_1)
                                  e_2)
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                    x_1 f) g_1 x_1_0)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                  (x_1 x_1_0)
                                  (λ (x_2 : @prod.{u u} α_1 σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f x_2)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))
                                (@eq.trans.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_1
                                      β_1 x_1 f) g_1 x_1_0)
                                  ((λ (s : σ),
                                    (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        ((λ (s_0 : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_1 σ)
                                            (@prod.{u u} β_1 σ) (x_1 s_0)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 β_1 f)) s)
                                        (λ (p : @prod.{u u} β_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1 p))) x_1_0)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                    (x_1 x_1_0)
                                    (λ (x_2 : @prod.{u u} α_1 σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f x_2)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1)))
                                  (@eq.trans.{v+1} (m (@prod.{u u} γ_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_1
                                        β_1 x_1 f) g_1 x_1_0)
                                    (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                      (λ (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        (x_1 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f)) g_1 x_1_0)
                                    ((λ (s : σ),
                                      (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_1 σ)
                                          (@prod.{u u} γ_1 σ)
                                          ((λ (s_0 : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} β_1 σ) (x_1 s_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 β_1 f)) s)
                                          (λ (p : @prod.{u u} β_1 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 β_1 γ_1 g_1 p))) x_1_0)
                                    ((λ (act act_0 :
                                          @state_t.{u v} σ m inst_1 β_1)
                                        (e_1 :
                                          @eq.{(max u v)+1}
                                            (@state_t.{u v} σ m inst_1 β_1) act
                                            act_0)
                                        (act_1 act_2 :
                                          (∀ (a_1 : β_1),
                                          @state_t.{u v} σ m inst_1 γ_1))
                                        (e_2 :
                                          @eq.{max (u+1) ((max u v)+1)}
                                            (∀ (a_1 : β_1),
                                            @state_t.{u v} σ m inst_1 γ_1) act_1
                                            act_2) (a a_0 : σ)
                                        (e_3 : @eq.{u+1} σ a a_0),
                                      @congr.{u+1 v+1} σ (m (@prod.{u u} γ_1 σ))
                                        (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                          act act_1)
                                        (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                          act_0 act_2) a a_0
                                        (@congr.{max (u+1)
                                          ((max u
                                          v)+1) (max u v)+1}
                                          (∀ (a_1 : β_1),
                                          @state_t.{u v} σ m inst_1 γ_1)
                                          (@state_t.{u v} σ m inst_1 γ_1)
                                          (@state_t_bind.{u v} σ m inst_1 β_1
                                            γ_1 act)
                                          (@state_t_bind.{u v} σ m inst_1 β_1
                                            γ_1 act_0) act_1 act_2
                                          (@congr_arg.{(max u
                                            v)+1 max (u+1) ((max u v)+1)}
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (∀ (act_3 :
                                                (∀ (a_1 : β_1),
                                                @state_t.{u v} σ m inst_1 γ_1)),
                                            @state_t.{u v} σ m inst_1 γ_1) act
                                            act_0
                                            (@state_t_bind.{u v} σ m inst_1 β_1
                                              γ_1) e_1) e_2) e_3)
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_1
                                        β_1 x_1 f)
                                      (λ (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        (x_1 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f))
                                      (@state_t_bind.equations._eqn_1.{u v} σ m
                                        inst_1 α_1 β_1 x_1 f) g_1 g_1
                                      (@eq.refl.{max (u+1) ((max u v)+1)}
                                        (∀ (a : β_1),
                                        @state_t.{u v} σ m inst_1 γ_1) g_1)
                                      x_1_0 x_1_0 (@eq.refl.{u+1} σ x_1_0))
                                    (@congr_fun.{u+1 v+1} σ
                                      (λ (a : σ), m (@prod.{u u} γ_1 σ))
                                      (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                        (λ (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_1 σ)
                                          (@prod.{u u} β_1 σ) (x_1 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_1 β_1 f)) g_1)
                                      (λ (s : σ),
                                      (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_1 σ)
                                          (@prod.{u u} γ_1 σ)
                                          ((λ (s_0 : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_1 σ)
                                              (@prod.{u u} β_1 σ) (x_1 s_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_1 β_1 f)) s)
                                          (λ (p : @prod.{u u} β_1 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 β_1 γ_1 g_1 p)))
                                      (@state_t_bind.equations._eqn_1.{u v} σ m
                                        inst_1 β_1 γ_1
                                        (λ (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_1 σ)
                                          (@prod.{u u} β_1 σ) (x_1 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_1 β_1 f)) g_1) x_1_0))
                                  (@monad.bind_assoc.{u v} m inst_1
                                    (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                    (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1
                                  x_1
                                  (λ (x_2 : α_1),
                                  @has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                    (f x_2) g_1) x_1_0)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                  (x_1 x_1_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    γ_1
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1))))
                                (@eq.trans.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 x_1
                                    (λ (x_2 : α_1),
                                    @has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_1
                                      γ_1 (f x_2) g_1) x_1_0)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 x_1
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1)) x_1_0)
                                  ((λ (s : σ),
                                    (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                        (x_1 s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 γ_1
                                          (λ (x_2 : α_1) (s_0 : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_1 σ)
                                            (@prod.{u u} γ_1 σ) (f x_2 s_0)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_1 γ_1 g_1)) p))) x_1_0)
                                  ((λ (act act_0 :
                                        @state_t.{u v} σ m inst_1 α_1)
                                      (e_1 :
                                        @eq.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 α_1) act
                                          act_0)
                                      (act_1 act_2 :
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 γ_1))
                                      (e_2 :
                                        @eq.{max (u+1) ((max u v)+1)}
                                          (∀ (a_1 : α_1),
                                          @state_t.{u v} σ m inst_1 γ_1) act_1
                                          act_2) (a a_0 : σ)
                                      (e_3 : @eq.{u+1} σ a a_0),
                                    @congr.{u+1 v+1} σ (m (@prod.{u u} γ_1 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                        act act_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                        act_0 act_2) a a_0
                                      (@congr.{max (u+1)
                                        ((max u
                                        v)+1) (max u v)+1}
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 γ_1)
                                        (@state_t.{u v} σ m inst_1 γ_1)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                          act)
                                        (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                          act_0) act_1 act_2
                                        (@congr_arg.{(max u
                                          v)+1 max (u+1) ((max u v)+1)}
                                          (@state_t.{u v} σ m inst_1 α_1)
                                          (∀ (act_3 :
                                              (∀ (a_1 : α_1),
                                              @state_t.{u v} σ m inst_1 γ_1)),
                                          @state_t.{u v} σ m inst_1 γ_1) act
                                          act_0
                                          (@state_t_bind.{u v} σ m inst_1 α_1
                                            γ_1) e_1) e_2) e_3) x_1 x_1
                                    (@eq.refl.{(max u v)+1}
                                      (@state_t.{u v} σ m inst_1 α_1) x_1)
                                    (λ (x_2 : α_1),
                                    @has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_1
                                      γ_1 (f x_2) g_1)
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1))
                                    (@funext.{u+1 (max u v)+1} α_1
                                      (λ (x_2 : α_1),
                                      @state_t.{u v} σ m inst_1 γ_1)
                                      (λ (x_2 : α_1),
                                      @state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                        (f x_2) g_1)
                                      (λ (x_2 : α_1) (s : σ),
                                      (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_1 σ)
                                          (@prod.{u u} γ_1 σ) (f x_2 s)
                                          (λ (p : @prod.{u u} β_1 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 β_1 γ_1 g_1 p)))
                                      (λ (x_2 : α_1),
                                      @state_t_bind.equations._eqn_1.{u v} σ m
                                        inst_1 β_1 γ_1 (f x_2) g_1)) x_1_0 x_1_0
                                    (@eq.refl.{u+1} σ x_1_0))
                                  (@congr_fun.{u+1 v+1} σ
                                    (λ (a : σ), m (@prod.{u u} γ_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 x_1
                                      (λ (x_2 : α_1) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1)))
                                    (λ (s : σ),
                                    (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                        (x_1 s)
                                        (λ (p : @prod.{u u} α_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 γ_1
                                          (λ (x_2 : α_1) (s_0 : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_1 σ)
                                            (@prod.{u u} γ_1 σ) (f x_2 s_0)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_1 γ_1 g_1)) p)))
                                    (@state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 γ_1 x_1
                                      (λ (x_2 : α_1) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1))) x_1_0))))
                            (@congr_arg.{max (u+1) (v+1) v+1}
                              (∀ (x_2 : @prod.{u u} α_1 σ),
                              m (@prod.{u u} γ_1 σ)) (m (@prod.{u u} γ_1 σ))
                              (λ (x_2 : @prod.{u u} α_1 σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                  f x_2)
                                (@state_t_bind._match_1.{u v} σ m inst_1 β_1 γ_1
                                  g_1))
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                                (λ (x_2 : α_1) (s : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                  (f x_2 s)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1)))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                (x_1 x_1_0))
                              (@funext.{u+1 v+1} (@prod.{u u} α_1 σ)
                                (λ (x_2 : @prod.{u u} α_1 σ),
                                m (@prod.{u u} γ_1 σ))
                                (λ (x_2 : @prod.{u u} α_1 σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f x_2)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1))
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                                  (λ (x_2 : α_1) (s : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (f x_2 s)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))
                                (λ (r : @prod.{u u} α_1 σ),
                                @prod.cases_on.{0 u u} α_1 σ
                                  (λ (r_0 : @prod.{u u} α_1 σ),
                                  @eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f r_0)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1))
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      γ_1
                                      (λ (x_2 : α_1) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1)) r_0)) r
                                  (λ (fst : α_1) (snd : σ),
                                  @eq.refl.{v+1} (m (@prod.{u u} γ_1 σ))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f
                                        (@prod.mk.{u u} α_1 σ fst snd))
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1)))))))) (∀ (a : β_0), γ_0)
                        (∀ (a : α_0), γ_0) γ_0 h_0
                        (λ (h_1 : (∀ (a : β_0), γ_0)),
                        @state_t_bind.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (∀ (a : α_0), γ_0)
                          (@state_t_return.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0 h_1))
                          (λ (x_1 :
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f))
                            (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                        (λ (x_1 : (∀ (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                          x_1 x_0))))
                  (@eq.rec.{0 (max u v)+1}
                    (@state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0))
                    (@state_t_bind.{u v} σ m inst_1
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (∀ (a : α_0), γ_0)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                        (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (@state_t.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                          (@state_t_return.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                          (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                      (λ (x_1 :
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f))
                        (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                    (λ (x_1 : @state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0)),
                    @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0 x_1
                        (λ (x_2 : (∀ (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_3 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                          x_2 x_0))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                        (@state_t_bind.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (∀ (a : α_0), γ_0)
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                            (@function.comp.{u+1 u+1 (max u v)+1}
                              (∀ (a : β_0), γ_0)
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (@state_t.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                              (@state_t_return.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                              (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                          (λ (x_2 :
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_3 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f))
                            (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_2 g_0))
                        (λ (x_2 : (∀ (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_3 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                          x_2 x_0)))
                    (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                        (@state_t_bind.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (∀ (a : α_0), γ_0)
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                            (@function.comp.{u+1 u+1 (max u v)+1}
                              (∀ (a : β_0), γ_0)
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                              (@state_t.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                              (@state_t_return.{u v} σ m inst_1
                                (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                              (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                          (λ (x_1 :
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f))
                            (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                        (λ (x_1 : (∀ (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                          x_1 x_0)))
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                      (∀ (a : α_0), γ_0) h_0
                      (λ (x_1 : (∀ (a : β_0), γ_0)),
                      @state_t_bind.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (∀ (a : α_0), γ_0)
                        (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                          (@state_t.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                          (@state_t_return.{u v} σ m inst_1
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                          (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) x_1)
                        (λ (x_2 :
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_3 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f))
                          (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_2 g_0)))
                    ((λ (α_1 β_1 γ_1 : Type u)
                        (x_1 : @state_t.{u v} σ m inst_1 α_1)
                        (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1))
                        (g_1 : (∀ (a : β_1), @state_t.{u v} σ m inst_1 γ_1)),
                      @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} γ_1 σ))
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1 f)
                          g_1)
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1 x_1
                          (λ (x_2 : α_1),
                          @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1 (f x_2)
                            g_1))
                        (λ (x_1_0 : σ),
                        @eq.mpr.{0}
                          (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1
                                f) g_1 x_1_0)
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1 x_1
                              (λ (x_2 : α_1),
                              @has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                (f x_2) g_1) x_1_0))
                          (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                              (x_1 x_1_0)
                              (λ (x_2 : @prod.{u u} α_1 σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                  f x_2)
                                (@state_t_bind._match_1.{u v} σ m inst_1 β_1 γ_1
                                  g_1)))
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                              (x_1 x_1_0)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                                (λ (x_2 : α_1) (s : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                  (f x_2 s)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1)))))
                          (@id_locked.{0}
                            (@eq.{1} Prop
                              (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                    x_1 f) g_1 x_1_0)
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1
                                  x_1
                                  (λ (x_2 : α_1),
                                  @has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                    (f x_2) g_1) x_1_0))
                              (@eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                  (x_1 x_1_0)
                                  (λ (x_2 : @prod.{u u} α_1 σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f x_2)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                  (x_1 x_1_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    γ_1
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1))))))
                            ((λ (a a_0 : m (@prod.{u u} γ_1 σ))
                                (e_1 : @eq.{v+1} (m (@prod.{u u} γ_1 σ)) a a_0)
                                (a_1 a_2 : m (@prod.{u u} γ_1 σ))
                                (e_2 :
                                  @eq.{v+1} (m (@prod.{u u} γ_1 σ)) a_1 a_2),
                              @congr.{v+1 1} (m (@prod.{u u} γ_1 σ)) Prop
                                (@eq.{v+1} (m (@prod.{u u} γ_1 σ)) a)
                                (@eq.{v+1} (m (@prod.{u u} γ_1 σ)) a_0) a_1 a_2
                                (@congr_arg.{v+1 max (v+1) 1}
                                  (m (@prod.{u u} γ_1 σ))
                                  (∀ (a_3 : m (@prod.{u u} γ_1 σ)), Prop) a a_0
                                  (@eq.{v+1} (m (@prod.{u u} γ_1 σ))) e_1) e_2)
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                  x_1 f) g_1 x_1_0)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                (x_1 x_1_0)
                                (λ (x_2 : @prod.{u u} α_1 σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f x_2)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1)))
                              (@eq.trans.{v+1} (m (@prod.{u u} γ_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                                    x_1 f) g_1 x_1_0)
                                ((λ (s : σ),
                                  (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      ((λ (s_0 : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_1 σ)
                                          (@prod.{u u} β_1 σ) (x_1 s_0)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_1 β_1 f)) s)
                                      (λ (p : @prod.{u u} β_1 σ),
                                      @state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1 p))) x_1_0)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                  (x_1 x_1_0)
                                  (λ (x_2 : @prod.{u u} α_1 σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f x_2)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))
                                (@eq.trans.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_1
                                      β_1 x_1 f) g_1 x_1_0)
                                  (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                    (λ (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                      (x_1 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f)) g_1 x_1_0)
                                  ((λ (s : σ),
                                    (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        ((λ (s_0 : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_1 σ)
                                            (@prod.{u u} β_1 σ) (x_1 s_0)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 β_1 f)) s)
                                        (λ (p : @prod.{u u} β_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1 p))) x_1_0)
                                  ((λ (act act_0 :
                                        @state_t.{u v} σ m inst_1 β_1)
                                      (e_1 :
                                        @eq.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 β_1) act
                                          act_0)
                                      (act_1 act_2 :
                                        (∀ (a_1 : β_1),
                                        @state_t.{u v} σ m inst_1 γ_1))
                                      (e_2 :
                                        @eq.{max (u+1) ((max u v)+1)}
                                          (∀ (a_1 : β_1),
                                          @state_t.{u v} σ m inst_1 γ_1) act_1
                                          act_2) (a a_0 : σ)
                                      (e_3 : @eq.{u+1} σ a a_0),
                                    @congr.{u+1 v+1} σ (m (@prod.{u u} γ_1 σ))
                                      (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                        act act_1)
                                      (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                        act_0 act_2) a a_0
                                      (@congr.{max (u+1)
                                        ((max u
                                        v)+1) (max u v)+1}
                                        (∀ (a_1 : β_1),
                                        @state_t.{u v} σ m inst_1 γ_1)
                                        (@state_t.{u v} σ m inst_1 γ_1)
                                        (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                          act)
                                        (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                          act_0) act_1 act_2
                                        (@congr_arg.{(max u
                                          v)+1 max (u+1) ((max u v)+1)}
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (∀ (act_3 :
                                              (∀ (a_1 : β_1),
                                              @state_t.{u v} σ m inst_1 γ_1)),
                                          @state_t.{u v} σ m inst_1 γ_1) act
                                          act_0
                                          (@state_t_bind.{u v} σ m inst_1 β_1
                                            γ_1) e_1) e_2) e_3)
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_1
                                      β_1 x_1 f)
                                    (λ (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                      (x_1 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 β_1 f))
                                    (@state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 α_1 β_1 x_1 f) g_1 g_1
                                    (@eq.refl.{max (u+1) ((max u v)+1)}
                                      (∀ (a : β_1),
                                      @state_t.{u v} σ m inst_1 γ_1) g_1) x_1_0
                                    x_1_0 (@eq.refl.{u+1} σ x_1_0))
                                  (@congr_fun.{u+1 v+1} σ
                                    (λ (a : σ), m (@prod.{u u} γ_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                      (λ (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        (x_1 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f)) g_1)
                                    (λ (s : σ),
                                    (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        ((λ (s_0 : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_1 σ)
                                            (@prod.{u u} β_1 σ) (x_1 s_0)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_1 β_1 f)) s)
                                        (λ (p : @prod.{u u} β_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1 p)))
                                    (@state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 β_1 γ_1
                                      (λ (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                        (x_1 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_1 β_1 f)) g_1) x_1_0))
                                (@monad.bind_assoc.{u v} m inst_1
                                  (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                  (@prod.{u u} γ_1 σ) (x_1 x_1_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1)))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_1 γ_1 x_1
                                (λ (x_2 : α_1),
                                @has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                  (f x_2) g_1) x_1_0)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                (x_1 x_1_0)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                                  (λ (x_2 : α_1) (s : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (f x_2 s)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1))))
                              (@eq.trans.{v+1} (m (@prod.{u u} γ_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 x_1
                                  (λ (x_2 : α_1),
                                  @has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                    (f x_2) g_1) x_1_0)
                                (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 x_1
                                  (λ (x_2 : α_1) (s : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (f x_2 s)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)) x_1_0)
                                ((λ (s : σ),
                                  (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                      (x_1 s)
                                      (λ (p : @prod.{u u} α_1 σ),
                                      @state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 γ_1
                                        (λ (x_2 : α_1) (s_0 : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_1 σ)
                                          (@prod.{u u} γ_1 σ) (f x_2 s_0)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_1 γ_1 g_1)) p))) x_1_0)
                                ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_1)
                                    (e_1 :
                                      @eq.{(max u v)+1}
                                        (@state_t.{u v} σ m inst_1 α_1) act
                                        act_0)
                                    (act_1 act_2 :
                                      (∀ (a_1 : α_1),
                                      @state_t.{u v} σ m inst_1 γ_1))
                                    (e_2 :
                                      @eq.{max (u+1) ((max u v)+1)}
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 γ_1) act_1
                                        act_2) (a a_0 : σ)
                                    (e_3 : @eq.{u+1} σ a a_0),
                                  @congr.{u+1 v+1} σ (m (@prod.{u u} γ_1 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 act
                                      act_1)
                                    (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                      act_0 act_2) a a_0
                                    (@congr.{max (u+1)
                                      ((max u
                                      v)+1) (max u v)+1}
                                      (∀ (a_1 : α_1),
                                      @state_t.{u v} σ m inst_1 γ_1)
                                      (@state_t.{u v} σ m inst_1 γ_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                        act)
                                      (@state_t_bind.{u v} σ m inst_1 α_1 γ_1
                                        act_0) act_1 act_2
                                      (@congr_arg.{(max u
                                        v)+1 max (u+1) ((max u v)+1)}
                                        (@state_t.{u v} σ m inst_1 α_1)
                                        (∀ (act_3 :
                                            (∀ (a_1 : α_1),
                                            @state_t.{u v} σ m inst_1 γ_1)),
                                        @state_t.{u v} σ m inst_1 γ_1) act act_0
                                        (@state_t_bind.{u v} σ m inst_1 α_1 γ_1)
                                        e_1) e_2) e_3) x_1 x_1
                                  (@eq.refl.{(max u v)+1}
                                    (@state_t.{u v} σ m inst_1 α_1) x_1)
                                  (λ (x_2 : α_1),
                                  @has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_1 γ_1
                                    (f x_2) g_1)
                                  (λ (x_2 : α_1) (s : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (f x_2 s)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1))
                                  (@funext.{u+1 (max u v)+1} α_1
                                    (λ (x_2 : α_1),
                                    @state_t.{u v} σ m inst_1 γ_1)
                                    (λ (x_2 : α_1),
                                    @state_t_bind.{u v} σ m inst_1 β_1 γ_1
                                      (f x_2) g_1)
                                    (λ (x_2 : α_1) (s : σ),
                                    (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                        (f x_2 s)
                                        (λ (p : @prod.{u u} β_1 σ),
                                        @state_t_bind._match_1.{u v} σ m inst_1
                                          β_1 γ_1 g_1 p)))
                                    (λ (x_2 : α_1),
                                    @state_t_bind.equations._eqn_1.{u v} σ m
                                      inst_1 β_1 γ_1 (f x_2) g_1)) x_1_0 x_1_0
                                  (@eq.refl.{u+1} σ x_1_0))
                                (@congr_fun.{u+1 v+1} σ
                                  (λ (a : σ), m (@prod.{u u} γ_1 σ))
                                  (@state_t_bind.{u v} σ m inst_1 α_1 γ_1 x_1
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1)))
                                  (λ (s : σ),
                                  (λ (this : m (@prod.{u u} γ_1 σ)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                                      (x_1 s)
                                      (λ (p : @prod.{u u} α_1 σ),
                                      @state_t_bind._match_1.{u v} σ m inst_1
                                        α_1 γ_1
                                        (λ (x_2 : α_1) (s_0 : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_1 σ)
                                          (@prod.{u u} γ_1 σ) (f x_2 s_0)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_1 γ_1 g_1)) p)))
                                  (@state_t_bind.equations._eqn_1.{u v} σ m
                                    inst_1 α_1 γ_1 x_1
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1))) x_1_0))))
                          (@congr_arg.{max (u+1) (v+1) v+1}
                            (∀ (x_2 : @prod.{u u} α_1 σ), m (@prod.{u u} γ_1 σ))
                            (m (@prod.{u u} γ_1 σ))
                            (λ (x_2 : @prod.{u u} α_1 σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                                x_2)
                              (@state_t_bind._match_1.{u v} σ m inst_1 β_1 γ_1
                                g_1))
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                              (λ (x_2 : α_1) (s : σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                (f x_2 s)
                                (@state_t_bind._match_1.{u v} σ m inst_1 β_1 γ_1
                                  g_1)))
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} γ_1 σ)
                              (x_1 x_1_0))
                            (@funext.{u+1 v+1} (@prod.{u u} α_1 σ)
                              (λ (x_2 : @prod.{u u} α_1 σ),
                              m (@prod.{u u} γ_1 σ))
                              (λ (x_2 : @prod.{u u} α_1 σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                  f x_2)
                                (@state_t_bind._match_1.{u v} σ m inst_1 β_1 γ_1
                                  g_1))
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 γ_1
                                (λ (x_2 : α_1) (s : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                  (f x_2 s)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                    γ_1 g_1)))
                              (λ (r : @prod.{u u} α_1 σ),
                              @prod.cases_on.{0 u u} α_1 σ
                                (λ (r_0 : @prod.{u u} α_1 σ),
                                @eq.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f r_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1))
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    γ_1
                                    (λ (x_2 : α_1) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_1 γ_1 g_1)) r_0)) r
                                (λ (fst : α_1) (snd : σ),
                                @eq.refl.{v+1} (m (@prod.{u u} γ_1 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_1 σ) (@prod.{u u} γ_1 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_1
                                      β_1 f (@prod.mk.{u u} α_1 σ fst snd))
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_1
                                      γ_1 g_1)))))))) (∀ (a : β_0), γ_0)
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (∀ (a : α_0), γ_0) h_0
                      (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (@state_t.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                        (@state_t_return.{u v} σ m inst_1
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                        (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0))
                      (λ (x_1 :
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f))
                        (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))))
                (@eq.rec.{0 (max u v)+1}
                  (@state_t.{u v} σ m inst_1
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                    (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β_0), γ_0)
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (@state_t.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                      (@state_t_return.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                  (λ (x_1 :
                      @state_t.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                  @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                      (@state_t_bind.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (∀ (a : α_0), γ_0)
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                          (@function.comp.{u+1 u+1 (max u v)+1}
                            (∀ (a : β_0), γ_0)
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (@state_t.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                            (@state_t_return.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                            (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                        (λ (x_2 :
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_3 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f))
                          (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_2 g_0))
                      (λ (x_2 : (∀ (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_3 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                        x_2 x_0))
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                      (@state_t_bind.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (∀ (a : α_0), γ_0) x_1
                        (λ (x_2 :
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_3 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f))
                          (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_2 g_0))
                      (λ (x_2 : (∀ (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_3 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                        x_2 x_0)))
                  (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), γ_0) γ_0
                      (@state_t_bind.{u v} σ m inst_1
                        (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                        (∀ (a : α_0), γ_0)
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : β_0), γ_0)
                          (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0) h_0
                          (@function.comp.{u+1 u+1 (max u v)+1}
                            (∀ (a : β_0), γ_0)
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                            (@state_t.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                            (@state_t_return.{u v} σ m inst_1
                              (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0))
                            (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0)))
                        (λ (x_1 :
                            (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                        (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f))
                          (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
                      (λ (x_1 : (∀ (a : α_0), γ_0)),
                      (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 γ_0
                        x_1 x_0)))
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : β_0), γ_0)
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) β_1) f)))
                    (∀ (a : β_0), γ_0)
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)))
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_1), β_1) β_1 f
                    (λ (x_2 : (∀ (a : α_1), β_1)),
                    @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                        @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                            (@state_t.{u v} σ m inst_1 β_2)
                            (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                        (λ (α_2 β_2 : Type u),
                        @function.comp.{u+1 u+1 (max u v)+1} α_2
                          (∀ (a : β_2), α_2)
                          (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                          @state_t.{u v} σ m inst_1 α_2)
                          ((λ (α_3 β_3 : Type u) (f_0 : (∀ (a : α_3), β_3))
                              (x_3 : @state_t.{u v} σ m inst_1 α_3),
                            @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                              (@function.comp.{u+1 u+1 (max u v)+1} α_3 β_3
                                (@state_t.{u v} σ m inst_1 β_3)
                                (@state_t_return.{u v} σ m inst_1 β_3) f_0)) β_2
                            α_2) (@function.const.{u+1 u+1} α_2 β_2))) α_1 β_1
                      x_2 x_1))) α_0 γ_0
                (@state_t_bind.{u v} σ m inst_1
                  (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                  (∀ (a : α_0), γ_0)
                  ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_1 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : β_0), γ_0)
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                  (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                  (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f))
                    (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)) x_0))
            (@eq.rec.{0 (max u v)+1}
              (@state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0))
              (@state_t_bind.{u v} σ m inst_1
                (∀ (a : (∀ (a_1 : α_0), β_0)) (a_0 : α_0), γ_0)
                (∀ (a : α_0), γ_0)
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : β_0), γ_0)
                  (∀ (a : (∀ (a_1 : α_0), β_0)) (a_0 : α_0), γ_0)
                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                (λ (x_1 : (∀ (a : (∀ (a_1 : α_0), β_0)) (a_0 : α_0), γ_0)),
                (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0))
              (λ (x_1 : @state_t.{u v} σ m inst_1 (∀ (a : α_0), γ_0)),
              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                ((λ (α_1 β_1 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                    (λ (x_3 : (∀ (a : α_1), β_1)),
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                        (x_4 : @state_t.{u v} σ m inst_1 α_2),
                      @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_4
                        (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                          (@state_t.{u v} σ m inst_1 β_2)
                          (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                      x_3 x_2)) α_0 γ_0
                  (@state_t_bind.{u v} σ m inst_1
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (∀ (a : α_0), γ_0)
                    ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : β_0), γ_0)
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                    (λ (x_2 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_2 g_0)) x_0)
                ((λ (α_1 β_1 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                    (λ (x_3 : (∀ (a : α_1), β_1)),
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                        (x_4 : @state_t.{u v} σ m inst_1 α_2),
                      @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_4
                        (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                          (@state_t.{u v} σ m inst_1 β_2)
                          (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                      x_3 x_2)) α_0 γ_0 x_1 x_0))
              (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ_0)
                ((λ (α_1 β_1 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                    (λ (x_2 : (∀ (a : α_1), β_1)),
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                        (x_3 : @state_t.{u v} σ m inst_1 α_2),
                      @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                          (@state_t.{u v} σ m inst_1 β_2)
                          (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1
                      x_2 x_1)) α_0 γ_0
                  (@state_t_bind.{u v} σ m inst_1
                    (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                    (∀ (a : α_0), γ_0)
                    ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_1 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : β_0), γ_0)
                      (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)
                      (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0)
                    (λ (x_1 : (∀ (g_1 : (∀ (a_0 : α_0), β_0)) (a : α_0), γ_0)),
                    (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f))
                      (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0) x_1 g_0)) x_0))
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
                  (λ (x_2 : (∀ (a : α_1), β_1)),
                  (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                    x_1)) (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : β_0), γ_0)
                  (∀ (a : (∀ (a_1 : α_0), β_0)) (a_0 : α_0), γ_0)
                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0) g_0)
              ((λ (α_1 β_1 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_1), β_1) β_1 f
                    (λ (x_2 : (∀ (a : α_1), β_1)),
                    @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                          (x_3 : @state_t.{u v} σ m inst_1 α_2),
                        @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                            (@state_t.{u v} σ m inst_1 β_2)
                            (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                        (λ (α_2 β_2 : Type u),
                        @function.comp.{u+1 u+1 (max u v)+1} α_2
                          (∀ (a : β_2), α_2)
                          (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                          @state_t.{u v} σ m inst_1 α_2)
                          ((λ (α_3 β_3 : Type u) (f_0 : (∀ (a : α_3), β_3))
                              (x_3 : @state_t.{u v} σ m inst_1 α_3),
                            @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                              (@function.comp.{u+1 u+1 (max u v)+1} α_3 β_3
                                (@state_t.{u v} σ m inst_1 β_3)
                                (@state_t_return.{u v} σ m inst_1 β_3) f_0)) β_2
                            α_2) (@function.const.{u+1 u+1} α_2 β_2))) α_1 β_1
                      x_2 x_1))) (∀ (a : α_0), β_0) (∀ (a : α_0), γ_0)
                ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                    (x_1 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f))
                  (∀ (a : β_0), γ_0)
                  (∀ (a : (∀ (a_1 : α_0), β_0)) (a_0 : α_0), γ_0)
                  (@function.comp.{u+1 u+1 u+1} α_0 β_0 γ_0) h_0) g_0))) α β γ x
          (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)
          (@state_t_return.{u v} σ m inst_1 (∀ (a : β), γ) h))))
    ((λ (α_0 β_0 : Type u) (g_0 : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
        ((λ (α_1 β_1 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
            (x_1 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
            (λ (x_2 : (∀ (a : α_1), β_1)),
            (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                (x_3 : @state_t.{u v} σ m inst_1 α_2),
              @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                  (@state_t.{u v} σ m inst_1 β_2)
                  (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2 x_1))
          α_0 β_0 (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0) x_0)
        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
          (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1 x_0))
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x_1 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0 x_0)
        (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1 x_0))
          ((λ (α_1 β_1 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
              (λ (x_2 : (∀ (a : α_1), β_1)),
              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                  (x_3 : @state_t.{u v} σ m inst_1 α_2),
                @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                  (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                    (@state_t.{u v} σ m inst_1 β_2)
                    (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                x_1)) α_0 β_0
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0) x_0)
          ((λ (α_1 β_1 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_1), β_1) β_1 f
                (λ (x_2 : (∀ (a : α_1), β_1)),
                @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                    (λ (α_2 β_2 : Type u),
                    @function.comp.{u+1 u+1 (max u v)+1} α_2 (∀ (a : β_2), α_2)
                      (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                      @state_t.{u v} σ m inst_1 α_2)
                      ((λ (α_3 β_3 : Type u) (f_0 : (∀ (a : α_3), β_3))
                          (x_3 : @state_t.{u v} σ m inst_1 α_3),
                        @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_3 β_3
                            (@state_t.{u v} σ m inst_1 β_3)
                            (@state_t_return.{u v} σ m inst_1 β_3) f_0)) β_2
                        α_2) (@function.const.{u+1 u+1} α_2 β_2))) α_1 β_1 x_2
                  x_1))) α_0 β_0
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0) x_0))
        ((λ (α_1 β_1 : Type u) (x_1 : α_1)
            (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
          @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
            (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
              (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f) (f x_1)
            (λ (x_1_0 : σ),
            @eq.mpr.{0}
              (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                  (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                (f x_1 x_1_0)) @true
              (@id_locked.{0}
                (@eq.{1} Prop
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0)) @true)
                (@eq.trans.{1} Prop
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0))
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                    (f x_1 x_1_0)) @true
                  ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                      (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                      (a_1 a_2 : m (@prod.{u u} β_1 σ))
                      (e_2 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                    @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                      (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} β_1 σ))
                        (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0)
                    (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                        x_1_0)
                      ((λ (s : σ),
                        (λ (this : m (@prod.{u u} β_1 σ)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                            ((λ (s_0 : σ),
                              @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                            (λ (p : @prod.{u u} α_1 σ),
                            @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                              p))) x_1_0) (f x_1 x_1_0)
                      (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                          x_1_0)
                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                          (λ (s : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                            (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                        ((λ (s : σ),
                          (λ (this : m (@prod.{u u} β_1 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                              ((λ (s_0 : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                              (λ (p : @prod.{u u} α_1 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                                p))) x_1_0)
                        ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_1)
                            (e_1 :
                              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_1)
                                act act_0)
                            (act_1 act_2 :
                              (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1))
                            (e_2 :
                              @eq.{max (u+1) ((max u v)+1)}
                                (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1)
                                act_1 act_2) (a a_0 : σ)
                            (e_3 : @eq.{u+1} σ a a_0),
                          @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act act_1)
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0 act_2)
                            a a_0
                            (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                              (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1)
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act)
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0)
                              act_1 act_2
                              (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                                (@state_t.{u v} σ m inst_1 α_1)
                                (∀ (act_3 :
                                    (∀ (a_1 : α_1),
                                    @state_t.{u v} σ m inst_1 β_1)),
                                @state_t.{u v} σ m inst_1 β_1) act act_0
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1) e_1)
                              e_2) e_3)
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                          (λ (s : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                            (@prod.mk.{u u} α_1 σ x_1 s))
                          (@state_t_return.equations._eqn_1.{u v} σ m inst_1 α_1
                            x_1) f f
                          (@eq.refl.{max (u+1) ((max u v)+1)}
                            (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1) f)
                          x_1_0 x_1_0 (@eq.refl.{u+1} σ x_1_0))
                        (@congr_fun.{u+1 v+1} σ
                          (λ (a : σ), m (@prod.{u u} β_1 σ))
                          (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                            (λ (s : σ),
                            @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                              (@prod.mk.{u u} α_1 σ x_1 s)) f)
                          (λ (s : σ),
                          (λ (this : m (@prod.{u u} β_1 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                              ((λ (s_0 : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                              (λ (p : @prod.{u u} α_1 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                                p)))
                          (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_1
                            β_1
                            (λ (s : σ),
                            @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                              (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                      (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                          (@has_pure.pure.{u v} m
                            (@applicative.to_has_pure.{u v} m
                              (@monad.to_applicative.{u v} m inst_1))
                            (@prod.{u u} α_1 σ)
                            (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f))
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                          (@prod.mk.{u u} α_1 σ x_1 x_1_0)) (f x_1 x_1_0)
                        (@monad.pure_bind.{u v} m inst_1 (@prod.{u u} α_1 σ)
                          (@prod.{u u} β_1 σ) (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f))
                        (@state_t_bind._match_1.equations._eqn_1.{v u} σ m
                          inst_1 α_1 β_1 f x_1 x_1_0))) (f x_1 x_1_0)
                    (f x_1 x_1_0)
                    (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)))
                  (@propext
                    (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                      (f x_1 x_1_0)) @true
                    (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                      (f x_1 x_1_0))))) @trivial)) (∀ (a : α_0), β_0) β_0 g_0
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1 x_0))) β
      γ h
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        β (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x)))
  (@congr_arg.{(max u v)+1 (max u v)+1} (@state_t.{u v} σ m inst_1 β)
    (@state_t.{u v} σ m inst_1 γ)
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x)
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α β g x)
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) β γ h)
    ((λ (α_0 β_0 : Type u) (g_0 : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
        ((λ (α_1 β_1 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
            (x_1 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
            (λ (x_2 : (∀ (a : α_1), β_1)),
            (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                (x_3 : @state_t.{u v} σ m inst_1 α_2),
              @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                  (@state_t.{u v} σ m inst_1 β_2)
                  (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2 x_1))
          α_0 β_0 (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0) x_0)
        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
          (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1 x_0))
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x_1 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_0 x_0)
        (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0)
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1 x_0))
          ((λ (α_1 β_1 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_1), β_1) β_1 f
              (λ (x_2 : (∀ (a : α_1), β_1)),
              (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                  (x_3 : @state_t.{u v} σ m inst_1 α_2),
                @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                  (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                    (@state_t.{u v} σ m inst_1 β_2)
                    (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_2
                x_1)) α_0 β_0
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0) x_0)
          ((λ (α_1 β_1 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_1), β_1) β_1 f
                (λ (x_2 : (∀ (a : α_1), β_1)),
                @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_3 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_3
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0))
                    (λ (α_2 β_2 : Type u),
                    @function.comp.{u+1 u+1 (max u v)+1} α_2 (∀ (a : β_2), α_2)
                      (∀ (a : @state_t.{u v} σ m inst_1 β_2),
                      @state_t.{u v} σ m inst_1 α_2)
                      ((λ (α_3 β_3 : Type u) (f_0 : (∀ (a : α_3), β_3))
                          (x_3 : @state_t.{u v} σ m inst_1 α_3),
                        @state_t_bind.{u v} σ m inst_1 α_3 β_3 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_3 β_3
                            (@state_t.{u v} σ m inst_1 β_3)
                            (@state_t_return.{u v} σ m inst_1 β_3) f_0)) β_2
                        α_2) (@function.const.{u+1 u+1} α_2 β_2))) α_1 β_1 x_2
                  x_1))) α_0 β_0
            (@state_t_return.{u v} σ m inst_1 (∀ (a : α_0), β_0) g_0) x_0))
        ((λ (α_1 β_1 : Type u) (x_1 : α_1)
            (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
          @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
            (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
              (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f) (f x_1)
            (λ (x_1_0 : σ),
            @eq.mpr.{0}
              (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                  (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                (f x_1 x_1_0)) @true
              (@id_locked.{0}
                (@eq.{1} Prop
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0)) @true)
                (@eq.trans.{1} Prop
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0))
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                    (f x_1 x_1_0)) @true
                  ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                      (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                      (a_1 a_2 : m (@prod.{u u} β_1 σ))
                      (e_2 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                    @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                      (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} β_1 σ))
                        (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0)
                    (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                      (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                        x_1_0)
                      ((λ (s : σ),
                        (λ (this : m (@prod.{u u} β_1 σ)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                            ((λ (s_0 : σ),
                              @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                            (λ (p : @prod.{u u} α_1 σ),
                            @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                              p))) x_1_0) (f x_1 x_1_0)
                      (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                          x_1_0)
                        (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                          (λ (s : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                            (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                        ((λ (s : σ),
                          (λ (this : m (@prod.{u u} β_1 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                              ((λ (s_0 : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                              (λ (p : @prod.{u u} α_1 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                                p))) x_1_0)
                        ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_1)
                            (e_1 :
                              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_1)
                                act act_0)
                            (act_1 act_2 :
                              (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1))
                            (e_2 :
                              @eq.{max (u+1) ((max u v)+1)}
                                (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1)
                                act_1 act_2) (a a_0 : σ)
                            (e_3 : @eq.{u+1} σ a a_0),
                          @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act act_1)
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0 act_2)
                            a a_0
                            (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                              (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1)
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act)
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0)
                              act_1 act_2
                              (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                                (@state_t.{u v} σ m inst_1 α_1)
                                (∀ (act_3 :
                                    (∀ (a_1 : α_1),
                                    @state_t.{u v} σ m inst_1 β_1)),
                                @state_t.{u v} σ m inst_1 β_1) act act_0
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1) e_1)
                              e_2) e_3)
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                          (λ (s : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                            (@prod.mk.{u u} α_1 σ x_1 s))
                          (@state_t_return.equations._eqn_1.{u v} σ m inst_1 α_1
                            x_1) f f
                          (@eq.refl.{max (u+1) ((max u v)+1)}
                            (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1) f)
                          x_1_0 x_1_0 (@eq.refl.{u+1} σ x_1_0))
                        (@congr_fun.{u+1 v+1} σ
                          (λ (a : σ), m (@prod.{u u} β_1 σ))
                          (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                            (λ (s : σ),
                            @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                              (@prod.mk.{u u} α_1 σ x_1 s)) f)
                          (λ (s : σ),
                          (λ (this : m (@prod.{u u} β_1 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                              ((λ (s_0 : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                              (λ (p : @prod.{u u} α_1 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                                p)))
                          (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_1
                            β_1
                            (λ (s : σ),
                            @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                              (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                      (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                          (@has_pure.pure.{u v} m
                            (@applicative.to_has_pure.{u v} m
                              (@monad.to_applicative.{u v} m inst_1))
                            (@prod.{u u} α_1 σ)
                            (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f))
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                          (@prod.mk.{u u} α_1 σ x_1 x_1_0)) (f x_1 x_1_0)
                        (@monad.pure_bind.{u v} m inst_1 (@prod.{u u} α_1 σ)
                          (@prod.{u u} β_1 σ) (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f))
                        (@state_t_bind._match_1.equations._eqn_1.{v u} σ m
                          inst_1 α_1 β_1 f x_1 x_1_0))) (f x_1 x_1_0)
                    (f x_1 x_1_0)
                    (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)))
                  (@propext
                    (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                      (f x_1 x_1_0)) @true
                    (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                      (f x_1 x_1_0))))) @trivial)) (∀ (a : α_0), β_0) β_0 g_0
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 x_1 x_0))) α
      β g x)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_4,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a_0 : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (a : @state_t.{u v} σ m inst_1 α)
  (b : @state_t.{u v} σ m inst_1 β),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α)
  (@has_seq_left.seq_left.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_seq_left.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @state_t.{u v} σ m inst_1 α_0)
        (b_0 : @state_t.{u v} σ m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @state_t.{u v} σ m inst_1 α_2),
            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                (@state_t.{u v} σ m inst_1 β_2)
                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        α_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
          (∀ (a_1 : β_0), α_0) (@function.const.{u+1 u+1} α_0 β_0) a_0) b_0)) α
    β a b)
  (@has_seq_left.seq_left.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_seq_left.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @state_t.{u v} σ m inst_1 α_0)
        (b_0 : @state_t.{u v} σ m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @state_t.{u v} σ m inst_1 α_2),
            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                (@state_t.{u v} σ m inst_1 β_2)
                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        α_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
          (∀ (a_1 : β_0), α_0) (@function.const.{u+1 u+1} α_0 β_0) a_0) b_0)) α
    β a b),λ (σ : Type u) (m : (∀ (a_0 : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (a : @state_t.{u v} σ m inst_1 α)
  (b : @state_t.{u v} σ m inst_1 β),
@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 α)
  (@has_seq_left.seq_left.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_seq_left.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @state_t.{u v} σ m inst_1 α_0)
        (b_0 : @state_t.{u v} σ m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @state_t.{u v} σ m inst_1 α_2),
            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                (@state_t.{u v} σ m inst_1 β_2)
                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        α_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
          (∀ (a_1 : β_0), α_0) (@function.const.{u+1 u+1} α_0 β_0) a_0) b_0)) α
    β a b),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_5,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a_0 : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (a : @state_t.{u v} σ m inst_1 α)
  (b : @state_t.{u v} σ m inst_1 β),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@has_seq_right.seq_right.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_seq_right.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @state_t.{u v} σ m inst_1 α_0)
        (b_0 : @state_t.{u v} σ m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @state_t.{u v} σ m inst_1 α_2),
            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                (@state_t.{u v} σ m inst_1 β_2)
                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        β_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
          (∀ (a_1 : β_0), β_0)
          (@function.const.{u+1 u+1} (∀ (a_1 : β_0), β_0) α_0 (@id.{u+1} β_0))
          a_0) b_0)) α β a b)
  (@has_seq_right.seq_right.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_seq_right.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @state_t.{u v} σ m inst_1 α_0)
        (b_0 : @state_t.{u v} σ m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @state_t.{u v} σ m inst_1 α_2),
            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                (@state_t.{u v} σ m inst_1 β_2)
                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        β_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
          (∀ (a_1 : β_0), β_0)
          (@function.const.{u+1 u+1} (∀ (a_1 : β_0), β_0) α_0 (@id.{u+1} β_0))
          a_0) b_0)) α β a b),λ (σ : Type u) (m : (∀ (a_0 : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (a : @state_t.{u v} σ m inst_1 α)
  (b : @state_t.{u v} σ m inst_1 β),
@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@has_seq_right.seq_right.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_seq_right.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α_0 β_0 : Type u) (a_0 : @state_t.{u v} σ m inst_1 α_0)
        (b_0 : @state_t.{u v} σ m inst_1 β_0),
      (λ (α_1 β_1 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1))
          (x : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_1 : α_1), β_1) β_1 f
          (λ (x_0 : (∀ (a_1 : α_1), β_1)),
          (λ (α_2 β_2 : Type u) (f_0 : (∀ (a_1 : α_2), β_2))
              (x_1 : @state_t.{u v} σ m inst_1 α_2),
            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                (@state_t.{u v} σ m inst_1 β_2)
                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) α_1 β_1 x_0 x)) β_0
        β_0
        ((λ (α_1 β_1 : Type u) (f : (∀ (a_1 : α_1), β_1))
            (x : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0
          (∀ (a_1 : β_0), β_0)
          (@function.const.{u+1 u+1} (∀ (a_1 : β_0), β_0) α_0 (@id.{u+1} β_0))
          a_0) b_0)) α β a b),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_6,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (g : (∀ (a : α), β)) (x : @state_t.{u v} σ m inst_1 α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
    (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) α β g x),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (g : (∀ (a : α), β)) (x : @state_t.{u v} σ m inst_1 α),
@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
    (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x)
  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β
    (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)
    (λ (x_0 : (∀ (a : α), β)),
    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_1 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α β x_0 x))
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) α β g x)
  (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β
      (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g)
      (λ (x_0 : (∀ (a : α), β)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) α β x_0 x))
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x)
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0))
              (λ (α_1 β_1 : Type u),
              @function.comp.{u+1 u+1 (max u v)+1} α_1 (∀ (a : β_1), α_1)
                (∀ (a : @state_t.{u v} σ m inst_1 β_1),
                @state_t.{u v} σ m inst_1 α_1)
                ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_2 : @state_t.{u v} σ m inst_1 α_2),
                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                      (@state_t.{u v} σ m inst_1 β_2)
                      (@state_t_return.{u v} σ m inst_1 β_2) f_0)) β_1 α_1)
                (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0 x_1 x_0))) α β
      (@state_t_return.{u v} σ m inst_1 (∀ (a : α), β) g) x))
  ((λ (α_0 β_0 : Type u) (x_0 : α_0)
      (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0)),
    @funext.{u+1 v+1} σ (λ (x_1 : σ), m (@prod.{u u} β_0 σ))
      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f) (f x_0)
      (λ (x_1 : σ),
      @eq.mpr.{0}
        (@eq.{v+1} (m (@prod.{u u} β_0 σ))
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
            (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1) (f x_0 x_1))
        @true
        (@id_locked.{0}
          (@eq.{1} Prop
            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
              (f x_0 x_1)) @true)
          (@eq.trans.{1} Prop
            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
              (f x_0 x_1))
            (@eq.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1) (f x_0 x_1)) @true
            ((λ (a a_0 : m (@prod.{u u} β_0 σ))
                (e_1 : @eq.{v+1} (m (@prod.{u u} β_0 σ)) a a_0)
                (a_1 a_2 : m (@prod.{u u} β_0 σ))
                (e_2 : @eq.{v+1} (m (@prod.{u u} β_0 σ)) a_1 a_2),
              @congr.{v+1 1} (m (@prod.{u u} β_0 σ)) Prop
                (@eq.{v+1} (m (@prod.{u u} β_0 σ)) a)
                (@eq.{v+1} (m (@prod.{u u} β_0 σ)) a_0) a_1 a_2
                (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} β_0 σ))
                  (∀ (a_3 : m (@prod.{u u} β_0 σ)), Prop) a a_0
                  (@eq.{v+1} (m (@prod.{u u} β_0 σ))) e_1) e_2)
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
              (f x_0 x_1)
              (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                  (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
                ((λ (s : σ),
                  (λ (this : m (@prod.{u u} β_0 σ)), this)
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                      ((λ (s_0 : σ),
                        @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                          (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                      (λ (p : @prod.{u u} α_0 σ),
                      @state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f p)))
                  x_1) (f x_0 x_1)
                (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                  (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
                  (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                    (λ (s : σ),
                    @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                      (@prod.mk.{u u} α_0 σ x_0 s)) f x_1)
                  ((λ (s : σ),
                    (λ (this : m (@prod.{u u} β_0 σ)), this)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} β_0 σ)
                        ((λ (s_0 : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                            (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                        (λ (p : @prod.{u u} α_0 σ),
                        @state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f p)))
                    x_1)
                  ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_0)
                      (e_1 :
                        @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_0) act
                          act_0)
                      (act_1 act_2 :
                        (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0))
                      (e_2 :
                        @eq.{max (u+1) ((max u v)+1)}
                          (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0) act_1
                          act_2) (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
                    @congr.{u+1 v+1} σ (m (@prod.{u u} β_0 σ))
                      (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act act_1)
                      (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act_0 act_2) a a_0
                      (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                        (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0)
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act)
                        (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act_0) act_1
                        act_2
                        (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                          (@state_t.{u v} σ m inst_1 α_0)
                          (∀ (act_3 :
                              (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0)),
                          @state_t.{u v} σ m inst_1 β_0) act act_0
                          (@state_t_bind.{u v} σ m inst_1 α_0 β_0) e_1) e_2)
                      e_3)
                    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_return.{u v} σ m inst_1)) α_0 x_0)
                    (λ (s : σ),
                    @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                      (@prod.mk.{u u} α_0 σ x_0 s))
                    (@state_t_return.equations._eqn_1.{u v} σ m inst_1 α_0 x_0)
                    f f
                    (@eq.refl.{max (u+1) ((max u v)+1)}
                      (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0) f) x_1 x_1
                    (@eq.refl.{u+1} σ x_1))
                  (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} β_0 σ))
                    (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                      (λ (s : σ),
                      @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                        (@prod.mk.{u u} α_0 σ x_0 s)) f)
                    (λ (s : σ),
                    (λ (this : m (@prod.{u u} β_0 σ)), this)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} β_0 σ)
                        ((λ (s_0 : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                            (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                        (λ (p : @prod.{u u} α_0 σ),
                        @state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f p)))
                    (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_0 β_0
                      (λ (s : σ),
                      @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                        (@prod.mk.{u u} α_0 σ x_0 s)) f) x_1))
                (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                    (@has_pure.pure.{u v} m
                      (@applicative.to_has_pure.{u v} m
                        (@monad.to_applicative.{u v} m inst_1))
                      (@prod.{u u} α_0 σ) (@prod.mk.{u u} α_0 σ x_0 x_1))
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f))
                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                    (@prod.mk.{u u} α_0 σ x_0 x_1)) (f x_0 x_1)
                  (@monad.pure_bind.{u v} m inst_1 (@prod.{u u} α_0 σ)
                    (@prod.{u u} β_0 σ) (@prod.mk.{u u} α_0 σ x_0 x_1)
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f))
                  (@state_t_bind._match_1.equations._eqn_1.{v u} σ m inst_1 α_0
                    β_0 f x_0 x_1))) (f x_0 x_1) (f x_0 x_1)
              (@eq.refl.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1)))
            (@propext
              (@eq.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1) (f x_0 x_1)) @true
              (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1)))))
        @trivial)) (∀ (a : α), β) β g
    (λ (x_0 : (∀ (a : α), β)),
    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_1 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α β x_0 x)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_7,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (g : (∀ (a : α), β)) (x : α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) α β g (@state_t_return.{u v} σ m inst_1 α x))
  (@state_t_return.{u v} σ m inst_1 β (g x)),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (g : (∀ (a : α), β)) (x : α),
@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) α β g (@state_t_return.{u v} σ m inst_1 α x))
  (@state_t_bind.{u v} σ m inst_1 α β (@state_t_return.{u v} σ m inst_1 α x)
    (@function.comp.{u+1 u+1 (max u v)+1} α β (@state_t.{u v} σ m inst_1 β)
      (@state_t_return.{u v} σ m inst_1 β) g))
  (@state_t_return.{u v} σ m inst_1 β (g x))
  (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
    (@state_t_bind.{u v} σ m inst_1 α β (@state_t_return.{u v} σ m inst_1 α x)
      (@function.comp.{u+1 u+1 (max u v)+1} α β (@state_t.{u v} σ m inst_1 β)
        (@state_t_return.{u v} σ m inst_1 β) g))
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
          f)) α β g (@state_t_return.{u v} σ m inst_1 α x))
    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_return.{u v} σ m inst_1)) β_0) f))) α β g
      (@state_t_return.{u v} σ m inst_1 α x)))
  ((λ (α_0 β_0 : Type u) (x_0 : α_0)
      (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0)),
    @funext.{u+1 v+1} σ (λ (x_1 : σ), m (@prod.{u u} β_0 σ))
      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f) (f x_0)
      (λ (x_1 : σ),
      @eq.mpr.{0}
        (@eq.{v+1} (m (@prod.{u u} β_0 σ))
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
            (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1) (f x_0 x_1))
        @true
        (@id_locked.{0}
          (@eq.{1} Prop
            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
              (f x_0 x_1)) @true)
          (@eq.trans.{1} Prop
            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
              (f x_0 x_1))
            (@eq.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1) (f x_0 x_1)) @true
            ((λ (a a_0 : m (@prod.{u u} β_0 σ))
                (e_1 : @eq.{v+1} (m (@prod.{u u} β_0 σ)) a a_0)
                (a_1 a_2 : m (@prod.{u u} β_0 σ))
                (e_2 : @eq.{v+1} (m (@prod.{u u} β_0 σ)) a_1 a_2),
              @congr.{v+1 1} (m (@prod.{u u} β_0 σ)) Prop
                (@eq.{v+1} (m (@prod.{u u} β_0 σ)) a)
                (@eq.{v+1} (m (@prod.{u u} β_0 σ)) a_0) a_1 a_2
                (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} β_0 σ))
                  (∀ (a_3 : m (@prod.{u u} β_0 σ)), Prop) a a_0
                  (@eq.{v+1} (m (@prod.{u u} β_0 σ))) e_1) e_2)
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
              (f x_0 x_1)
              (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                  (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
                ((λ (s : σ),
                  (λ (this : m (@prod.{u u} β_0 σ)), this)
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                      ((λ (s_0 : σ),
                        @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                          (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                      (λ (p : @prod.{u u} α_0 σ),
                      @state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f p)))
                  x_1) (f x_0 x_1)
                (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                  (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f x_1)
                  (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                    (λ (s : σ),
                    @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                      (@prod.mk.{u u} α_0 σ x_0 s)) f x_1)
                  ((λ (s : σ),
                    (λ (this : m (@prod.{u u} β_0 σ)), this)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} β_0 σ)
                        ((λ (s_0 : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                            (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                        (λ (p : @prod.{u u} α_0 σ),
                        @state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f p)))
                    x_1)
                  ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_0)
                      (e_1 :
                        @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_0) act
                          act_0)
                      (act_1 act_2 :
                        (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0))
                      (e_2 :
                        @eq.{max (u+1) ((max u v)+1)}
                          (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0) act_1
                          act_2) (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
                    @congr.{u+1 v+1} σ (m (@prod.{u u} β_0 σ))
                      (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act act_1)
                      (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act_0 act_2) a a_0
                      (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                        (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0)
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act)
                        (@state_t_bind.{u v} σ m inst_1 α_0 β_0 act_0) act_1
                        act_2
                        (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                          (@state_t.{u v} σ m inst_1 α_0)
                          (∀ (act_3 :
                              (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 β_0)),
                          @state_t.{u v} σ m inst_1 β_0) act act_0
                          (@state_t_bind.{u v} σ m inst_1 α_0 β_0) e_1) e_2)
                      e_3)
                    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_return.{u v} σ m inst_1)) α_0 x_0)
                    (λ (s : σ),
                    @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                      (@prod.mk.{u u} α_0 σ x_0 s))
                    (@state_t_return.equations._eqn_1.{u v} σ m inst_1 α_0 x_0)
                    f f
                    (@eq.refl.{max (u+1) ((max u v)+1)}
                      (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0) f) x_1 x_1
                    (@eq.refl.{u+1} σ x_1))
                  (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} β_0 σ))
                    (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                      (λ (s : σ),
                      @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                        (@prod.mk.{u u} α_0 σ x_0 s)) f)
                    (λ (s : σ),
                    (λ (this : m (@prod.{u u} β_0 σ)), this)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} β_0 σ)
                        ((λ (s_0 : σ),
                          @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                            (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                        (λ (p : @prod.{u u} α_0 σ),
                        @state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f p)))
                    (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_0 β_0
                      (λ (s : σ),
                      @return.{u v} m inst_1 (@prod.{u u} α_0 σ)
                        (@prod.mk.{u u} α_0 σ x_0 s)) f) x_1))
                (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                    (@has_pure.pure.{u v} m
                      (@applicative.to_has_pure.{u v} m
                        (@monad.to_applicative.{u v} m inst_1))
                      (@prod.{u u} α_0 σ) (@prod.mk.{u u} α_0 σ x_0 x_1))
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f))
                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                    (@prod.mk.{u u} α_0 σ x_0 x_1)) (f x_0 x_1)
                  (@monad.pure_bind.{u v} m inst_1 (@prod.{u u} α_0 σ)
                    (@prod.{u u} β_0 σ) (@prod.mk.{u u} α_0 σ x_0 x_1)
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f))
                  (@state_t_bind._match_1.equations._eqn_1.{v u} σ m inst_1 α_0
                    β_0 f x_0 x_1))) (f x_0 x_1) (f x_0 x_1)
              (@eq.refl.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1)))
            (@propext
              (@eq.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1) (f x_0 x_1)) @true
              (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1)))))
        @trivial)) α β x
    (@function.comp.{u+1 u+1 (max u v)+1} α β (@state_t.{u v} σ m inst_1 β)
      (@state_t_return.{u v} σ m inst_1 β) g)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_8,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (g : @state_t.{u v} σ m inst_1 (∀ (a : α), β)) (x : α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β g
    (@state_t_return.{u v} σ m inst_1 α x))
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) (∀ (a : α), β) β (λ (g_0 : (∀ (a : α), β)), g_0 x) g),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (g : @state_t.{u v} σ m inst_1 (∀ (a : α), β)) (x : α),
@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β g
    (@state_t_return.{u v} σ m inst_1 α x))
  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
    (λ (g_0 : (∀ (a : α), β)), @state_t_return.{u v} σ m inst_1 β (g_0 x)))
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
        (@state_t.{u v} σ m inst_1 β_0) (@state_t_return.{u v} σ m inst_1 β_0)
        f)) (∀ (a : α), β) β (λ (g_0 : (∀ (a : α), β)), g_0 x) g)
  (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      g (@state_t_return.{u v} σ m inst_1 α x))
    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
      (λ (x_0 : (∀ (a : α), β)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) α β x_0
        (@state_t_return.{u v} σ m inst_1 α x)))
    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
      (λ (g_0 : (∀ (a : α), β)), @state_t_return.{u v} σ m inst_1 β (g_0 x)))
    (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
        (λ (x_0 : (∀ (a : α), β)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α β x_0
          (@state_t_return.{u v} σ m inst_1 α x)))
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        β g (@state_t_return.{u v} σ m inst_1 α x))
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0))
                (λ (α_1 β_1 : Type u),
                @function.comp.{u+1 u+1 (max u v)+1} α_1 (∀ (a : β_1), α_1)
                  (∀ (a : @state_t.{u v} σ m inst_1 β_1),
                  @state_t.{u v} σ m inst_1 α_1)
                  ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                      (x_2 : @state_t.{u v} σ m inst_1 α_2),
                    @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                        (@state_t.{u v} σ m inst_1 β_2)
                        (@state_t_return.{u v} σ m inst_1 β_2) f_0)) β_1 α_1)
                  (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0 x_1 x_0))) α β g
        (@state_t_return.{u v} σ m inst_1 α x)))
    (@congr_arg.{max (u+1) ((max u v)+1) (max u v)+1}
      (∀ (x_0 : (∀ (a : α), β)), @state_t.{u v} σ m inst_1 β)
      (@state_t.{u v} σ m inst_1 β)
      (λ (x_0 : (∀ (a : α), β)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) α β x_0
        (@state_t_return.{u v} σ m inst_1 α x))
      (λ (g_0 : (∀ (a : α), β)), @state_t_return.{u v} σ m inst_1 β (g_0 x))
      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g)
      (@funext.{u+1 (max u v)+1} (∀ (a : α), β)
        (λ (x_0 : (∀ (a : α), β)), @state_t.{u v} σ m inst_1 β)
        (λ (x_0 : (∀ (a : α), β)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α β x_0
          (@state_t_return.{u v} σ m inst_1 α x))
        (λ (g_0 : (∀ (a : α), β)), @state_t_return.{u v} σ m inst_1 β (g_0 x))
        (λ (g_0 : (∀ (a : α), β)),
        (λ (α_0 β_0 : Type u) (g_1 : (∀ (a : α_0), β_0)) (x_0 : α_0),
          @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
            ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                (x_1 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_1
              (@state_t_return.{u v} σ m inst_1 α_0 x_0))
            (@state_t_bind.{u v} σ m inst_1 α_0 β_0
              (@state_t_return.{u v} σ m inst_1 α_0 x_0)
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) g_1))
            (@state_t_return.{u v} σ m inst_1 β_0 (g_1 x_0))
            (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                (@state_t_return.{u v} σ m inst_1 α_0 x_0)
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) g_1))
              ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f)) α_0 β_0 g_1
                (@state_t_return.{u v} σ m inst_1 α_0 x_0))
              ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
                  (x_1 : @state_t.{u v} σ m inst_1 α_1),
                @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_1)
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) α_1 β_1 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) β_1) f))) α_0 β_0
                g_1 (@state_t_return.{u v} σ m inst_1 α_0 x_0)))
            ((λ (α_1 β_1 : Type u) (x_1 : α_1)
                (f : (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1)),
              @funext.{u+1 v+1} σ (λ (x_2 : σ), m (@prod.{u u} β_1 σ))
                (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                  (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f) (f x_1)
                (λ (x_1_0 : σ),
                @eq.mpr.{0}
                  (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f x_1_0)
                    (f x_1 x_1_0)) @true
                  (@id_locked.{0}
                    (@eq.{1} Prop
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                          x_1_0) (f x_1 x_1_0)) @true)
                    (@eq.trans.{1} Prop
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ))
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                          x_1_0) (f x_1 x_1_0))
                      (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                        (f x_1 x_1_0)) @true
                      ((λ (a a_0 : m (@prod.{u u} β_1 σ))
                          (e_1 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a a_0)
                          (a_1 a_2 : m (@prod.{u u} β_1 σ))
                          (e_2 : @eq.{v+1} (m (@prod.{u u} β_1 σ)) a_1 a_2),
                        @congr.{v+1 1} (m (@prod.{u u} β_1 σ)) Prop
                          (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a)
                          (@eq.{v+1} (m (@prod.{u u} β_1 σ)) a_0) a_1 a_2
                          (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} β_1 σ))
                            (∀ (a_3 : m (@prod.{u u} β_1 σ)), Prop) a a_0
                            (@eq.{v+1} (m (@prod.{u u} β_1 σ))) e_1) e_2)
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_1 β_1
                          (@has_pure.pure.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_pure.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                          x_1_0) (f x_1 x_1_0)
                        (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                          (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                            x_1_0)
                          ((λ (s : σ),
                            (λ (this : m (@prod.{u u} β_1 σ)), this)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                ((λ (s_0 : σ),
                                  @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                    (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                (λ (p : @prod.{u u} α_1 σ),
                                @state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                  f p))) x_1_0) (f x_1 x_1_0)
                          (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                              (@has_pure.pure.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_pure.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_return.{u v} σ m inst_1)) α_1 x_1) f
                              x_1_0)
                            (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                              (λ (s : σ),
                              @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                (@prod.mk.{u u} α_1 σ x_1 s)) f x_1_0)
                            ((λ (s : σ),
                              (λ (this : m (@prod.{u u} β_1 σ)), this)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                  ((λ (s_0 : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                  (λ (p : @prod.{u u} α_1 σ),
                                  @state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f p))) x_1_0)
                            ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_1)
                                (e_1 :
                                  @eq.{(max u v)+1}
                                    (@state_t.{u v} σ m inst_1 α_1) act act_0)
                                (act_1 act_2 :
                                  (∀ (a_1 : α_1),
                                  @state_t.{u v} σ m inst_1 β_1))
                                (e_2 :
                                  @eq.{max (u+1) ((max u v)+1)}
                                    (∀ (a_1 : α_1),
                                    @state_t.{u v} σ m inst_1 β_1) act_1 act_2)
                                (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
                              @congr.{u+1 v+1} σ (m (@prod.{u u} β_1 σ))
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act
                                  act_1)
                                (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0
                                  act_2) a a_0
                                (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                                  (∀ (a_1 : α_1), @state_t.{u v} σ m inst_1 β_1)
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act)
                                  (@state_t_bind.{u v} σ m inst_1 α_1 β_1 act_0)
                                  act_1 act_2
                                  (@congr_arg.{(max u
                                    v)+1 max (u+1) ((max u v)+1)}
                                    (@state_t.{u v} σ m inst_1 α_1)
                                    (∀ (act_3 :
                                        (∀ (a_1 : α_1),
                                        @state_t.{u v} σ m inst_1 β_1)),
                                    @state_t.{u v} σ m inst_1 β_1) act act_0
                                    (@state_t_bind.{u v} σ m inst_1 α_1 β_1)
                                    e_1) e_2) e_3)
                              (@has_pure.pure.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_pure.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_return.{u v} σ m inst_1)) α_1 x_1)
                              (λ (s : σ),
                              @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                (@prod.mk.{u u} α_1 σ x_1 s))
                              (@state_t_return.equations._eqn_1.{u v} σ m inst_1
                                α_1 x_1) f f
                              (@eq.refl.{max (u+1) ((max u v)+1)}
                                (∀ (a : α_1), @state_t.{u v} σ m inst_1 β_1) f)
                              x_1_0 x_1_0 (@eq.refl.{u+1} σ x_1_0))
                            (@congr_fun.{u+1 v+1} σ
                              (λ (a : σ), m (@prod.{u u} β_1 σ))
                              (@state_t_bind.{u v} σ m inst_1 α_1 β_1
                                (λ (s : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s)) f)
                              (λ (s : σ),
                              (λ (this : m (@prod.{u u} β_1 σ)), this)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                                  ((λ (s_0 : σ),
                                    @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                      (@prod.mk.{u u} α_1 σ x_1 s_0)) s)
                                  (λ (p : @prod.{u u} α_1 σ),
                                  @state_t_bind._match_1.{u v} σ m inst_1 α_1
                                    β_1 f p)))
                              (@state_t_bind.equations._eqn_1.{u v} σ m inst_1
                                α_1 β_1
                                (λ (s : σ),
                                @return.{u v} m inst_1 (@prod.{u u} α_1 σ)
                                  (@prod.mk.{u u} α_1 σ x_1 s)) f) x_1_0))
                          (@eq.trans.{v+1} (m (@prod.{u u} β_1 σ))
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_1 σ) (@prod.{u u} β_1 σ)
                              (@has_pure.pure.{u v} m
                                (@applicative.to_has_pure.{u v} m
                                  (@monad.to_applicative.{u v} m inst_1))
                                (@prod.{u u} α_1 σ)
                                (@prod.mk.{u u} α_1 σ x_1 x_1_0))
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                f))
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1 f
                              (@prod.mk.{u u} α_1 σ x_1 x_1_0)) (f x_1 x_1_0)
                            (@monad.pure_bind.{u v} m inst_1 (@prod.{u u} α_1 σ)
                              (@prod.{u u} β_1 σ)
                              (@prod.mk.{u u} α_1 σ x_1 x_1_0)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_1 β_1
                                f))
                            (@state_t_bind._match_1.equations._eqn_1.{v u} σ m
                              inst_1 α_1 β_1 f x_1 x_1_0))) (f x_1 x_1_0)
                        (f x_1 x_1_0)
                        (@eq.refl.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)))
                      (@propext
                        (@eq.{v+1} (m (@prod.{u u} β_1 σ)) (f x_1 x_1_0)
                          (f x_1 x_1_0)) @true
                        (@eq_self_iff_true.{v+1} (m (@prod.{u u} β_1 σ))
                          (f x_1 x_1_0))))) @trivial)) α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) g_1))) α β g_0 x))))
  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0
        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
          (@state_t.{u v} σ m inst_1 β_0)
          (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_return.{u v} σ m inst_1)) β_0) f))) (∀ (a : α), β) β
    (λ (x_0 : (∀ (a : α), β)), x_0 x) g),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_9,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β γ : Type u) (x : @state_t.{u v} σ m inst_1 α)
  (g : @state_t.{u v} σ m inst_1 (∀ (a : α), β))
  (h : @state_t.{u v} σ m inst_1 (∀ (a : β), γ)),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ h
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      g x))
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β γ : Type u) (x : @state_t.{u v} σ m inst_1 α)
  (g : @state_t.{u v} σ m inst_1 (∀ (a : α), β))
  (h : @state_t.{u v} σ m inst_1 (∀ (a : β), γ)),
@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ h
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      g x))
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
    (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
      (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h)
      (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
        (∀ (a : α), γ) x_0 g)) x)
  ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @state_t.{u v} σ m inst_1 α_0),
    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @state_t.{u v} σ m inst_1 α_1),
        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
            (@state_t.{u v} σ m inst_1 β_1)
            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x)
  (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ
      h
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        β g x))
    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
      (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (∀ (a : α), γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
          (∀ (a : α), γ) x_0 g))
      (λ (x_0 : (∀ (a : α), γ)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
      (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (∀ (a : α), γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
          (∀ (a : α), γ) x_0 g)) x)
    (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β
        γ h
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          α β g x))
      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
        (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
            (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
              (@state_t.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@state_t_return.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@function.comp.{u+1 u+1 u+1} α β γ)))
          (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_0 g))
        (λ (x_0 : (∀ (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
        (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)
          (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_0 g))
        (λ (x_0 : (∀ (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
      (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
        ((λ (α_0 β_0 : Type u)
            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          β γ h
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) α β g x))
        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
            (λ (h_0 : (∀ (a : β), γ)),
            @state_t_bind.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@state_t_return.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h_0))
              (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_0 g)))
          (λ (x_0 : (∀ (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
          (@state_t_bind.{u v} σ m inst_1
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
              (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@state_t.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@state_t_return.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@function.comp.{u+1 u+1 u+1} α β γ)))
            (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) x_0 g))
          (λ (x_0 : (∀ (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
        (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
          ((λ (α_0 β_0 : Type u)
              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                    (@state_t.{u v} σ m inst_1 β_1)
                    (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) β γ h
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) α β g x))
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) γ h
            (λ (h_0 : (∀ (a : β), γ)),
            @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
              (@state_t_bind.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@state_t_return.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x)))
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
              (λ (h_0 : (∀ (a : β), γ)),
              @state_t_bind.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@state_t_return.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g)))
            (λ (x_0 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
          (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            ((λ (α_0 β_0 : Type u)
                (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                      (@state_t.{u v} σ m inst_1 β_1)
                      (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) β γ h
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) α β g x))
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) γ h
              (λ (x_0 : (∀ (a : β), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ x_0
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_2 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_2 x_1)) α β g x)))
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) γ h
              (λ (h_0 : (∀ (a : β), γ)),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                (@state_t_bind.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@state_t_return.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f))
                    (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                (λ (x_0 : (∀ (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x)))
            (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
              (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) γ h
                (λ (x_0 : (∀ (a : β), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ x_0
                  ((λ (α_0 β_0 : Type u)
                      (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                      (λ (x_2 : (∀ (a : α_0), β_0)),
                      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                          (x_3 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                        x_2 x_1)) α β g x)))
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                        (@state_t.{u v} σ m inst_1 β_1)
                        (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) β γ h
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_1 x_0)) α β g x))
              ((λ (α_0 β_0 : Type u)
                  (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f_0))
                        (λ (α_1 β_1 : Type u),
                        @function.comp.{u+1 u+1 (max u v)+1} α_1
                          (∀ (a : β_1), α_1)
                          (∀ (a : @state_t.{u v} σ m inst_1 β_1),
                          @state_t.{u v} σ m inst_1 α_1)
                          ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                              (x_2 : @state_t.{u v} σ m inst_1 α_2),
                            @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                                (@state_t.{u v} σ m inst_1 β_2)
                                (@state_t_return.{u v} σ m inst_1 β_2) f_0)) β_1
                            α_1) (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0
                      x_1 x_0))) β γ h
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_1 x_0)) α β g x)))
            (@congr_arg.{max (u+1) ((max u v)+1) (max u v)+1}
              (∀ (x_0 : (∀ (a : β), γ)), @state_t.{u v} σ m inst_1 γ)
              (@state_t.{u v} σ m inst_1 γ)
              (λ (x_0 : (∀ (a : β), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ x_0
                ((λ (α_0 β_0 : Type u)
                    (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_2 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_3 : @state_t.{u v} σ m inst_1 α_1),
                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                          (@state_t.{u v} σ m inst_1 β_1)
                          (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                      x_2 x_1)) α β g x))
              (λ (h_0 : (∀ (a : β), γ)),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                (@state_t_bind.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@state_t_return.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f))
                    (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                (λ (x_0 : (∀ (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
              (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) γ h)
              (@funext.{u+1 (max u v)+1} (∀ (a : β), γ)
                (λ (x_0 : (∀ (a : β), γ)), @state_t.{u v} σ m inst_1 γ)
                (λ (x_0 : (∀ (a : β), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ x_0
                  ((λ (α_0 β_0 : Type u)
                      (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                      (λ (x_2 : (∀ (a : α_0), β_0)),
                      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                          (x_3 : @state_t.{u v} σ m inst_1 α_1),
                        @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
                          (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                            (@state_t.{u v} σ m inst_1 β_1)
                            (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0
                        x_2 x_1)) α β g x))
                (λ (h_0 : (∀ (a : β), γ)),
                @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                  (@state_t_bind.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                    (@state_t_return.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                      (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                    (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_1 : @state_t.{u v} σ m inst_1 α_0),
                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                          (@state_t.{u v} σ m inst_1 β_0)
                          (@state_t_return.{u v} σ m inst_1 β_0) f))
                      (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                  (λ (x_0 : (∀ (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
                (λ (h_0 : (∀ (a : β), γ)),
                @eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_0 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ h_0
                    ((λ (α_0 β_0 : Type u)
                        (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                        (x_0 : @state_t.{u v} σ m inst_1 α_0),
                      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                        (λ (x_1 : (∀ (a : α_0), β_0)),
                        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                            (x_2 : @state_t.{u v} σ m inst_1 α_1),
                          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                              (@state_t.{u v} σ m inst_1 β_1)
                              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0
                          β_0 x_1 x_0)) α β g x))
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_0 : @state_t.{u v} σ m inst_1 α_0),
                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                          (@state_t.{u v} σ m inst_1 β_0)
                          (@state_t_return.{u v} σ m inst_1 β_0) f))
                      (∀ (a : α), β) (∀ (a : α), γ)
                      (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                    (λ (x_0 : (∀ (a : α), γ)),
                    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_1 : @state_t.{u v} σ m inst_1 α_0),
                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                          (@state_t.{u v} σ m inst_1 β_0)
                          (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                    (@state_t_bind.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                      (@state_t_return.{u v} σ m inst_1
                        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                      (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                    (λ (x_0 : (∀ (a : α), γ)),
                    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_1 : @state_t.{u v} σ m inst_1 α_0),
                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                          (@state_t.{u v} σ m inst_1 β_0)
                          (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
                  (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_0 : @state_t.{u v} σ m inst_1 α_0),
                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                        (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                          (@state_t.{u v} σ m inst_1 β_0)
                          (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ h_0
                      ((λ (α_0 β_0 : Type u)
                          (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
                          (λ (x_1 : (∀ (a : α_0), β_0)),
                          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                              (x_2 : @state_t.{u v} σ m inst_1 α_1),
                            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                (@state_t.{u v} σ m inst_1 β_1)
                                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0
                            β_0 x_1 x_0)) α β g x))
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                        (∀ (a : α), γ) g
                        (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                          (∀ (a : α), γ)
                          (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                          (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                      (λ (x_0 : (∀ (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0
                        x))
                    (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                      (λ (x_0 : (∀ (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0
                        x))
                    (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ h_0
                        ((λ (α_0 β_0 : Type u)
                            (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                            (x_0 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0
                            f
                            (λ (x_1 : (∀ (a : α_0), β_0)),
                            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                                (x_2 : @state_t.{u v} σ m inst_1 α_1),
                              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                  (@state_t.{u v} σ m inst_1 β_1)
                                  (@state_t_return.{u v} σ m inst_1 β_1) f_0))
                              α_0 β_0 x_1 x_0)) α β g x))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) γ g
                        (λ (g_0 : (∀ (a : α), β)),
                        @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                          (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                            (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                            x_0 x)))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                          (∀ (a : α), γ) g
                          (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                            (∀ (a : α), γ)
                            (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                            (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                        (λ (x_0 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0
                          x))
                      (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_0 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ h_0
                          ((λ (α_0 β_0 : Type u)
                              (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                              (x_0 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0)
                              β_0 f
                              (λ (x_1 : (∀ (a : α_0), β_0)),
                              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                                  (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                                    (@state_t.{u v} σ m inst_1 β_1)
                                    (@state_t_return.{u v} σ m inst_1 β_1) f_0))
                                α_0 β_0 x_1 x_0)) α β g x))
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) γ g
                          (λ (g_0 : (∀ (a : α), β)),
                          @state_t_bind.{u v} σ m inst_1 β γ
                            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_0 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α β
                              g_0 x)
                            (@function.comp.{u+1 u+1 (max u v)+1} β γ
                              (@state_t.{u v} σ m inst_1 γ)
                              (@state_t_return.{u v} σ m inst_1 γ) h_0)))
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) γ g
                          (λ (g_0 : (∀ (a : α), β)),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                            (λ (x_0 : (∀ (a : α), γ)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                              x_0 x)))
                        (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_0 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ
                            h_0
                            ((λ (α_0 β_0 : Type u)
                                (f :
                                  @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
                                (x_0 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0)
                                β_0 f
                                (λ (x_1 : (∀ (a : α_0), β_0)),
                                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                                    (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                  @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                      β_1 (@state_t.{u v} σ m inst_1 β_1)
                                      (@state_t_return.{u v} σ m inst_1 β_1)
                                      f_0)) α_0 β_0 x_1 x_0)) α β g x))
                          (@state_t_bind.{u v} σ m inst_1 β γ
                            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
                              (λ (x_0 : (∀ (a : α), β)),
                              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α
                                β x_0 x))
                            (@function.comp.{u+1 u+1 (max u v)+1} β γ
                              (@state_t.{u v} σ m inst_1 γ)
                              (@state_t_return.{u v} σ m inst_1 γ) h_0))
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) γ g
                            (λ (g_0 : (∀ (a : α), β)),
                            @state_t_bind.{u v} σ m inst_1 β γ
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α
                                β g_0 x)
                              (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_return.{u v} σ m inst_1 γ) h_0)))
                          (@eq.trans.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_0 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) β γ
                              h_0
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), β_0) β_0 f
                                  (λ (x_1 : (∀ (a : α_0), β_0)),
                                  (λ (α_1 β_1 : Type u)
                                      (f_0 : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f_0)) α_0 β_0 x_1 x_0)) α β g x))
                            (@state_t_bind.{u v} σ m inst_1 β γ
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), β_0) β_0 f
                                  (λ (x_1 : (∀ (a : α_0), β_0)),
                                  (λ (α_1 β_1 : Type u)
                                      (f_0 : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f_0)) α_0 β_0 x_1 x_0)) α β g x)
                              (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_return.{u v} σ m inst_1 γ) h_0))
                            (@state_t_bind.{u v} σ m inst_1 β γ
                              (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
                                (λ (x_0 : (∀ (a : α), β)),
                                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@state_t_return.{u v} σ m inst_1 β_0) f))
                                  α β x_0 x))
                              (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_return.{u v} σ m inst_1 γ) h_0))
                            (@eq.symm.{(max u v)+1}
                              (@state_t.{u v} σ m inst_1 γ)
                              (@state_t_bind.{u v} σ m inst_1 β γ
                                ((λ (α_0 β_0 : Type u)
                                    (f :
                                      @state_t.{u v} σ m inst_1
                                        (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f_0 : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f_0)) α_0 β_0 x_1 x_0)) α β g x)
                                (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                  (@state_t.{u v} σ m inst_1 γ)
                                  (@state_t_return.{u v} σ m inst_1 γ) h_0))
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@state_t_return.{u v} σ m inst_1 β_0) f)) β
                                γ h_0
                                ((λ (α_0 β_0 : Type u)
                                    (f :
                                      @state_t.{u v} σ m inst_1
                                        (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f_0 : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f_0)) α_0 β_0 x_1 x_0)) α β g x))
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @rfl.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                    x_0
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@has_pure.pure.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_pure.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_return.{u v} σ m inst_1))
                                        β_0) f))) β γ h_0
                                ((λ (α_0 β_0 : Type u)
                                    (f :
                                      @state_t.{u v} σ m inst_1
                                        (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f_0 : (∀ (a : α_1), β_1))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                      @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_1 β_1
                                          (@state_t.{u v} σ m inst_1 β_1)
                                          (@state_t_return.{u v} σ m inst_1 β_1)
                                          f_0)) α_0 β_0 x_1 x_0)) α β g x)))
                            (@eq.rec.{0 (max u v)+1}
                              (@state_t.{u v} σ m inst_1 β)
                              (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β g
                                (λ (x_0 : (∀ (a : α), β)),
                                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@state_t_return.{u v} σ m inst_1 β_0) f))
                                  α β x_0 x))
                              (λ (x_0 : @state_t.{u v} σ m inst_1 β),
                              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_bind.{u v} σ m inst_1 β γ x_0
                                  (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                    (@state_t.{u v} σ m inst_1 γ)
                                    (@state_t_return.{u v} σ m inst_1 γ) h_0))
                                (@state_t_bind.{u v} σ m inst_1 β γ
                                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                                    β g
                                    (λ (x_1 : (∀ (a : α), β)),
                                    (λ (α_0 β_0 : Type u)
                                        (f : (∀ (a : α_0), β_0))
                                        (x_2 : @state_t.{u v} σ m inst_1 α_0),
                                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_0 β_0
                                          (@state_t.{u v} σ m inst_1 β_0)
                                          (@state_t_return.{u v} σ m inst_1 β_0)
                                          f)) α β x_1 x))
                                  (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                    (@state_t.{u v} σ m inst_1 γ)
                                    (@state_t_return.{u v} σ m inst_1 γ) h_0)))
                              (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_bind.{u v} σ m inst_1 β γ
                                  (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                                    β g
                                    (λ (x_0 : (∀ (a : α), β)),
                                    (λ (α_0 β_0 : Type u)
                                        (f : (∀ (a : α_0), β_0))
                                        (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_0 β_0
                                          (@state_t.{u v} σ m inst_1 β_0)
                                          (@state_t_return.{u v} σ m inst_1 β_0)
                                          f)) α β x_0 x))
                                  (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                    (@state_t.{u v} σ m inst_1 γ)
                                    (@state_t_return.{u v} σ m inst_1 γ) h_0)))
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1
                                  (∀ (a : α_0), β_0) β_0 f
                                  (λ (x_1 : (∀ (a : α_0), β_0)),
                                  (λ (α_1 β_1 : Type u)
                                      (f_0 : (∀ (a : α_1), β_1))
                                      (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                    @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_1
                                        β_1 (@state_t.{u v} σ m inst_1 β_1)
                                        (@state_t_return.{u v} σ m inst_1 β_1)
                                        f_0)) α_0 β_0 x_1 x_0)) α β g x)
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @state_t.{u v} σ m inst_1
                                      (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @rfl.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1))
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    @has_map.map.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_map.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (λ (α_1 β_1 : Type u)
                                          (f_0 : (∀ (a : α_1), β_1))
                                          (x_2 : @state_t.{u v} σ m inst_1 α_1),
                                        @state_t_bind.{u v} σ m inst_1 α_1 β_1
                                          x_2
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_1 β_1
                                            (@state_t.{u v} σ m inst_1 β_1)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_1) f_0))
                                        (λ (α_1 β_1 : Type u),
                                        @function.comp.{u+1 u+1 (max u v)+1} α_1
                                          (∀ (a : β_1), α_1)
                                          (∀ (a :
                                              @state_t.{u v} σ m inst_1 β_1),
                                          @state_t.{u v} σ m inst_1 α_1)
                                          ((λ (α_2 β_2 : Type u)
                                              (f_0 : (∀ (a : α_2), β_2))
                                              (x_2 :
                                                @state_t.{u v} σ m inst_1 α_2),
                                            @state_t_bind.{u v} σ m inst_1 α_2
                                              β_2 x_2
                                              (@function.comp.{u+1 u+1
                                                (max u
                                                v)+1} α_2 β_2
                                                (@state_t.{u v} σ m inst_1 β_2)
                                                (@state_t_return.{u v} σ m
                                                  inst_1 β_2) f_0)) β_1 α_1)
                                          (@function.const.{u+1 u+1} α_1 β_1)))
                                      α_0 β_0 x_1 x_0))) α β g x)))
                          ((λ (α_0 β_0 γ_0 : Type u)
                              (x_0 : @state_t.{u v} σ m inst_1 α_0)
                              (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0))
                              (g_0 :
                                (∀ (a : β_0), @state_t.{u v} σ m inst_1 γ_0)),
                            @funext.{u+1 v+1} σ
                              (λ (x_1 : σ), m (@prod.{u u} γ_0 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                  x_0 f) g_0)
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                                (λ (x_1 : α_0),
                                @has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                  (f x_1) g_0))
                              (λ (x_1 : σ),
                              @eq.mpr.{0}
                                (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_0
                                      β_0 x_0 f) g_0 x_1)
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0
                                    x_0
                                    (λ (x_2 : α_0),
                                    @has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_0
                                      γ_0 (f x_2) g_0) x_1))
                                (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                    (x_0 x_1)
                                    (λ (x_2 : @prod.{u u} α_0 σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 β_0 f x_2)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0)))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                    (x_0 x_1)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      γ_0
                                      (λ (x_2 : α_0) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))))
                                (@id_locked.{0}
                                  (@eq.{1} Prop
                                    (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) β_0
                                        γ_0
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_0 β_0 x_0 f) g_0 x_1)
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_0
                                        γ_0 x_0
                                        (λ (x_2 : α_0),
                                        @has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          β_0 γ_0 (f x_2) g_0) x_1))
                                    (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                        (x_0 x_1)
                                        (λ (x_2 : @prod.{u u} α_0 σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f x_2)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0)))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                        (x_0 x_1)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 γ_0
                                          (λ (x_2 : α_0) (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ) (f x_2 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0))))))
                                  ((λ (a a_0 : m (@prod.{u u} γ_0 σ))
                                      (e_1 :
                                        @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a a_0)
                                      (a_1 a_2 : m (@prod.{u u} γ_0 σ))
                                      (e_2 :
                                        @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_1
                                          a_2),
                                    @congr.{v+1 1} (m (@prod.{u u} γ_0 σ)) Prop
                                      (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a)
                                      (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_0)
                                      a_1 a_2
                                      (@congr_arg.{v+1 max (v+1) 1}
                                        (m (@prod.{u u} γ_0 σ))
                                        (∀ (a_3 : m (@prod.{u u} γ_0 σ)), Prop)
                                        a a_0
                                        (@eq.{v+1} (m (@prod.{u u} γ_0 σ))) e_1)
                                      e_2)
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_0
                                      γ_0
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_0
                                        β_0 x_0 f) g_0 x_1)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                      (x_0 x_1)
                                      (λ (x_2 : @prod.{u u} α_0 σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f x_2)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))
                                    (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_0 β_0 x_0 f) g_0 x_1)
                                      ((λ (s : σ),
                                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ)
                                            ((λ (s_0 : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_0 σ)
                                                (@prod.{u u} β_0 σ) (x_0 s_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 β_0 f)) s)
                                            (λ (p : @prod.{u u} β_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0 p))) x_1)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                        (x_0 x_1)
                                        (λ (x_2 : @prod.{u u} α_0 σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f x_2)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0)))
                                      (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_0 β_0 x_0 f) g_0 x_1)
                                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                          (λ (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} β_0 σ) (x_0 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 β_0 f)) g_0 x_1)
                                        ((λ (s : σ),
                                          (λ (this : m (@prod.{u u} γ_0 σ)),
                                            this)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_0 σ)
                                              (@prod.{u u} γ_0 σ)
                                              ((λ (s_0 : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} β_0 σ) (x_0 s_0)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 β_0 f)) s)
                                              (λ (p : @prod.{u u} β_0 σ),
                                              @state_t_bind._match_1.{u v} σ m
                                                inst_1 β_0 γ_0 g_0 p))) x_1)
                                        ((λ (act act_0 :
                                              @state_t.{u v} σ m inst_1 β_0)
                                            (e_1 :
                                              @eq.{(max u v)+1}
                                                (@state_t.{u v} σ m inst_1 β_0)
                                                act act_0)
                                            (act_1 act_2 :
                                              (∀ (a_1 : β_0),
                                              @state_t.{u v} σ m inst_1 γ_0))
                                            (e_2 :
                                              @eq.{max (u+1) ((max u v)+1)}
                                                (∀ (a_1 : β_0),
                                                @state_t.{u v} σ m inst_1 γ_0)
                                                act_1 act_2) (a a_0 : σ)
                                            (e_3 : @eq.{u+1} σ a a_0),
                                          @congr.{u+1 v+1} σ
                                            (m (@prod.{u u} γ_0 σ))
                                            (@state_t_bind.{u v} σ m inst_1 β_0
                                              γ_0 act act_1)
                                            (@state_t_bind.{u v} σ m inst_1 β_0
                                              γ_0 act_0 act_2) a a_0
                                            (@congr.{max (u+1)
                                              ((max u
                                              v)+1) (max u v)+1}
                                              (∀ (a_1 : β_0),
                                              @state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t.{u v} σ m inst_1 γ_0)
                                              (@state_t_bind.{u v} σ m inst_1
                                                β_0 γ_0 act)
                                              (@state_t_bind.{u v} σ m inst_1
                                                β_0 γ_0 act_0) act_1 act_2
                                              (@congr_arg.{(max u
                                                v)+1 max (u+1) ((max u v)+1)}
                                                (@state_t.{u v} σ m inst_1 β_0)
                                                (∀ (act_3 :
                                                    (∀ (a_1 : β_0),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_0)),
                                                @state_t.{u v} σ m inst_1 γ_0)
                                                act act_0
                                                (@state_t_bind.{u v} σ m inst_1
                                                  β_0 γ_0) e_1) e_2) e_3)
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_0 β_0 x_0 f)
                                          (λ (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} β_0 σ) (x_0 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 β_0 f))
                                          (@state_t_bind.equations._eqn_1.{u v}
                                            σ m inst_1 α_0 β_0 x_0 f) g_0 g_0
                                          (@eq.refl.{max (u+1) ((max u v)+1)}
                                            (∀ (a : β_0),
                                            @state_t.{u v} σ m inst_1 γ_0) g_0)
                                          x_1 x_1 (@eq.refl.{u+1} σ x_1))
                                        (@congr_fun.{u+1 v+1} σ
                                          (λ (a : σ), m (@prod.{u u} γ_0 σ))
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0
                                            (λ (s : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_0 σ)
                                              (@prod.{u u} β_0 σ) (x_0 s)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_0 β_0 f)) g_0)
                                          (λ (s : σ),
                                          (λ (this : m (@prod.{u u} γ_0 σ)),
                                            this)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_0 σ)
                                              (@prod.{u u} γ_0 σ)
                                              ((λ (s_0 : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} β_0 σ) (x_0 s_0)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 β_0 f)) s)
                                              (λ (p : @prod.{u u} β_0 σ),
                                              @state_t_bind._match_1.{u v} σ m
                                                inst_1 β_0 γ_0 g_0 p)))
                                          (@state_t_bind.equations._eqn_1.{u v}
                                            σ m inst_1 β_0 γ_0
                                            (λ (s : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_0 σ)
                                              (@prod.{u u} β_0 σ) (x_0 s)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_0 β_0 f)) g_0) x_1))
                                      (@monad.bind_assoc.{u v} m inst_1
                                        (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                        (@prod.{u u} γ_0 σ) (x_0 x_1)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_0
                                      γ_0 x_0
                                      (λ (x_2 : α_0),
                                      @has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) β_0
                                        γ_0 (f x_2) g_0) x_1)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                      (x_0 x_1)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 γ_0
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0))))
                                    (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_0 γ_0
                                        x_0
                                        (λ (x_2 : α_0),
                                        @has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          β_0 γ_0 (f x_2) g_0) x_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_0 γ_0
                                        x_0
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0)) x_1)
                                      ((λ (s : σ),
                                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} γ_0 σ) (x_0 s)
                                            (λ (p : @prod.{u u} α_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 γ_0
                                              (λ (x_2 : α_0) (s_0 : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_0 σ)
                                                (@prod.{u u} γ_0 σ) (f x_2 s_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_0 γ_0 g_0)) p)))
                                        x_1)
                                      ((λ (act act_0 :
                                            @state_t.{u v} σ m inst_1 α_0)
                                          (e_1 :
                                            @eq.{(max u v)+1}
                                              (@state_t.{u v} σ m inst_1 α_0)
                                              act act_0)
                                          (act_1 act_2 :
                                            (∀ (a_1 : α_0),
                                            @state_t.{u v} σ m inst_1 γ_0))
                                          (e_2 :
                                            @eq.{max (u+1) ((max u v)+1)}
                                              (∀ (a_1 : α_0),
                                              @state_t.{u v} σ m inst_1 γ_0)
                                              act_1 act_2) (a a_0 : σ)
                                          (e_3 : @eq.{u+1} σ a a_0),
                                        @congr.{u+1 v+1} σ
                                          (m (@prod.{u u} γ_0 σ))
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            γ_0 act act_1)
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            γ_0 act_0 act_2) a a_0
                                          (@congr.{max (u+1)
                                            ((max u
                                            v)+1) (max u v)+1}
                                            (∀ (a_1 : α_0),
                                            @state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              γ_0 act)
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              γ_0 act_0) act_1 act_2
                                            (@congr_arg.{(max u
                                              v)+1 max (u+1) ((max u v)+1)}
                                              (@state_t.{u v} σ m inst_1 α_0)
                                              (∀ (act_3 :
                                                  (∀ (a_1 : α_0),
                                                  @state_t.{u v} σ m inst_1
                                                    γ_0)),
                                              @state_t.{u v} σ m inst_1 γ_0) act
                                              act_0
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_0 γ_0) e_1) e_2) e_3) x_0 x_0
                                        (@eq.refl.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 α_0) x_0)
                                        (λ (x_2 : α_0),
                                        @has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          β_0 γ_0 (f x_2) g_0)
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0))
                                        (@funext.{u+1 (max u v)+1} α_0
                                          (λ (x_2 : α_0),
                                          @state_t.{u v} σ m inst_1 γ_0)
                                          (λ (x_2 : α_0),
                                          @state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                            (f x_2) g_0)
                                          (λ (x_2 : α_0) (s : σ),
                                          (λ (this : m (@prod.{u u} γ_0 σ)),
                                            this)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_0 σ)
                                              (@prod.{u u} γ_0 σ) (f x_2 s)
                                              (λ (p : @prod.{u u} β_0 σ),
                                              @state_t_bind._match_1.{u v} σ m
                                                inst_1 β_0 γ_0 g_0 p)))
                                          (λ (x_2 : α_0),
                                          @state_t_bind.equations._eqn_1.{u v} σ
                                            m inst_1 β_0 γ_0 (f x_2) g_0)) x_1
                                        x_1 (@eq.refl.{u+1} σ x_1))
                                      (@congr_fun.{u+1 v+1} σ
                                        (λ (a : σ), m (@prod.{u u} γ_0 σ))
                                        (@state_t_bind.{u v} σ m inst_1 α_0 γ_0
                                          x_0
                                          (λ (x_2 : α_0) (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ) (f x_2 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0)))
                                        (λ (s : σ),
                                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} γ_0 σ) (x_0 s)
                                            (λ (p : @prod.{u u} α_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 γ_0
                                              (λ (x_2 : α_0) (s_0 : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_0 σ)
                                                (@prod.{u u} γ_0 σ) (f x_2 s_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_0 γ_0 g_0)) p)))
                                        (@state_t_bind.equations._eqn_1.{u v} σ
                                          m inst_1 α_0 γ_0 x_0
                                          (λ (x_2 : α_0) (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ) (f x_2 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0))) x_1))))
                                (@congr_arg.{max (u+1) (v+1) v+1}
                                  (∀ (x_2 : @prod.{u u} α_0 σ),
                                  m (@prod.{u u} γ_0 σ)) (m (@prod.{u u} γ_0 σ))
                                  (λ (x_2 : @prod.{u u} α_0 σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      β_0 f x_2)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                      γ_0 g_0))
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    γ_0
                                    (λ (x_2 : α_0) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0)))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                    (x_0 x_1))
                                  (@funext.{u+1 v+1} (@prod.{u u} α_0 σ)
                                    (λ (x_2 : @prod.{u u} α_0 σ),
                                    m (@prod.{u u} γ_0 σ))
                                    (λ (x_2 : @prod.{u u} α_0 σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 β_0 f x_2)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0))
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      γ_0
                                      (λ (x_2 : α_0) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))
                                    (λ (r : @prod.{u u} α_0 σ),
                                    @prod.cases_on.{0 u u} α_0 σ
                                      (λ (r_0 : @prod.{u u} α_0 σ),
                                      @eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f r_0)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0))
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 γ_0
                                          (λ (x_2 : α_0) (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ) (f x_2 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0)) r_0)) r
                                      (λ (fst : α_0) (snd : σ),
                                      @eq.refl.{v+1} (m (@prod.{u u} γ_0 σ))
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f
                                            (@prod.mk.{u u} α_0 σ fst snd))
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0))))))))
                            (∀ (a : α), β) β γ g
                            (λ (x_0 : (∀ (a : α), β)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α β
                              x_0 x)
                            (@function.comp.{u+1 u+1 (max u v)+1} β γ
                              (@state_t.{u v} σ m inst_1 γ)
                              (@state_t_return.{u v} σ m inst_1 γ) h_0)))
                        (@congr_arg.{max (u+1) ((max u v)+1) (max u v)+1}
                          (∀ (g_0 : (∀ (a : α), β)),
                          @state_t.{u v} σ m inst_1 γ)
                          (@state_t.{u v} σ m inst_1 γ)
                          (λ (g_0 : (∀ (a : α), β)),
                          @state_t_bind.{u v} σ m inst_1 β γ
                            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_0 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α β
                              g_0 x)
                            (@function.comp.{u+1 u+1 (max u v)+1} β γ
                              (@state_t.{u v} σ m inst_1 γ)
                              (@state_t_return.{u v} σ m inst_1 γ) h_0))
                          (λ (g_0 : (∀ (a : α), β)),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                            (λ (x_0 : (∀ (a : α), γ)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                              x_0 x))
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) γ g)
                          (@funext.{u+1 (max u v)+1} (∀ (a : α), β)
                            (λ (x_0 : (∀ (a : α), β)),
                            @state_t.{u v} σ m inst_1 γ)
                            (λ (g_0 : (∀ (a : α), β)),
                            @state_t_bind.{u v} σ m inst_1 β γ
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α
                                β g_0 x)
                              (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_return.{u v} σ m inst_1 γ) h_0))
                            (λ (g_0 : (∀ (a : α), β)),
                            @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                                (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                              (λ (x_0 : (∀ (a : α), γ)),
                              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α
                                γ x_0 x))
                            (λ (g_0 : (∀ (a : α), β)),
                            @eq.trans.{(max u v)+1}
                              (@state_t.{u v} σ m inst_1 γ)
                              (@state_t_bind.{u v} σ m inst_1 β γ
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@state_t_return.{u v} σ m inst_1 β_0) f))
                                  α β g_0 x)
                                (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                  (@state_t.{u v} σ m inst_1 γ)
                                  (@state_t_return.{u v} σ m inst_1 γ) h_0))
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α
                                γ (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                x)
                              (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                                (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                                (λ (x_0 : (∀ (a : α), γ)),
                                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@state_t_return.{u v} σ m inst_1 β_0) f))
                                  α γ x_0 x))
                              (@eq.trans.{(max u v)+1}
                                (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_bind.{u v} σ m inst_1 β γ
                                  ((λ (α_0 β_0 : Type u)
                                      (f : (∀ (a : α_0), β_0))
                                      (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                        β_0 (@state_t.{u v} σ m inst_1 β_0)
                                        (@state_t_return.{u v} σ m inst_1 β_0)
                                        f)) α β g_0 x)
                                  (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                    (@state_t.{u v} σ m inst_1 γ)
                                    (@state_t_return.{u v} σ m inst_1 γ) h_0))
                                (@state_t_bind.{u v} σ m inst_1 α γ x
                                  (λ (x_0 : α),
                                  @state_t_return.{u v} σ m inst_1 γ
                                    (h_0 (g_0 x_0))))
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@state_t_return.{u v} σ m inst_1 β_0) f))
                                  α γ
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                  x)
                                (@eq.trans.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 γ)
                                  (@state_t_bind.{u v} σ m inst_1 β γ
                                    ((λ (α_0 β_0 : Type u)
                                        (f : (∀ (a : α_0), β_0))
                                        (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                      @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                        (@function.comp.{u+1 u+1 (max u v)+1}
                                          α_0 β_0
                                          (@state_t.{u v} σ m inst_1 β_0)
                                          (@state_t_return.{u v} σ m inst_1 β_0)
                                          f)) α β g_0 x)
                                    (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                      (@state_t.{u v} σ m inst_1 γ)
                                      (@state_t_return.{u v} σ m inst_1 γ) h_0))
                                  (@state_t_bind.{u v} σ m inst_1 α γ x
                                    (λ (x_0 : α),
                                    @state_t_bind.{u v} σ m inst_1 β γ
                                      (@state_t_return.{u v} σ m inst_1 β
                                        (g_0 x_0))
                                      (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_return.{u v} σ m inst_1 γ)
                                        h_0)))
                                  (@state_t_bind.{u v} σ m inst_1 α γ x
                                    (λ (x_0 : α),
                                    @state_t_return.{u v} σ m inst_1 γ
                                      (h_0 (g_0 x_0))))
                                  (@eq.trans.{(max u v)+1}
                                    (@state_t.{u v} σ m inst_1 γ)
                                    (@state_t_bind.{u v} σ m inst_1 β γ
                                      ((λ (α_0 β_0 : Type u)
                                          (f : (∀ (a : α_0), β_0))
                                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                        @state_t_bind.{u v} σ m inst_1 α_0 β_0
                                          x_0
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_0 β_0
                                            (@state_t.{u v} σ m inst_1 β_0)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_0) f)) α β g_0 x)
                                      (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_return.{u v} σ m inst_1 γ)
                                        h_0))
                                    (@state_t_bind.{u v} σ m inst_1 β γ
                                      (@state_t_bind.{u v} σ m inst_1 α β x
                                        (@function.comp.{u+1 u+1 (max u v)+1} α
                                          β (@state_t.{u v} σ m inst_1 β)
                                          (@state_t_return.{u v} σ m inst_1 β)
                                          g_0))
                                      (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_return.{u v} σ m inst_1 γ)
                                        h_0))
                                    (@state_t_bind.{u v} σ m inst_1 α γ x
                                      (λ (x_0 : α),
                                      @state_t_bind.{u v} σ m inst_1 β γ
                                        (@state_t_return.{u v} σ m inst_1 β
                                          (g_0 x_0))
                                        (@function.comp.{u+1 u+1 (max u v)+1} β
                                          γ (@state_t.{u v} σ m inst_1 γ)
                                          (@state_t_return.{u v} σ m inst_1 γ)
                                          h_0)))
                                    (@eq.rec.{0 (max u v)+1}
                                      (@state_t.{u v} σ m inst_1 β)
                                      (@state_t_bind.{u v} σ m inst_1 α β x
                                        (@function.comp.{u+1 u+1 (max u v)+1} α
                                          β (@state_t.{u v} σ m inst_1 β)
                                          (@state_t_return.{u v} σ m inst_1 β)
                                          g_0))
                                      (λ (x_0 : @state_t.{u v} σ m inst_1 β),
                                      @eq.{(max u v)+1}
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_bind.{u v} σ m inst_1 β γ x_0
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            β γ (@state_t.{u v} σ m inst_1 γ)
                                            (@state_t_return.{u v} σ m inst_1 γ)
                                            h_0))
                                        (@state_t_bind.{u v} σ m inst_1 β γ
                                          (@state_t_bind.{u v} σ m inst_1 α β x
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α β
                                              (@state_t.{u v} σ m inst_1 β)
                                              (@state_t_return.{u v} σ m inst_1
                                                β) g_0))
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            β γ (@state_t.{u v} σ m inst_1 γ)
                                            (@state_t_return.{u v} σ m inst_1 γ)
                                            h_0)))
                                      (@rfl.{(max u v)+1}
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_bind.{u v} σ m inst_1 β γ
                                          (@state_t_bind.{u v} σ m inst_1 α β x
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α β
                                              (@state_t.{u v} σ m inst_1 β)
                                              (@state_t_return.{u v} σ m inst_1
                                                β) g_0))
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            β γ (@state_t.{u v} σ m inst_1 γ)
                                            (@state_t_return.{u v} σ m inst_1 γ)
                                            h_0)))
                                      ((λ (α_0 β_0 : Type u)
                                          (f : (∀ (a : α_0), β_0))
                                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                        @state_t_bind.{u v} σ m inst_1 α_0 β_0
                                          x_0
                                          (@function.comp.{u+1 u+1 (max u v)+1}
                                            α_0 β_0
                                            (@state_t.{u v} σ m inst_1 β_0)
                                            (@state_t_return.{u v} σ m inst_1
                                              β_0) f)) α β g_0 x)
                                      ((λ (α_0 β_0 : Type u)
                                          (f : (∀ (a : α_0), β_0))
                                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                        @rfl.{(max u v)+1}
                                          (@state_t.{u v} σ m inst_1 β_0)
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_0 β_0 x_0
                                            (@function.comp.{u+1 u+1
                                              (max u
                                              v)+1} α_0 β_0
                                              (@state_t.{u v} σ m inst_1 β_0)
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) β_0) f))) α β g_0
                                        x))
                                    ((λ (α_0 β_0 γ_0 : Type u)
                                        (x_0 : @state_t.{u v} σ m inst_1 α_0)
                                        (f :
                                          (∀ (a : α_0),
                                          @state_t.{u v} σ m inst_1 β_0))
                                        (g_1 :
                                          (∀ (a : β_0),
                                          @state_t.{u v} σ m inst_1 γ_0)),
                                      @funext.{u+1 v+1} σ
                                        (λ (x_1 : σ), m (@prod.{u u} γ_0 σ))
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          β_0 γ_0
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_0 β_0 x_0 f) g_1)
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_0 γ_0 x_0
                                          (λ (x_1 : α_0),
                                          @has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            β_0 γ_0 (f x_1) g_1))
                                        (λ (x_1 : σ),
                                        @eq.mpr.{0}
                                          (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) β_0 γ_0
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_0 β_0 x_0 f) g_1
                                              x_1)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_0 γ_0 x_0
                                              (λ (x_2 : α_0),
                                              @has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) β_0 γ_0 (f x_2)
                                                g_1) x_1))
                                          (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_0 σ)
                                              (@prod.{u u} γ_0 σ) (x_0 x_1)
                                              (λ (x_2 : @prod.{u u} α_0 σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_0 σ)
                                                (@prod.{u u} γ_0 σ)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 β_0 f x_2)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_0 γ_0 g_1)))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_0 σ)
                                              (@prod.{u u} γ_0 σ) (x_0 x_1)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_0 γ_0
                                                (λ (x_2 : α_0) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_0 σ)
                                                  (@prod.{u u} γ_0 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_0 γ_0 g_1)))))
                                          (@id_locked.{0}
                                            (@eq.{1} Prop
                                              (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_0 γ_0
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_0 β_0 x_0 f)
                                                  g_1 x_1)
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) α_0 γ_0 x_0
                                                  (λ (x_2 : α_0),
                                                  @has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_0 γ_0 (f x_2)
                                                    g_1) x_1))
                                              (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} γ_0 σ) (x_0 x_1)
                                                  (λ (x_2 : @prod.{u u} α_0 σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_0 β_0 f
                                                      x_2)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1)))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} γ_0 σ) (x_0 x_1)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 γ_0
                                                    (λ (x_2 : α_0) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_0 γ_0
                                                        g_1))))))
                                            ((λ (a a_0 : m (@prod.{u u} γ_0 σ))
                                                (e_1 :
                                                  @eq.{v+1}
                                                    (m (@prod.{u u} γ_0 σ)) a
                                                    a_0)
                                                (a_1 a_2 :
                                                  m (@prod.{u u} γ_0 σ))
                                                (e_2 :
                                                  @eq.{v+1}
                                                    (m (@prod.{u u} γ_0 σ)) a_1
                                                    a_2),
                                              @congr.{v+1 1}
                                                (m (@prod.{u u} γ_0 σ)) Prop
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} γ_0 σ)) a)
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} γ_0 σ)) a_0)
                                                a_1 a_2
                                                (@congr_arg.{v+1 max (v+1) 1}
                                                  (m (@prod.{u u} γ_0 σ))
                                                  (∀ (a_3 :
                                                      m (@prod.{u u} γ_0 σ)),
                                                  Prop) a a_0
                                                  (@eq.{v+1}
                                                    (m (@prod.{u u} γ_0 σ)))
                                                  e_1) e_2)
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) β_0 γ_0
                                                (@has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) α_0 β_0 x_0 f)
                                                g_1 x_1)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_0 σ)
                                                (@prod.{u u} γ_0 σ) (x_0 x_1)
                                                (λ (x_2 : @prod.{u u} α_0 σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_0 σ)
                                                  (@prod.{u u} γ_0 σ)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 β_0 f x_2)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_0 γ_0 g_1)))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} γ_0 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  β_0 γ_0
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_0 β_0 x_0 f)
                                                  g_1 x_1)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_0 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      ((λ (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.{u u} β_0 σ)
                                                          (x_0 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_0
                                                            β_0 f)) s)
                                                      (λ (p :
                                                          @prod.{u u} β_0 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_0 γ_0
                                                        g_1 p))) x_1)
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} γ_0 σ) (x_0 x_1)
                                                  (λ (x_2 : @prod.{u u} α_0 σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_0 β_0 f
                                                      x_2)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1)))
                                                (@eq.trans.{v+1}
                                                  (m (@prod.{u u} γ_0 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_0 γ_0
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_0 β_0 x_0
                                                      f) g_1 x_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 β_0 γ_0
                                                    (λ (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.{u u} β_0 σ)
                                                      (x_0 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 β_0
                                                        f)) g_1 x_1)
                                                  ((λ (s : σ),
                                                    (λ (this :
                                                          m
                                                            (@prod.{u u} γ_0
                                                              σ)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_0 σ)
                                                        (@prod.{u u} γ_0 σ)
                                                        ((λ (s_0 : σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_0 σ)
                                                            (@prod.{u u} β_0 σ)
                                                            (x_0 s_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_0
                                                              β_0 f)) s)
                                                        (λ (p :
                                                            @prod.{u u} β_0 σ),
                                                        @state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_0 γ_0
                                                          g_1 p))) x_1)
                                                  ((λ (act act_0 :
                                                        @state_t.{u v} σ m
                                                          inst_1 β_0)
                                                      (e_1 :
                                                        @eq.{(max u v)+1}
                                                          (@state_t.{u v} σ m
                                                            inst_1 β_0) act
                                                          act_0)
                                                      (act_1 act_2 :
                                                        (∀ (a_1 : β_0),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_0))
                                                      (e_2 :
                                                        @eq.{max (u+1)
                                                          ((max u
                                                          v)+1)}
                                                          (∀ (a_1 : β_0),
                                                          @state_t.{u v} σ m
                                                            inst_1 γ_0) act_1
                                                          act_2) (a a_0 : σ)
                                                      (e_3 : @eq.{u+1} σ a a_0),
                                                    @congr.{u+1 v+1} σ
                                                      (m (@prod.{u u} γ_0 σ))
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 β_0 γ_0 act
                                                        act_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 β_0 γ_0 act_0
                                                        act_2) a a_0
                                                      (@congr.{max (u+1)
                                                        ((max u
                                                        v)+1) (max u v)+1}
                                                        (∀ (a_1 : β_0),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_0)
                                                        (@state_t.{u v} σ m
                                                          inst_1 γ_0)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 β_0 γ_0 act)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 β_0 γ_0 act_0)
                                                        act_1 act_2
                                                        (@congr_arg.{(max u
                                                          v)+1
                                                          max (u+1)
                                                          ((max u
                                                          v)+1)}
                                                          (@state_t.{u v} σ m
                                                            inst_1 β_0)
                                                          (∀ (act_3 :
                                                              (∀ (a_1 : β_0),
                                                              @state_t.{u v} σ m
                                                                inst_1 γ_0)),
                                                          @state_t.{u v} σ m
                                                            inst_1 γ_0) act
                                                          act_0
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 β_0 γ_0)
                                                          e_1) e_2) e_3)
                                                    (@has_bind.bind.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_bind.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1)) α_0 β_0 x_0
                                                      f)
                                                    (λ (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.{u u} β_0 σ)
                                                      (x_0 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 β_0
                                                        f))
                                                    (@state_t_bind.equations._eqn_1.{u
                                                      v} σ m inst_1 α_0 β_0 x_0
                                                      f) g_1 g_1
                                                    (@eq.refl.{max (u+1)
                                                      ((max u
                                                      v)+1)}
                                                      (∀ (a : β_0),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_0) g_1) x_1 x_1
                                                    (@eq.refl.{u+1} σ x_1))
                                                  (@congr_fun.{u+1 v+1} σ
                                                    (λ (a : σ),
                                                    m (@prod.{u u} γ_0 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 β_0 γ_0
                                                      (λ (s : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_0 σ)
                                                        (@prod.{u u} β_0 σ)
                                                        (x_0 s)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_0 β_0
                                                          f)) g_1)
                                                    (λ (s : σ),
                                                    (λ (this :
                                                          m
                                                            (@prod.{u u} γ_0
                                                              σ)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_0 σ)
                                                        (@prod.{u u} γ_0 σ)
                                                        ((λ (s_0 : σ),
                                                          @has_bind.bind.{u v} m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_0 σ)
                                                            (@prod.{u u} β_0 σ)
                                                            (x_0 s_0)
                                                            (@state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_0
                                                              β_0 f)) s)
                                                        (λ (p :
                                                            @prod.{u u} β_0 σ),
                                                        @state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_0 γ_0
                                                          g_1 p)))
                                                    (@state_t_bind.equations._eqn_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      (λ (s : σ),
                                                      @has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_0 σ)
                                                        (@prod.{u u} β_0 σ)
                                                        (x_0 s)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_0 β_0
                                                          f)) g_1) x_1))
                                                (@monad.bind_assoc.{u v} m
                                                  inst_1 (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} β_0 σ)
                                                  (@prod.{u u} γ_0 σ) (x_0 x_1)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 β_0 f)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_0 γ_0 g_1)))
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_0 γ_0 x_0
                                                (λ (x_2 : α_0),
                                                @has_bind.bind.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_bind.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1)) β_0 γ_0 (f x_2)
                                                  g_1) x_1)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_0 σ)
                                                (@prod.{u u} γ_0 σ) (x_0 x_1)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 γ_0
                                                  (λ (x_2 : α_0) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1))))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} γ_0 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_0 γ_0 x_0
                                                  (λ (x_2 : α_0),
                                                  @has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_0 γ_0 (f x_2)
                                                    g_1) x_1)
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_0 γ_0 x_0
                                                  (λ (x_2 : α_0) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1)) x_1)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_0 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      (x_0 s)
                                                      (λ (p :
                                                          @prod.{u u} α_0 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 γ_0
                                                        (λ (x_2 : α_0)
                                                          (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_0 σ)
                                                          (@prod.{u u} γ_0 σ)
                                                          (f x_2 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_0
                                                            γ_0 g_1)) p))) x_1)
                                                ((λ (act act_0 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_0)
                                                    (e_1 :
                                                      @eq.{(max u v)+1}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_0) act act_0)
                                                    (act_1 act_2 :
                                                      (∀ (a_1 : α_0),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_0))
                                                    (e_2 :
                                                      @eq.{max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (∀ (a_1 : α_0),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_0) act_1
                                                        act_2) (a a_0 : σ)
                                                    (e_3 : @eq.{u+1} σ a a_0),
                                                  @congr.{u+1 v+1} σ
                                                    (m (@prod.{u u} γ_0 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 γ_0 act act_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 γ_0 act_0
                                                      act_2) a a_0
                                                    (@congr.{max (u+1)
                                                      ((max u
                                                      v)+1) (max u v)+1}
                                                      (∀ (a_1 : α_0),
                                                      @state_t.{u v} σ m inst_1
                                                        γ_0)
                                                      (@state_t.{u v} σ m inst_1
                                                        γ_0)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_0 γ_0 act)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_0 γ_0 act_0)
                                                      act_1 act_2
                                                      (@congr_arg.{(max u
                                                        v)+1
                                                        max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_0)
                                                        (∀ (act_3 :
                                                            (∀ (a_1 : α_0),
                                                            @state_t.{u v} σ m
                                                              inst_1 γ_0)),
                                                        @state_t.{u v} σ m
                                                          inst_1 γ_0) act act_0
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 α_0 γ_0) e_1)
                                                      e_2) e_3) x_0 x_0
                                                  (@eq.refl.{(max u v)+1}
                                                    (@state_t.{u v} σ m inst_1
                                                      α_0) x_0)
                                                  (λ (x_2 : α_0),
                                                  @has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) β_0 γ_0 (f x_2)
                                                    g_1)
                                                  (λ (x_2 : α_0) (s : σ),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (f x_2 s)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1))
                                                  (@funext.{u+1 (max u v)+1} α_0
                                                    (λ (x_2 : α_0),
                                                    @state_t.{u v} σ m inst_1
                                                      γ_0)
                                                    (λ (x_2 : α_0),
                                                    @state_t_bind.{u v} σ m
                                                      inst_1 β_0 γ_0 (f x_2)
                                                      g_1)
                                                    (λ (x_2 : α_0) (s : σ),
                                                    (λ (this :
                                                          m
                                                            (@prod.{u u} γ_0
                                                              σ)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} β_0 σ)
                                                        (@prod.{u u} γ_0 σ)
                                                        (f x_2 s)
                                                        (λ (p :
                                                            @prod.{u u} β_0 σ),
                                                        @state_t_bind._match_1.{u
                                                          v} σ m inst_1 β_0 γ_0
                                                          g_1 p)))
                                                    (λ (x_2 : α_0),
                                                    @state_t_bind.equations._eqn_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      (f x_2) g_1)) x_1 x_1
                                                  (@eq.refl.{u+1} σ x_1))
                                                (@congr_fun.{u+1 v+1} σ
                                                  (λ (a : σ),
                                                  m (@prod.{u u} γ_0 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 α_0 γ_0 x_0
                                                    (λ (x_2 : α_0) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_0 γ_0
                                                        g_1)))
                                                  (λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} γ_0 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      (x_0 s)
                                                      (λ (p :
                                                          @prod.{u u} α_0 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 γ_0
                                                        (λ (x_2 : α_0)
                                                          (s_0 : σ),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} β_0 σ)
                                                          (@prod.{u u} γ_0 σ)
                                                          (f x_2 s_0)
                                                          (@state_t_bind._match_1.{u
                                                            v} σ m inst_1 β_0
                                                            γ_0 g_1)) p)))
                                                  (@state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 α_0 γ_0 x_0
                                                    (λ (x_2 : α_0) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_0 γ_0
                                                        g_1))) x_1))))
                                          (@congr_arg.{max (u+1) (v+1) v+1}
                                            (∀ (x_2 : @prod.{u u} α_0 σ),
                                            m (@prod.{u u} γ_0 σ))
                                            (m (@prod.{u u} γ_0 σ))
                                            (λ (x_2 : @prod.{u u} α_0 σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_0 σ)
                                              (@prod.{u u} γ_0 σ)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_0 β_0 f x_2)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_0 γ_0 g_1))
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 γ_0
                                              (λ (x_2 : α_0) (s : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_0 σ)
                                                (@prod.{u u} γ_0 σ) (f x_2 s)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_0 γ_0 g_1)))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_0 σ)
                                              (@prod.{u u} γ_0 σ) (x_0 x_1))
                                            (@funext.{u+1 v+1}
                                              (@prod.{u u} α_0 σ)
                                              (λ (x_2 : @prod.{u u} α_0 σ),
                                              m (@prod.{u u} γ_0 σ))
                                              (λ (x_2 : @prod.{u u} α_0 σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} β_0 σ)
                                                (@prod.{u u} γ_0 σ)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 β_0 f x_2)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 β_0 γ_0 g_1))
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_0 γ_0
                                                (λ (x_2 : α_0) (s : σ),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} β_0 σ)
                                                  (@prod.{u u} γ_0 σ) (f x_2 s)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 β_0 γ_0 g_1)))
                                              (λ (r : @prod.{u u} α_0 σ),
                                              @prod.cases_on.{0 u u} α_0 σ
                                                (λ (r_0 : @prod.{u u} α_0 σ),
                                                @eq.{v+1}
                                                  (m (@prod.{u u} γ_0 σ))
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_0 β_0 f
                                                      r_0)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1))
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 γ_0
                                                    (λ (x_2 : α_0) (s : σ),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} β_0 σ)
                                                      (@prod.{u u} γ_0 σ)
                                                      (f x_2 s)
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 β_0 γ_0
                                                        g_1)) r_0)) r
                                                (λ (fst : α_0) (snd : σ),
                                                @eq.refl.{v+1}
                                                  (m (@prod.{u u} γ_0 σ))
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} β_0 σ)
                                                    (@prod.{u u} γ_0 σ)
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 α_0 β_0 f
                                                      (@prod.mk.{u u} α_0 σ fst
                                                        snd))
                                                    (@state_t_bind._match_1.{u
                                                      v} σ m inst_1 β_0 γ_0
                                                      g_1)))))))) α β γ x
                                      (@function.comp.{u+1 u+1 (max u v)+1} α β
                                        (@state_t.{u v} σ m inst_1 β)
                                        (@state_t_return.{u v} σ m inst_1 β)
                                        g_0)
                                      (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_return.{u v} σ m inst_1 γ)
                                        h_0)))
                                  (@congr_arg.{max (u+1)
                                    ((max u
                                    v)+1) (max u v)+1}
                                    (∀ (x_0 : α), @state_t.{u v} σ m inst_1 γ)
                                    (@state_t.{u v} σ m inst_1 γ)
                                    (λ (x_0 : α),
                                    @state_t_bind.{u v} σ m inst_1 β γ
                                      (@state_t_return.{u v} σ m inst_1 β
                                        (g_0 x_0))
                                      (@function.comp.{u+1 u+1 (max u v)+1} β γ
                                        (@state_t.{u v} σ m inst_1 γ)
                                        (@state_t_return.{u v} σ m inst_1 γ)
                                        h_0))
                                    (λ (x_0 : α),
                                    @state_t_return.{u v} σ m inst_1 γ
                                      (h_0 (g_0 x_0)))
                                    (@state_t_bind.{u v} σ m inst_1 α γ x)
                                    (@funext.{u+1 (max u v)+1} α
                                      (λ (x_0 : α), @state_t.{u v} σ m inst_1 γ)
                                      (λ (x_0 : α),
                                      @state_t_bind.{u v} σ m inst_1 β γ
                                        (@state_t_return.{u v} σ m inst_1 β
                                          (g_0 x_0))
                                        (@function.comp.{u+1 u+1 (max u v)+1} β
                                          γ (@state_t.{u v} σ m inst_1 γ)
                                          (@state_t_return.{u v} σ m inst_1 γ)
                                          h_0))
                                      (λ (x_0 : α),
                                      @state_t_return.{u v} σ m inst_1 γ
                                        (h_0 (g_0 x_0)))
                                      (λ (x_0 : α),
                                      (λ (α_0 β_0 : Type u) (x_1 : α_0)
                                          (f :
                                            (∀ (a : α_0),
                                            @state_t.{u v} σ m inst_1 β_0)),
                                        @funext.{u+1 v+1} σ
                                          (λ (x_2 : σ), m (@prod.{u u} β_0 σ))
                                          (@has_bind.bind.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_bind.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_bind.{u v} σ m inst_1))
                                            α_0 β_0
                                            (@has_pure.pure.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_pure.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_return.{u v} σ m
                                                  inst_1)) α_0 x_1) f) (f x_1)
                                          (λ (x_1_0 : σ),
                                          @eq.mpr.{0}
                                            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                              (@has_bind.bind.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_bind.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1)) α_0 β_0
                                                (@has_pure.pure.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_pure.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1)) α_0 x_1) f x_1_0)
                                              (f x_1 x_1_0)) @true
                                            (@id_locked.{0}
                                              (@eq.{1} Prop
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} β_0 σ))
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_0 β_0
                                                    (@has_pure.pure.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_pure.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_return.{u v} σ
                                                          m inst_1)) α_0 x_1) f
                                                    x_1_0) (f x_1 x_1_0)) @true)
                                              (@eq.trans.{1} Prop
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} β_0 σ))
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_0 β_0
                                                    (@has_pure.pure.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_pure.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_return.{u v} σ
                                                          m inst_1)) α_0 x_1) f
                                                    x_1_0) (f x_1 x_1_0))
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} β_0 σ))
                                                  (f x_1 x_1_0) (f x_1 x_1_0))
                                                @true
                                                ((λ (a a_0 :
                                                      m (@prod.{u u} β_0 σ))
                                                    (e_1 :
                                                      @eq.{v+1}
                                                        (m (@prod.{u u} β_0 σ))
                                                        a a_0)
                                                    (a_1 a_2 :
                                                      m (@prod.{u u} β_0 σ))
                                                    (e_2 :
                                                      @eq.{v+1}
                                                        (m (@prod.{u u} β_0 σ))
                                                        a_1 a_2),
                                                  @congr.{v+1 1}
                                                    (m (@prod.{u u} β_0 σ)) Prop
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} β_0 σ)) a)
                                                    (@eq.{v+1}
                                                      (m (@prod.{u u} β_0 σ))
                                                      a_0) a_1 a_2
                                                    (@congr_arg.{v+1
                                                      max (v+1)
                                                      1} (m (@prod.{u u} β_0 σ))
                                                      (∀ (a_3 :
                                                          m
                                                            (@prod.{u u} β_0
                                                              σ)),
                                                      Prop) a a_0
                                                      (@eq.{v+1}
                                                        (m (@prod.{u u} β_0 σ)))
                                                      e_1) e_2)
                                                  (@has_bind.bind.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_bind.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1)) α_0 β_0
                                                    (@has_pure.pure.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@has_pure.mk.{u max u v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@state_t_return.{u v} σ
                                                          m inst_1)) α_0 x_1) f
                                                    x_1_0) (f x_1 x_1_0)
                                                  (@eq.trans.{v+1}
                                                    (m (@prod.{u u} β_0 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 β_0
                                                      (@has_pure.pure.{u
                                                        max u
                                                        v}
                                                        (@state_t.{u v} σ m
                                                          inst_1)
                                                        (@has_pure.mk.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@state_t_return.{u v}
                                                            σ m inst_1)) α_0
                                                        x_1) f x_1_0)
                                                    ((λ (s : σ),
                                                      (λ (this :
                                                            m
                                                              (@prod.{u u} β_0
                                                                σ)),
                                                        this)
                                                        (@has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.{u u} β_0 σ)
                                                          ((λ (s_0 : σ),
                                                            @return.{u v} m
                                                              inst_1
                                                              (@prod.{u u} α_0
                                                                σ)
                                                              (@prod.mk.{u u}
                                                                α_0 σ x_1 s_0))
                                                            s)
                                                          (λ (p :
                                                              @prod.{u u} α_0
                                                                σ),
                                                          @state_t_bind._match_1.{u
                                                            v} σ m inst_1 α_0
                                                            β_0 f p))) x_1_0)
                                                    (f x_1 x_1_0)
                                                    (@eq.trans.{v+1}
                                                      (m (@prod.{u u} β_0 σ))
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_0 β_0
                                                        (@has_pure.pure.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_pure.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_return.{u
                                                              v} σ m inst_1))
                                                          α_0 x_1) f x_1_0)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_0 β_0
                                                        (λ (s : σ),
                                                        @return.{u v} m inst_1
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.mk.{u u} α_0 σ
                                                            x_1 s)) f x_1_0)
                                                      ((λ (s : σ),
                                                        (λ (this :
                                                              m
                                                                (@prod.{u u} β_0
                                                                  σ)),
                                                          this)
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_0 σ)
                                                            (@prod.{u u} β_0 σ)
                                                            ((λ (s_0 : σ),
                                                              @return.{u v} m
                                                                inst_1
                                                                (@prod.{u u} α_0
                                                                  σ)
                                                                (@prod.mk.{u u}
                                                                  α_0 σ x_1
                                                                  s_0)) s)
                                                            (λ (p :
                                                                @prod.{u u} α_0
                                                                  σ),
                                                            @state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_0
                                                              β_0 f p))) x_1_0)
                                                      ((λ (act act_0 :
                                                            @state_t.{u v} σ m
                                                              inst_1 α_0)
                                                          (e_1 :
                                                            @eq.{(max u v)+1}
                                                              (@state_t.{u v} σ
                                                                m inst_1 α_0)
                                                              act act_0)
                                                          (act_1 act_2 :
                                                            (∀ (a_1 : α_0),
                                                            @state_t.{u v} σ m
                                                              inst_1 β_0))
                                                          (e_2 :
                                                            @eq.{max (u+1)
                                                              ((max u
                                                              v)+1)}
                                                              (∀ (a_1 : α_0),
                                                              @state_t.{u v} σ m
                                                                inst_1 β_0)
                                                              act_1 act_2)
                                                          (a a_0 : σ)
                                                          (e_3 :
                                                            @eq.{u+1} σ a a_0),
                                                        @congr.{u+1 v+1} σ
                                                          (m
                                                            (@prod.{u u} β_0 σ))
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 α_0 β_0 act
                                                            act_1)
                                                          (@state_t_bind.{u v} σ
                                                            m inst_1 α_0 β_0
                                                            act_0 act_2) a a_0
                                                          (@congr.{max (u+1)
                                                            ((max u
                                                            v)+1) (max u v)+1}
                                                            (∀ (a_1 : α_0),
                                                            @state_t.{u v} σ m
                                                              inst_1 β_0)
                                                            (@state_t.{u v} σ m
                                                              inst_1 β_0)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1 α_0 β_0
                                                              act)
                                                            (@state_t_bind.{u v}
                                                              σ m inst_1 α_0 β_0
                                                              act_0) act_1 act_2
                                                            (@congr_arg.{(max u
                                                              v)+1
                                                              max (u+1)
                                                              ((max u
                                                              v)+1)}
                                                              (@state_t.{u v} σ
                                                                m inst_1 α_0)
                                                              (∀ (act_3 :
                                                                  (∀ (a_1 :
                                                                      α_0),
                                                                  @state_t.{u v}
                                                                    σ m inst_1
                                                                    β_0)),
                                                              @state_t.{u v} σ m
                                                                inst_1 β_0) act
                                                              act_0
                                                              (@state_t_bind.{u
                                                                v} σ m inst_1
                                                                α_0 β_0) e_1)
                                                            e_2) e_3)
                                                        (@has_pure.pure.{u
                                                          max u
                                                          v}
                                                          (@state_t.{u v} σ m
                                                            inst_1)
                                                          (@has_pure.mk.{u
                                                            max u
                                                            v}
                                                            (@state_t.{u v} σ m
                                                              inst_1)
                                                            (@state_t_return.{u
                                                              v} σ m inst_1))
                                                          α_0 x_1)
                                                        (λ (s : σ),
                                                        @return.{u v} m inst_1
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.mk.{u u} α_0 σ
                                                            x_1 s))
                                                        (@state_t_return.equations._eqn_1.{u
                                                          v} σ m inst_1 α_0 x_1)
                                                        f f
                                                        (@eq.refl.{max (u+1)
                                                          ((max u
                                                          v)+1)}
                                                          (∀ (a : α_0),
                                                          @state_t.{u v} σ m
                                                            inst_1 β_0) f) x_1_0
                                                        x_1_0
                                                        (@eq.refl.{u+1} σ
                                                          x_1_0))
                                                      (@congr_fun.{u+1 v+1} σ
                                                        (λ (a : σ),
                                                        m (@prod.{u u} β_0 σ))
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 α_0 β_0
                                                          (λ (s : σ),
                                                          @return.{u v} m inst_1
                                                            (@prod.{u u} α_0 σ)
                                                            (@prod.mk.{u u} α_0
                                                              σ x_1 s)) f)
                                                        (λ (s : σ),
                                                        (λ (this :
                                                              m
                                                                (@prod.{u u} β_0
                                                                  σ)),
                                                          this)
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@prod.{u u} α_0 σ)
                                                            (@prod.{u u} β_0 σ)
                                                            ((λ (s_0 : σ),
                                                              @return.{u v} m
                                                                inst_1
                                                                (@prod.{u u} α_0
                                                                  σ)
                                                                (@prod.mk.{u u}
                                                                  α_0 σ x_1
                                                                  s_0)) s)
                                                            (λ (p :
                                                                @prod.{u u} α_0
                                                                  σ),
                                                            @state_t_bind._match_1.{u
                                                              v} σ m inst_1 α_0
                                                              β_0 f p)))
                                                        (@state_t_bind.equations._eqn_1.{u
                                                          v} σ m inst_1 α_0 β_0
                                                          (λ (s : σ),
                                                          @return.{u v} m inst_1
                                                            (@prod.{u u} α_0 σ)
                                                            (@prod.mk.{u u} α_0
                                                              σ x_1 s)) f)
                                                        x_1_0))
                                                    (@eq.trans.{v+1}
                                                      (m (@prod.{u u} β_0 σ))
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@prod.{u u} α_0 σ)
                                                        (@prod.{u u} β_0 σ)
                                                        (@has_pure.pure.{u v} m
                                                          (@applicative.to_has_pure.{u
                                                            v} m
                                                            (@monad.to_applicative.{u
                                                              v} m inst_1))
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.mk.{u u} α_0 σ
                                                            x_1 x_1_0))
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_0 β_0
                                                          f))
                                                      (@state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 β_0 f
                                                        (@prod.mk.{u u} α_0 σ
                                                          x_1 x_1_0))
                                                      (f x_1 x_1_0)
                                                      (@monad.pure_bind.{u v} m
                                                        inst_1
                                                        (@prod.{u u} α_0 σ)
                                                        (@prod.{u u} β_0 σ)
                                                        (@prod.mk.{u u} α_0 σ
                                                          x_1 x_1_0)
                                                        (@state_t_bind._match_1.{u
                                                          v} σ m inst_1 α_0 β_0
                                                          f))
                                                      (@state_t_bind._match_1.equations._eqn_1.{v
                                                        u} σ m inst_1 α_0 β_0 f
                                                        x_1 x_1_0)))
                                                  (f x_1 x_1_0) (f x_1 x_1_0)
                                                  (@eq.refl.{v+1}
                                                    (m (@prod.{u u} β_0 σ))
                                                    (f x_1 x_1_0)))
                                                (@propext
                                                  (@eq.{v+1}
                                                    (m (@prod.{u u} β_0 σ))
                                                    (f x_1 x_1_0) (f x_1 x_1_0))
                                                  @true
                                                  (@eq_self_iff_true.{v+1}
                                                    (m (@prod.{u u} β_0 σ))
                                                    (f x_1 x_1_0))))) @trivial))
                                        β γ (g_0 x_0)
                                        (@function.comp.{u+1 u+1 (max u v)+1} β
                                          γ (@state_t.{u v} σ m inst_1 γ)
                                          (@state_t_return.{u v} σ m inst_1 γ)
                                          h_0)))))
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @rfl.{(max u v)+1}
                                    (@state_t.{u v} σ m inst_1 β_0)
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_0
                                      β_0 x_0
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                        β_0 (@state_t.{u v} σ m inst_1 β_0)
                                        (@has_pure.pure.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_pure.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_return.{u v} σ m inst_1))
                                          β_0) f))) α γ
                                  (λ (x_0 : α), h_0 (g_0 x_0)) x))
                              (@eq.symm.{(max u v)+1}
                                (@state_t.{u v} σ m inst_1 γ)
                                (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                                  (@state_t_return.{u v} σ m inst_1
                                    (∀ (a : α), γ)
                                    (@function.comp.{u+1 u+1 u+1} α β γ h_0
                                      g_0))
                                  (λ (x_0 : (∀ (a : α), γ)),
                                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                        β_0 (@state_t.{u v} σ m inst_1 β_0)
                                        (@state_t_return.{u v} σ m inst_1 β_0)
                                        f)) α γ x_0 x))
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @state_t.{u v} σ m inst_1 α_0),
                                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                                    (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                      β_0 (@state_t.{u v} σ m inst_1 β_0)
                                      (@state_t_return.{u v} σ m inst_1 β_0) f))
                                  α γ
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                  x)
                                ((λ (α_0 β_0 : Type u) (x_0 : α_0)
                                    (f :
                                      (∀ (a : α_0),
                                      @state_t.{u v} σ m inst_1 β_0)),
                                  @funext.{u+1 v+1} σ
                                    (λ (x_1 : σ), m (@prod.{u u} β_0 σ))
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_0
                                      β_0
                                      (@has_pure.pure.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_pure.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_return.{u v} σ m inst_1))
                                        α_0 x_0) f) (f x_0)
                                    (λ (x_1 : σ),
                                    @eq.mpr.{0}
                                      (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_0 β_0
                                          (@has_pure.pure.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@has_pure.mk.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@state_t_return.{u v} σ m
                                                inst_1)) α_0 x_0) f x_1)
                                        (f x_0 x_1)) @true
                                      (@id_locked.{0}
                                        (@eq.{1} Prop
                                          (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_0 β_0
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) α_0 x_0) f x_1)
                                            (f x_0 x_1)) @true)
                                        (@eq.trans.{1} Prop
                                          (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_0 β_0
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) α_0 x_0) f x_1)
                                            (f x_0 x_1))
                                          (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                            (f x_0 x_1) (f x_0 x_1)) @true
                                          ((λ (a a_0 : m (@prod.{u u} β_0 σ))
                                              (e_1 :
                                                @eq.{v+1}
                                                  (m (@prod.{u u} β_0 σ)) a a_0)
                                              (a_1 a_2 : m (@prod.{u u} β_0 σ))
                                              (e_2 :
                                                @eq.{v+1}
                                                  (m (@prod.{u u} β_0 σ)) a_1
                                                  a_2),
                                            @congr.{v+1 1}
                                              (m (@prod.{u u} β_0 σ)) Prop
                                              (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                                a)
                                              (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                                a_0) a_1 a_2
                                              (@congr_arg.{v+1 max (v+1) 1}
                                                (m (@prod.{u u} β_0 σ))
                                                (∀ (a_3 :
                                                    m (@prod.{u u} β_0 σ)),
                                                Prop) a a_0
                                                (@eq.{v+1}
                                                  (m (@prod.{u u} β_0 σ))) e_1)
                                              e_2)
                                            (@has_bind.bind.{u max u v}
                                              (@state_t.{u v} σ m inst_1)
                                              (@has_bind.mk.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@state_t_bind.{u v} σ m
                                                  inst_1)) α_0 β_0
                                              (@has_pure.pure.{u max u v}
                                                (@state_t.{u v} σ m inst_1)
                                                (@has_pure.mk.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@state_t_return.{u v} σ m
                                                    inst_1)) α_0 x_0) f x_1)
                                            (f x_0 x_1)
                                            (@eq.trans.{v+1}
                                              (m (@prod.{u u} β_0 σ))
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_0 β_0
                                                (@has_pure.pure.{u max u v}
                                                  (@state_t.{u v} σ m inst_1)
                                                  (@has_pure.mk.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@state_t_return.{u v} σ m
                                                      inst_1)) α_0 x_0) f x_1)
                                              ((λ (s : σ),
                                                (λ (this :
                                                      m (@prod.{u u} β_0 σ)),
                                                  this)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1)
                                                    (@prod.{u u} α_0 σ)
                                                    (@prod.{u u} β_0 σ)
                                                    ((λ (s_0 : σ),
                                                      @return.{u v} m inst_1
                                                        (@prod.{u u} α_0 σ)
                                                        (@prod.mk.{u u} α_0 σ
                                                          x_0 s_0)) s)
                                                    (λ (p : @prod.{u u} α_0 σ),
                                                    @state_t_bind._match_1.{u v}
                                                      σ m inst_1 α_0 β_0 f p)))
                                                x_1) (f x_0 x_1)
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} β_0 σ))
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_0 β_0
                                                  (@has_pure.pure.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_pure.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1)) α_0 x_0) f x_1)
                                                (@state_t_bind.{u v} σ m inst_1
                                                  α_0 β_0
                                                  (λ (s : σ),
                                                  @return.{u v} m inst_1
                                                    (@prod.{u u} α_0 σ)
                                                    (@prod.mk.{u u} α_0 σ x_0
                                                      s)) f x_1)
                                                ((λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} β_0 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.{u u} β_0 σ)
                                                      ((λ (s_0 : σ),
                                                        @return.{u v} m inst_1
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.mk.{u u} α_0 σ
                                                            x_0 s_0)) s)
                                                      (λ (p :
                                                          @prod.{u u} α_0 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 β_0 f
                                                        p))) x_1)
                                                ((λ (act act_0 :
                                                      @state_t.{u v} σ m inst_1
                                                        α_0)
                                                    (e_1 :
                                                      @eq.{(max u v)+1}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_0) act act_0)
                                                    (act_1 act_2 :
                                                      (∀ (a_1 : α_0),
                                                      @state_t.{u v} σ m inst_1
                                                        β_0))
                                                    (e_2 :
                                                      @eq.{max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (∀ (a_1 : α_0),
                                                        @state_t.{u v} σ m
                                                          inst_1 β_0) act_1
                                                        act_2) (a a_0 : σ)
                                                    (e_3 : @eq.{u+1} σ a a_0),
                                                  @congr.{u+1 v+1} σ
                                                    (m (@prod.{u u} β_0 σ))
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 β_0 act act_1)
                                                    (@state_t_bind.{u v} σ m
                                                      inst_1 α_0 β_0 act_0
                                                      act_2) a a_0
                                                    (@congr.{max (u+1)
                                                      ((max u
                                                      v)+1) (max u v)+1}
                                                      (∀ (a_1 : α_0),
                                                      @state_t.{u v} σ m inst_1
                                                        β_0)
                                                      (@state_t.{u v} σ m inst_1
                                                        β_0)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_0 β_0 act)
                                                      (@state_t_bind.{u v} σ m
                                                        inst_1 α_0 β_0 act_0)
                                                      act_1 act_2
                                                      (@congr_arg.{(max u
                                                        v)+1
                                                        max (u+1)
                                                        ((max u
                                                        v)+1)}
                                                        (@state_t.{u v} σ m
                                                          inst_1 α_0)
                                                        (∀ (act_3 :
                                                            (∀ (a_1 : α_0),
                                                            @state_t.{u v} σ m
                                                              inst_1 β_0)),
                                                        @state_t.{u v} σ m
                                                          inst_1 β_0) act act_0
                                                        (@state_t_bind.{u v} σ m
                                                          inst_1 α_0 β_0) e_1)
                                                      e_2) e_3)
                                                  (@has_pure.pure.{u max u v}
                                                    (@state_t.{u v} σ m inst_1)
                                                    (@has_pure.mk.{u max u v}
                                                      (@state_t.{u v} σ m
                                                        inst_1)
                                                      (@state_t_return.{u v} σ m
                                                        inst_1)) α_0 x_0)
                                                  (λ (s : σ),
                                                  @return.{u v} m inst_1
                                                    (@prod.{u u} α_0 σ)
                                                    (@prod.mk.{u u} α_0 σ x_0
                                                      s))
                                                  (@state_t_return.equations._eqn_1.{u
                                                    v} σ m inst_1 α_0 x_0) f f
                                                  (@eq.refl.{max (u+1)
                                                    ((max u
                                                    v)+1)}
                                                    (∀ (a : α_0),
                                                    @state_t.{u v} σ m inst_1
                                                      β_0) f) x_1 x_1
                                                  (@eq.refl.{u+1} σ x_1))
                                                (@congr_fun.{u+1 v+1} σ
                                                  (λ (a : σ),
                                                  m (@prod.{u u} β_0 σ))
                                                  (@state_t_bind.{u v} σ m
                                                    inst_1 α_0 β_0
                                                    (λ (s : σ),
                                                    @return.{u v} m inst_1
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.mk.{u u} α_0 σ x_0
                                                        s)) f)
                                                  (λ (s : σ),
                                                  (λ (this :
                                                        m (@prod.{u u} β_0 σ)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.{u u} β_0 σ)
                                                      ((λ (s_0 : σ),
                                                        @return.{u v} m inst_1
                                                          (@prod.{u u} α_0 σ)
                                                          (@prod.mk.{u u} α_0 σ
                                                            x_0 s_0)) s)
                                                      (λ (p :
                                                          @prod.{u u} α_0 σ),
                                                      @state_t_bind._match_1.{u
                                                        v} σ m inst_1 α_0 β_0 f
                                                        p)))
                                                  (@state_t_bind.equations._eqn_1.{u
                                                    v} σ m inst_1 α_0 β_0
                                                    (λ (s : σ),
                                                    @return.{u v} m inst_1
                                                      (@prod.{u u} α_0 σ)
                                                      (@prod.mk.{u u} α_0 σ x_0
                                                        s)) f) x_1))
                                              (@eq.trans.{v+1}
                                                (m (@prod.{u u} β_0 σ))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} β_0 σ)
                                                  (@has_pure.pure.{u v} m
                                                    (@applicative.to_has_pure.{u
                                                      v} m
                                                      (@monad.to_applicative.{u
                                                        v} m inst_1))
                                                    (@prod.{u u} α_0 σ)
                                                    (@prod.mk.{u u} α_0 σ x_0
                                                      x_1))
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 β_0 f))
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 β_0 f
                                                  (@prod.mk.{u u} α_0 σ x_0
                                                    x_1)) (f x_0 x_1)
                                                (@monad.pure_bind.{u v} m inst_1
                                                  (@prod.{u u} α_0 σ)
                                                  (@prod.{u u} β_0 σ)
                                                  (@prod.mk.{u u} α_0 σ x_0 x_1)
                                                  (@state_t_bind._match_1.{u v}
                                                    σ m inst_1 α_0 β_0 f))
                                                (@state_t_bind._match_1.equations._eqn_1.{v
                                                  u} σ m inst_1 α_0 β_0 f x_0
                                                  x_1))) (f x_0 x_1) (f x_0 x_1)
                                            (@eq.refl.{v+1}
                                              (m (@prod.{u u} β_0 σ))
                                              (f x_0 x_1)))
                                          (@propext
                                            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                              (f x_0 x_1) (f x_0 x_1)) @true
                                            (@eq_self_iff_true.{v+1}
                                              (m (@prod.{u u} β_0 σ))
                                              (f x_0 x_1))))) @trivial))
                                  (∀ (a : α), γ) γ
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                  (λ (x_0 : (∀ (a : α), γ)),
                                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                      (@function.comp.{u+1 u+1 (max u v)+1} α_0
                                        β_0 (@state_t.{u v} σ m inst_1 β_0)
                                        (@state_t_return.{u v} σ m inst_1 β_0)
                                        f)) α γ x_0 x)))))))
                      (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                            (∀ (a : α), γ) g
                            (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                              (∀ (a : α), γ)
                              (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                            x_0 x))
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) γ g
                          (λ (g_0 : (∀ (a : α), β)),
                          @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ)
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                            (λ (x_0 : (∀ (a : α), γ)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @state_t.{u v} σ m inst_1 α_0),
                              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                              x_0 x)))
                        ((λ (α_0 β_0 γ_0 : Type u)
                            (x_0 : @state_t.{u v} σ m inst_1 α_0)
                            (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0))
                            (g_0 :
                              (∀ (a : β_0), @state_t.{u v} σ m inst_1 γ_0)),
                          @funext.{u+1 v+1} σ
                            (λ (x_1 : σ), m (@prod.{u u} γ_0 σ))
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0
                                f) g_0)
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                              (λ (x_1 : α_0),
                              @has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                (f x_1) g_0))
                            (λ (x_1 : σ),
                            @eq.mpr.{0}
                              (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                    x_0 f) g_0 x_1)
                                (@has_bind.bind.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_bind.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0
                                  x_0
                                  (λ (x_2 : α_0),
                                  @has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                    (f x_2) g_0) x_1))
                              (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                  (x_0 x_1)
                                  (λ (x_2 : @prod.{u u} α_0 σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      β_0 f x_2)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                      γ_0 g_0)))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                  (x_0 x_1)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    γ_0
                                    (λ (x_2 : α_0) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0)))))
                              (@id_locked.{0}
                                (@eq.{1} Prop
                                  (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_0
                                      γ_0
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_0
                                        β_0 x_0 f) g_0 x_1)
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_0
                                      γ_0 x_0
                                      (λ (x_2 : α_0),
                                      @has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) β_0
                                        γ_0 (f x_2) g_0) x_1))
                                  (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                      (x_0 x_1)
                                      (λ (x_2 : @prod.{u u} α_0 σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f x_2)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                      (x_0 x_1)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 γ_0
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0))))))
                                ((λ (a a_0 : m (@prod.{u u} γ_0 σ))
                                    (e_1 :
                                      @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a a_0)
                                    (a_1 a_2 : m (@prod.{u u} γ_0 σ))
                                    (e_2 :
                                      @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_1
                                        a_2),
                                  @congr.{v+1 1} (m (@prod.{u u} γ_0 σ)) Prop
                                    (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a)
                                    (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_0) a_1
                                    a_2
                                    (@congr_arg.{v+1 max (v+1) 1}
                                      (m (@prod.{u u} γ_0 σ))
                                      (∀ (a_3 : m (@prod.{u u} γ_0 σ)), Prop) a
                                      a_0 (@eq.{v+1} (m (@prod.{u u} γ_0 σ)))
                                      e_1) e_2)
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                                    (@has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) α_0
                                      β_0 x_0 f) g_0 x_1)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                    (x_0 x_1)
                                    (λ (x_2 : @prod.{u u} α_0 σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 β_0 f x_2)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0)))
                                  (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                                    (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                      (@has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) α_0
                                        β_0 x_0 f) g_0 x_1)
                                    ((λ (s : σ),
                                      (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ)
                                          ((λ (s_0 : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} α_0 σ)
                                              (@prod.{u u} β_0 σ) (x_0 s_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 α_0 β_0 f)) s)
                                          (λ (p : @prod.{u u} β_0 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0 p))) x_1)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                      (x_0 x_1)
                                      (λ (x_2 : @prod.{u u} α_0 σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f x_2)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))
                                    (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_0 β_0 x_0 f) g_0 x_1)
                                      (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                        (λ (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_0 σ)
                                          (@prod.{u u} β_0 σ) (x_0 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f)) g_0 x_1)
                                      ((λ (s : σ),
                                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ)
                                            ((λ (s_0 : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_0 σ)
                                                (@prod.{u u} β_0 σ) (x_0 s_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 β_0 f)) s)
                                            (λ (p : @prod.{u u} β_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0 p))) x_1)
                                      ((λ (act act_0 :
                                            @state_t.{u v} σ m inst_1 β_0)
                                          (e_1 :
                                            @eq.{(max u v)+1}
                                              (@state_t.{u v} σ m inst_1 β_0)
                                              act act_0)
                                          (act_1 act_2 :
                                            (∀ (a_1 : β_0),
                                            @state_t.{u v} σ m inst_1 γ_0))
                                          (e_2 :
                                            @eq.{max (u+1) ((max u v)+1)}
                                              (∀ (a_1 : β_0),
                                              @state_t.{u v} σ m inst_1 γ_0)
                                              act_1 act_2) (a a_0 : σ)
                                          (e_3 : @eq.{u+1} σ a a_0),
                                        @congr.{u+1 v+1} σ
                                          (m (@prod.{u u} γ_0 σ))
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0 act act_1)
                                          (@state_t_bind.{u v} σ m inst_1 β_0
                                            γ_0 act_0 act_2) a a_0
                                          (@congr.{max (u+1)
                                            ((max u
                                            v)+1) (max u v)+1}
                                            (∀ (a_1 : β_0),
                                            @state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t.{u v} σ m inst_1 γ_0)
                                            (@state_t_bind.{u v} σ m inst_1 β_0
                                              γ_0 act)
                                            (@state_t_bind.{u v} σ m inst_1 β_0
                                              γ_0 act_0) act_1 act_2
                                            (@congr_arg.{(max u
                                              v)+1 max (u+1) ((max u v)+1)}
                                              (@state_t.{u v} σ m inst_1 β_0)
                                              (∀ (act_3 :
                                                  (∀ (a_1 : β_0),
                                                  @state_t.{u v} σ m inst_1
                                                    γ_0)),
                                              @state_t.{u v} σ m inst_1 γ_0) act
                                              act_0
                                              (@state_t_bind.{u v} σ m inst_1
                                                β_0 γ_0) e_1) e_2) e_3)
                                        (@has_bind.bind.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_bind.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_bind.{u v} σ m inst_1))
                                          α_0 β_0 x_0 f)
                                        (λ (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_0 σ)
                                          (@prod.{u u} β_0 σ) (x_0 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f))
                                        (@state_t_bind.equations._eqn_1.{u v} σ
                                          m inst_1 α_0 β_0 x_0 f) g_0 g_0
                                        (@eq.refl.{max (u+1) ((max u v)+1)}
                                          (∀ (a : β_0),
                                          @state_t.{u v} σ m inst_1 γ_0) g_0)
                                        x_1 x_1 (@eq.refl.{u+1} σ x_1))
                                      (@congr_fun.{u+1 v+1} σ
                                        (λ (a : σ), m (@prod.{u u} γ_0 σ))
                                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                          (λ (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} β_0 σ) (x_0 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 β_0 f)) g_0)
                                        (λ (s : σ),
                                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ)
                                            ((λ (s_0 : σ),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@prod.{u u} α_0 σ)
                                                (@prod.{u u} β_0 σ) (x_0 s_0)
                                                (@state_t_bind._match_1.{u v} σ
                                                  m inst_1 α_0 β_0 f)) s)
                                            (λ (p : @prod.{u u} β_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0 p)))
                                        (@state_t_bind.equations._eqn_1.{u v} σ
                                          m inst_1 β_0 γ_0
                                          (λ (s : σ),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} β_0 σ) (x_0 s)
                                            (@state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 β_0 f)) g_0) x_1))
                                    (@monad.bind_assoc.{u v} m inst_1
                                      (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                      (@prod.{u u} γ_0 σ) (x_0 x_1)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 β_0 f)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0)))
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0
                                    x_0
                                    (λ (x_2 : α_0),
                                    @has_bind.bind.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_bind.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_bind.{u v} σ m inst_1)) β_0
                                      γ_0 (f x_2) g_0) x_1)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                    (x_0 x_1)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      γ_0
                                      (λ (x_2 : α_0) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0))))
                                  (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                                      (λ (x_2 : α_0),
                                      @has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) β_0
                                        γ_0 (f x_2) g_0) x_1)
                                    (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                                      (λ (x_2 : α_0) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)) x_1)
                                    ((λ (s : σ),
                                      (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_0 σ)
                                          (@prod.{u u} γ_0 σ) (x_0 s)
                                          (λ (p : @prod.{u u} α_0 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 γ_0
                                            (λ (x_2 : α_0) (s_0 : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_0 σ)
                                              (@prod.{u u} γ_0 σ) (f x_2 s_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_0 γ_0 g_0)) p))) x_1)
                                    ((λ (act act_0 :
                                          @state_t.{u v} σ m inst_1 α_0)
                                        (e_1 :
                                          @eq.{(max u v)+1}
                                            (@state_t.{u v} σ m inst_1 α_0) act
                                            act_0)
                                        (act_1 act_2 :
                                          (∀ (a_1 : α_0),
                                          @state_t.{u v} σ m inst_1 γ_0))
                                        (e_2 :
                                          @eq.{max (u+1) ((max u v)+1)}
                                            (∀ (a_1 : α_0),
                                            @state_t.{u v} σ m inst_1 γ_0) act_1
                                            act_2) (a a_0 : σ)
                                        (e_3 : @eq.{u+1} σ a a_0),
                                      @congr.{u+1 v+1} σ (m (@prod.{u u} γ_0 σ))
                                        (@state_t_bind.{u v} σ m inst_1 α_0 γ_0
                                          act act_1)
                                        (@state_t_bind.{u v} σ m inst_1 α_0 γ_0
                                          act_0 act_2) a a_0
                                        (@congr.{max (u+1)
                                          ((max u
                                          v)+1) (max u v)+1}
                                          (∀ (a_1 : α_0),
                                          @state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t.{u v} σ m inst_1 γ_0)
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            γ_0 act)
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            γ_0 act_0) act_1 act_2
                                          (@congr_arg.{(max u
                                            v)+1 max (u+1) ((max u v)+1)}
                                            (@state_t.{u v} σ m inst_1 α_0)
                                            (∀ (act_3 :
                                                (∀ (a_1 : α_0),
                                                @state_t.{u v} σ m inst_1 γ_0)),
                                            @state_t.{u v} σ m inst_1 γ_0) act
                                            act_0
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              γ_0) e_1) e_2) e_3) x_0 x_0
                                      (@eq.refl.{(max u v)+1}
                                        (@state_t.{u v} σ m inst_1 α_0) x_0)
                                      (λ (x_2 : α_0),
                                      @has_bind.bind.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_bind.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_bind.{u v} σ m inst_1)) β_0
                                        γ_0 (f x_2) g_0)
                                      (λ (x_2 : α_0) (s : σ),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (f x_2 s)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0))
                                      (@funext.{u+1 (max u v)+1} α_0
                                        (λ (x_2 : α_0),
                                        @state_t.{u v} σ m inst_1 γ_0)
                                        (λ (x_2 : α_0),
                                        @state_t_bind.{u v} σ m inst_1 β_0 γ_0
                                          (f x_2) g_0)
                                        (λ (x_2 : α_0) (s : σ),
                                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} β_0 σ)
                                            (@prod.{u u} γ_0 σ) (f x_2 s)
                                            (λ (p : @prod.{u u} β_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 β_0 γ_0 g_0 p)))
                                        (λ (x_2 : α_0),
                                        @state_t_bind.equations._eqn_1.{u v} σ m
                                          inst_1 β_0 γ_0 (f x_2) g_0)) x_1 x_1
                                      (@eq.refl.{u+1} σ x_1))
                                    (@congr_fun.{u+1 v+1} σ
                                      (λ (a : σ), m (@prod.{u u} γ_0 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_0 γ_0
                                        x_0
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0)))
                                      (λ (s : σ),
                                      (λ (this : m (@prod.{u u} γ_0 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_0 σ)
                                          (@prod.{u u} γ_0 σ) (x_0 s)
                                          (λ (p : @prod.{u u} α_0 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 γ_0
                                            (λ (x_2 : α_0) (s_0 : σ),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@prod.{u u} β_0 σ)
                                              (@prod.{u u} γ_0 σ) (f x_2 s_0)
                                              (@state_t_bind._match_1.{u v} σ m
                                                inst_1 β_0 γ_0 g_0)) p)))
                                      (@state_t_bind.equations._eqn_1.{u v} σ m
                                        inst_1 α_0 γ_0 x_0
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0))) x_1))))
                              (@congr_arg.{max (u+1) (v+1) v+1}
                                (∀ (x_2 : @prod.{u u} α_0 σ),
                                m (@prod.{u u} γ_0 σ)) (m (@prod.{u u} γ_0 σ))
                                (λ (x_2 : @prod.{u u} α_0 σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    β_0 f x_2)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                    γ_0 g_0))
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                                  (λ (x_2 : α_0) (s : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                    (f x_2 s)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                      γ_0 g_0)))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ)
                                  (x_0 x_1))
                                (@funext.{u+1 v+1} (@prod.{u u} α_0 σ)
                                  (λ (x_2 : @prod.{u u} α_0 σ),
                                  m (@prod.{u u} γ_0 σ))
                                  (λ (x_2 : @prod.{u u} α_0 σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      β_0 f x_2)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                      γ_0 g_0))
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    γ_0
                                    (λ (x_2 : α_0) (s : σ),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                      (f x_2 s)
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        β_0 γ_0 g_0)))
                                  (λ (r : @prod.{u u} α_0 σ),
                                  @prod.cases_on.{0 u u} α_0 σ
                                    (λ (r_0 : @prod.{u u} α_0 σ),
                                    @eq.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f r_0)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0))
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 γ_0
                                        (λ (x_2 : α_0) (s : σ),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} β_0 σ)
                                          (@prod.{u u} γ_0 σ) (f x_2 s)
                                          (@state_t_bind._match_1.{u v} σ m
                                            inst_1 β_0 γ_0 g_0)) r_0)) r
                                    (λ (fst : α_0) (snd : σ),
                                    @eq.refl.{v+1} (m (@prod.{u u} γ_0 σ))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f
                                          (@prod.mk.{u u} α_0 σ fst snd))
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          β_0 γ_0 g_0)))))))) (∀ (a : α), β)
                          (∀ (a : α), γ) γ g
                          (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                            (∀ (a : α), γ)
                            (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                            (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                            (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                            x_0 x))))
                    (@eq.rec.{0 (max u v)+1}
                      (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                        (∀ (a : α), γ) g
                        (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                          (∀ (a : α), γ)
                          (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                          (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                      (λ (x_0 : @state_t.{u v} σ m inst_1 (∀ (a : α), γ)),
                      @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                            (∀ (a : α), γ) g
                            (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                              (∀ (a : α), γ)
                              (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                          (λ (x_1 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_2 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                            x_1 x))
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ x_0
                          (λ (x_1 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_2 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                            x_1 x)))
                      (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                        (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), β)
                            (∀ (a : α), γ) g
                            (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : α), β)
                              (∀ (a : α), γ)
                              (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                              (@state_t_return.{u v} σ m inst_1 (∀ (a : α), γ))
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @state_t.{u v} σ m inst_1 α_0),
                            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                                (@state_t.{u v} σ m inst_1 β_0)
                                (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ
                            x_0 x)))
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @state_t.{u v} σ m inst_1 α_0),
                        @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@has_pure.pure.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_pure.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_return.{u v} σ m inst_1)) β_0) f)))
                        (∀ (a : α), β) (∀ (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)))
                  (@eq.rec.{0 (max u v)+1}
                    (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                    ((λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ) x_0 g)
                      (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                    (λ (x_0 : @state_t.{u v} σ m inst_1 (∀ (a : α), γ)),
                    @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ)
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                        (λ (x_1 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_2 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_1
                          x))
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ x_0
                        (λ (x_1 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_2 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_1
                          x)))
                    (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
                      (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_0 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ)
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                        (λ (x_0 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0
                          x)))
                    (@state_t_bind.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                      (@state_t_return.{u v} σ m inst_1
                        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                      (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @state_t.{u v} σ m inst_1 α_0),
                        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                            (@state_t.{u v} σ m inst_1 β_0)
                            (@state_t_return.{u v} σ m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                    (@eq.symm.{(max u v)+1}
                      (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
                      (@state_t_bind.{u v} σ m inst_1
                        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                        (@state_t_return.{u v} σ m inst_1
                          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                      ((λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ) x_0 g)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                      ((λ (α_0 β_0 : Type u) (x_0 : α_0)
                          (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0)),
                        @funext.{u+1 v+1} σ (λ (x_1 : σ), m (@prod.{u u} β_0 σ))
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                            (@has_pure.pure.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_pure.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_return.{u v} σ m inst_1)) α_0 x_0) f)
                          (f x_0)
                          (λ (x_1 : σ),
                          @eq.mpr.{0}
                            (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                              (@has_bind.bind.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@has_bind.mk.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                (@has_pure.pure.{u max u v}
                                  (@state_t.{u v} σ m inst_1)
                                  (@has_pure.mk.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@state_t_return.{u v} σ m inst_1)) α_0 x_0)
                                f x_1) (f x_0 x_1)) @true
                            (@id_locked.{0}
                              (@eq.{1} Prop
                                (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_0
                                      x_0) f x_1) (f x_0 x_1)) @true)
                              (@eq.trans.{1} Prop
                                (@eq.{v+1} (m (@prod.{u u} β_0 σ))
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_0
                                      x_0) f x_1) (f x_0 x_1))
                                (@eq.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1)
                                  (f x_0 x_1)) @true
                                ((λ (a a_0 : m (@prod.{u u} β_0 σ))
                                    (e_1 :
                                      @eq.{v+1} (m (@prod.{u u} β_0 σ)) a a_0)
                                    (a_1 a_2 : m (@prod.{u u} β_0 σ))
                                    (e_2 :
                                      @eq.{v+1} (m (@prod.{u u} β_0 σ)) a_1
                                        a_2),
                                  @congr.{v+1 1} (m (@prod.{u u} β_0 σ)) Prop
                                    (@eq.{v+1} (m (@prod.{u u} β_0 σ)) a)
                                    (@eq.{v+1} (m (@prod.{u u} β_0 σ)) a_0) a_1
                                    a_2
                                    (@congr_arg.{v+1 max (v+1) 1}
                                      (m (@prod.{u u} β_0 σ))
                                      (∀ (a_3 : m (@prod.{u u} β_0 σ)), Prop) a
                                      a_0 (@eq.{v+1} (m (@prod.{u u} β_0 σ)))
                                      e_1) e_2)
                                  (@has_bind.bind.{u max u v}
                                    (@state_t.{u v} σ m inst_1)
                                    (@has_bind.mk.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@state_t_bind.{u v} σ m inst_1)) α_0 β_0
                                    (@has_pure.pure.{u max u v}
                                      (@state_t.{u v} σ m inst_1)
                                      (@has_pure.mk.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@state_t_return.{u v} σ m inst_1)) α_0
                                      x_0) f x_1) (f x_0 x_1)
                                  (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                                    (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                                      (@has_pure.pure.{u max u v}
                                        (@state_t.{u v} σ m inst_1)
                                        (@has_pure.mk.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@state_t_return.{u v} σ m inst_1))
                                        α_0 x_0) f x_1)
                                    ((λ (s : σ),
                                      (λ (this : m (@prod.{u u} β_0 σ)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@prod.{u u} α_0 σ)
                                          (@prod.{u u} β_0 σ)
                                          ((λ (s_0 : σ),
                                            @return.{u v} m inst_1
                                              (@prod.{u u} α_0 σ)
                                              (@prod.mk.{u u} α_0 σ x_0 s_0)) s)
                                          (λ (p : @prod.{u u} α_0 σ),
                                          @state_t_bind._match_1.{u v} σ m
                                            inst_1 α_0 β_0 f p))) x_1)
                                    (f x_0 x_1)
                                    (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                                      (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                                        (@has_pure.pure.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_pure.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_return.{u v} σ m inst_1))
                                          α_0 x_0) f x_1)
                                      (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                                        (λ (s : σ),
                                        @return.{u v} m inst_1
                                          (@prod.{u u} α_0 σ)
                                          (@prod.mk.{u u} α_0 σ x_0 s)) f x_1)
                                      ((λ (s : σ),
                                        (λ (this : m (@prod.{u u} β_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} β_0 σ)
                                            ((λ (s_0 : σ),
                                              @return.{u v} m inst_1
                                                (@prod.{u u} α_0 σ)
                                                (@prod.mk.{u u} α_0 σ x_0 s_0))
                                              s)
                                            (λ (p : @prod.{u u} α_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 β_0 f p))) x_1)
                                      ((λ (act act_0 :
                                            @state_t.{u v} σ m inst_1 α_0)
                                          (e_1 :
                                            @eq.{(max u v)+1}
                                              (@state_t.{u v} σ m inst_1 α_0)
                                              act act_0)
                                          (act_1 act_2 :
                                            (∀ (a_1 : α_0),
                                            @state_t.{u v} σ m inst_1 β_0))
                                          (e_2 :
                                            @eq.{max (u+1) ((max u v)+1)}
                                              (∀ (a_1 : α_0),
                                              @state_t.{u v} σ m inst_1 β_0)
                                              act_1 act_2) (a a_0 : σ)
                                          (e_3 : @eq.{u+1} σ a a_0),
                                        @congr.{u+1 v+1} σ
                                          (m (@prod.{u u} β_0 σ))
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            β_0 act act_1)
                                          (@state_t_bind.{u v} σ m inst_1 α_0
                                            β_0 act_0 act_2) a a_0
                                          (@congr.{max (u+1)
                                            ((max u
                                            v)+1) (max u v)+1}
                                            (∀ (a_1 : α_0),
                                            @state_t.{u v} σ m inst_1 β_0)
                                            (@state_t.{u v} σ m inst_1 β_0)
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              β_0 act)
                                            (@state_t_bind.{u v} σ m inst_1 α_0
                                              β_0 act_0) act_1 act_2
                                            (@congr_arg.{(max u
                                              v)+1 max (u+1) ((max u v)+1)}
                                              (@state_t.{u v} σ m inst_1 α_0)
                                              (∀ (act_3 :
                                                  (∀ (a_1 : α_0),
                                                  @state_t.{u v} σ m inst_1
                                                    β_0)),
                                              @state_t.{u v} σ m inst_1 β_0) act
                                              act_0
                                              (@state_t_bind.{u v} σ m inst_1
                                                α_0 β_0) e_1) e_2) e_3)
                                        (@has_pure.pure.{u max u v}
                                          (@state_t.{u v} σ m inst_1)
                                          (@has_pure.mk.{u max u v}
                                            (@state_t.{u v} σ m inst_1)
                                            (@state_t_return.{u v} σ m inst_1))
                                          α_0 x_0)
                                        (λ (s : σ),
                                        @return.{u v} m inst_1
                                          (@prod.{u u} α_0 σ)
                                          (@prod.mk.{u u} α_0 σ x_0 s))
                                        (@state_t_return.equations._eqn_1.{u v}
                                          σ m inst_1 α_0 x_0) f f
                                        (@eq.refl.{max (u+1) ((max u v)+1)}
                                          (∀ (a : α_0),
                                          @state_t.{u v} σ m inst_1 β_0) f) x_1
                                        x_1 (@eq.refl.{u+1} σ x_1))
                                      (@congr_fun.{u+1 v+1} σ
                                        (λ (a : σ), m (@prod.{u u} β_0 σ))
                                        (@state_t_bind.{u v} σ m inst_1 α_0 β_0
                                          (λ (s : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_0 σ)
                                            (@prod.mk.{u u} α_0 σ x_0 s)) f)
                                        (λ (s : σ),
                                        (λ (this : m (@prod.{u u} β_0 σ)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@prod.{u u} α_0 σ)
                                            (@prod.{u u} β_0 σ)
                                            ((λ (s_0 : σ),
                                              @return.{u v} m inst_1
                                                (@prod.{u u} α_0 σ)
                                                (@prod.mk.{u u} α_0 σ x_0 s_0))
                                              s)
                                            (λ (p : @prod.{u u} α_0 σ),
                                            @state_t_bind._match_1.{u v} σ m
                                              inst_1 α_0 β_0 f p)))
                                        (@state_t_bind.equations._eqn_1.{u v} σ
                                          m inst_1 α_0 β_0
                                          (λ (s : σ),
                                          @return.{u v} m inst_1
                                            (@prod.{u u} α_0 σ)
                                            (@prod.mk.{u u} α_0 σ x_0 s)) f)
                                        x_1))
                                    (@eq.trans.{v+1} (m (@prod.{u u} β_0 σ))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                        (@has_pure.pure.{u v} m
                                          (@applicative.to_has_pure.{u v} m
                                            (@monad.to_applicative.{u v} m
                                              inst_1)) (@prod.{u u} α_0 σ)
                                          (@prod.mk.{u u} α_0 σ x_0 x_1))
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f))
                                      (@state_t_bind._match_1.{u v} σ m inst_1
                                        α_0 β_0 f
                                        (@prod.mk.{u u} α_0 σ x_0 x_1))
                                      (f x_0 x_1)
                                      (@monad.pure_bind.{u v} m inst_1
                                        (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                        (@prod.mk.{u u} α_0 σ x_0 x_1)
                                        (@state_t_bind._match_1.{u v} σ m inst_1
                                          α_0 β_0 f))
                                      (@state_t_bind._match_1.equations._eqn_1.{v
                                        u} σ m inst_1 α_0 β_0 f x_0 x_1)))
                                  (f x_0 x_1) (f x_0 x_1)
                                  (@eq.refl.{v+1} (m (@prod.{u u} β_0 σ))
                                    (f x_0 x_1)))
                                (@propext
                                  (@eq.{v+1} (m (@prod.{u u} β_0 σ)) (f x_0 x_1)
                                    (f x_0 x_1)) @true
                                  (@eq_self_iff_true.{v+1}
                                    (m (@prod.{u u} β_0 σ)) (f x_0 x_1)))))
                            @trivial)) (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                        (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h_0)
                        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @state_t.{u v} σ m inst_1 α_0),
                          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                              (@state_t.{u v} σ m inst_1 β_0)
                              (@state_t_return.{u v} σ m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ) x_0 g))))))))
          (@eq.symm.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
              (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
                (λ (h_0 : (∀ (a : β), γ)),
                @state_t_bind.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@state_t_return.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f))
                    (∀ (a : α), β) (∀ (a : α), γ) x_0 g)))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) γ h
              (λ (h_0 : (∀ (a : β), γ)),
              @state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
                (@state_t_bind.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@state_t_return.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @state_t.{u v} σ m inst_1 α_0),
                    @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                        (@state_t.{u v} σ m inst_1 β_0)
                        (@state_t_return.{u v} σ m inst_1 β_0) f))
                    (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                (λ (x_0 : (∀ (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x)))
            ((λ (α_0 β_0 γ_0 : Type u) (x_0 : @state_t.{u v} σ m inst_1 α_0)
                (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0))
                (g_0 : (∀ (a : β_0), @state_t.{u v} σ m inst_1 γ_0)),
              @funext.{u+1 v+1} σ (λ (x_1 : σ), m (@prod.{u u} γ_0 σ))
                (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0)
                (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                  (λ (x_1 : α_0),
                  @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_1) g_0))
                (λ (x_1 : σ),
                @eq.mpr.{0}
                  (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0
                      x_1)
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                      (λ (x_2 : α_0),
                      @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2) g_0)
                      x_1))
                  (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                      (λ (x_2 : @prod.{u u} α_0 σ),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                        (λ (x_2 : α_0) (s : σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))))
                  (@id_locked.{0}
                    (@eq.{1} Prop
                      (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f)
                          g_0 x_1)
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                          (λ (x_2 : α_0),
                          @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                            g_0) x_1))
                      (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                          (λ (x_2 : @prod.{u u} α_0 σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                              x_2)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0)))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                            (λ (x_2 : α_0) (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0))))))
                    ((λ (a a_0 : m (@prod.{u u} γ_0 σ))
                        (e_1 : @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a a_0)
                        (a_1 a_2 : m (@prod.{u u} γ_0 σ))
                        (e_2 : @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_1 a_2),
                      @congr.{v+1 1} (m (@prod.{u u} γ_0 σ)) Prop
                        (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a)
                        (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_0) a_1 a_2
                        (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} γ_0 σ))
                          (∀ (a_3 : m (@prod.{u u} γ_0 σ)), Prop) a a_0
                          (@eq.{v+1} (m (@prod.{u u} γ_0 σ))) e_1) e_2)
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0
                        x_1)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} γ_0 σ) (x_0 x_1)
                        (λ (x_2 : @prod.{u u} α_0 σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                            x_2)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))
                      (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f)
                          g_0 x_1)
                        ((λ (s : σ),
                          (λ (this : m (@prod.{u u} γ_0 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                              ((λ (s_0 : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                  (x_0 s_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    β_0 f)) s)
                              (λ (p : @prod.{u u} β_0 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0 p))) x_1)
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                          (λ (x_2 : @prod.{u u} α_0 σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                              x_2)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0)))
                        (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                          (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f)
                            g_0 x_1)
                          (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                            (λ (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                f)) g_0 x_1)
                          ((λ (s : σ),
                            (λ (this : m (@prod.{u u} γ_0 σ)), this)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                ((λ (s_0 : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                    (x_0 s_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      β_0 f)) s)
                                (λ (p : @prod.{u u} β_0 σ),
                                @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                  g_0 p))) x_1)
                          ((λ (act act_0 : @state_t.{u v} σ m inst_1 β_0)
                              (e_1 :
                                @eq.{(max u v)+1}
                                  (@state_t.{u v} σ m inst_1 β_0) act act_0)
                              (act_1 act_2 :
                                (∀ (a_1 : β_0), @state_t.{u v} σ m inst_1 γ_0))
                              (e_2 :
                                @eq.{max (u+1) ((max u v)+1)}
                                  (∀ (a_1 : β_0), @state_t.{u v} σ m inst_1 γ_0)
                                  act_1 act_2) (a a_0 : σ)
                              (e_3 : @eq.{u+1} σ a a_0),
                            @congr.{u+1 v+1} σ (m (@prod.{u u} γ_0 σ))
                              (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act act_1)
                              (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act_0
                                act_2) a a_0
                              (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                                (∀ (a_1 : β_0), @state_t.{u v} σ m inst_1 γ_0)
                                (@state_t.{u v} σ m inst_1 γ_0)
                                (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act)
                                (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act_0)
                                act_1 act_2
                                (@congr_arg.{(max u
                                  v)+1 max (u+1) ((max u v)+1)}
                                  (@state_t.{u v} σ m inst_1 β_0)
                                  (∀ (act_3 :
                                      (∀ (a_1 : β_0),
                                      @state_t.{u v} σ m inst_1 γ_0)),
                                  @state_t.{u v} σ m inst_1 γ_0) act act_0
                                  (@state_t_bind.{u v} σ m inst_1 β_0 γ_0) e_1)
                                e_2) e_3)
                            (@has_bind.bind.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@has_bind.mk.{u max u v}
                                (@state_t.{u v} σ m inst_1)
                                (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f)
                            (λ (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                f))
                            (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_0
                              β_0 x_0 f) g_0 g_0
                            (@eq.refl.{max (u+1) ((max u v)+1)}
                              (∀ (a : β_0), @state_t.{u v} σ m inst_1 γ_0) g_0)
                            x_1 x_1 (@eq.refl.{u+1} σ x_1))
                          (@congr_fun.{u+1 v+1} σ
                            (λ (a : σ), m (@prod.{u u} γ_0 σ))
                            (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                              (λ (s : σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                  f)) g_0)
                            (λ (s : σ),
                            (λ (this : m (@prod.{u u} γ_0 σ)), this)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                ((λ (s_0 : σ),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                    (x_0 s_0)
                                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                      β_0 f)) s)
                                (λ (p : @prod.{u u} β_0 σ),
                                @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                  g_0 p)))
                            (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 β_0
                              γ_0
                              (λ (s : σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                  f)) g_0) x_1))
                        (@monad.bind_assoc.{u v} m inst_1 (@prod.{u u} α_0 σ)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                        (λ (x_2 : α_0),
                        @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                          g_0) x_1)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} γ_0 σ) (x_0 x_1)
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0))))
                      (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                          (λ (x_2 : α_0),
                          @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                            g_0) x_1)
                        (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0)) x_1)
                        ((λ (s : σ),
                          (λ (this : m (@prod.{u u} γ_0 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 s)
                              (λ (p : @prod.{u u} α_0 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                                (λ (x_2 : α_0) (s_0 : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                  (f x_2 s_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                    γ_0 g_0)) p))) x_1)
                        ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_0)
                            (e_1 :
                              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_0)
                                act act_0)
                            (act_1 act_2 :
                              (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 γ_0))
                            (e_2 :
                              @eq.{max (u+1) ((max u v)+1)}
                                (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 γ_0)
                                act_1 act_2) (a a_0 : σ)
                            (e_3 : @eq.{u+1} σ a a_0),
                          @congr.{u+1 v+1} σ (m (@prod.{u u} γ_0 σ))
                            (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act act_1)
                            (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act_0 act_2)
                            a a_0
                            (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                              (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 γ_0)
                              (@state_t.{u v} σ m inst_1 γ_0)
                              (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act)
                              (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act_0)
                              act_1 act_2
                              (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                                (@state_t.{u v} σ m inst_1 α_0)
                                (∀ (act_3 :
                                    (∀ (a_1 : α_0),
                                    @state_t.{u v} σ m inst_1 γ_0)),
                                @state_t.{u v} σ m inst_1 γ_0) act act_0
                                (@state_t_bind.{u v} σ m inst_1 α_0 γ_0) e_1)
                              e_2) e_3) x_0 x_0
                          (@eq.refl.{(max u v)+1}
                            (@state_t.{u v} σ m inst_1 α_0) x_0)
                          (λ (x_2 : α_0),
                          @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                            g_0)
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0))
                          (@funext.{u+1 (max u v)+1} α_0
                            (λ (x_2 : α_0), @state_t.{u v} σ m inst_1 γ_0)
                            (λ (x_2 : α_0),
                            @state_t_bind.{u v} σ m inst_1 β_0 γ_0 (f x_2) g_0)
                            (λ (x_2 : α_0) (s : σ),
                            (λ (this : m (@prod.{u u} γ_0 σ)), this)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                (f x_2 s)
                                (λ (p : @prod.{u u} β_0 σ),
                                @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                  g_0 p)))
                            (λ (x_2 : α_0),
                            @state_t_bind.equations._eqn_1.{u v} σ m inst_1 β_0
                              γ_0 (f x_2) g_0)) x_1 x_1 (@eq.refl.{u+1} σ x_1))
                        (@congr_fun.{u+1 v+1} σ
                          (λ (a : σ), m (@prod.{u u} γ_0 σ))
                          (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                            (λ (x_2 : α_0) (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0)))
                          (λ (s : σ),
                          (λ (this : m (@prod.{u u} γ_0 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 s)
                              (λ (p : @prod.{u u} α_0 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                                (λ (x_2 : α_0) (s_0 : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                  (f x_2 s_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 β_0
                                    γ_0 g_0)) p)))
                          (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_0
                            γ_0 x_0
                            (λ (x_2 : α_0) (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0))) x_1))))
                  (@congr_arg.{max (u+1) (v+1) v+1}
                    (∀ (x_2 : @prod.{u u} α_0 σ), m (@prod.{u u} γ_0 σ))
                    (m (@prod.{u u} γ_0 σ))
                    (λ (x_2 : @prod.{u u} α_0 σ),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                      (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                      (λ (x_2 : α_0) (s : σ),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1))
                    (@funext.{u+1 v+1} (@prod.{u u} α_0 σ)
                      (λ (x_2 : @prod.{u u} α_0 σ), m (@prod.{u u} γ_0 σ))
                      (λ (x_2 : @prod.{u u} α_0 σ),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                      (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                        (λ (x_2 : α_0) (s : σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))
                      (λ (r : @prod.{u u} α_0 σ),
                      @prod.cases_on.{0 u u} α_0 σ
                        (λ (r_0 : @prod.{u u} α_0 σ),
                        @eq.{v+1} (m (@prod.{u u} γ_0 σ))
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                              r_0)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0))
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                            (λ (x_2 : α_0) (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0)) r_0)) r
                        (λ (fst : α_0) (snd : σ),
                        @eq.refl.{v+1} (m (@prod.{u u} γ_0 σ))
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                              (@prod.mk.{u u} α_0 σ fst snd))
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0)))))))) (∀ (a : β), γ) (∀ (a : α), γ) γ h
              (λ (h_0 : (∀ (a : β), γ)),
              @state_t_bind.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@state_t_return.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x))))
        (@eq.rec.{0 (max u v)+1} (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
          (@state_t_bind.{u v} σ m inst_1
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
              (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@state_t.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@state_t_return.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@function.comp.{u+1 u+1 u+1} α β γ)))
            (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) x_0 g))
          (λ (x_0 : @state_t.{u v} σ m inst_1 (∀ (a : α), γ)),
          @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ x_0
              (λ (x_1 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_1 x))
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
              (@state_t_bind.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                  (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@state_t.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@state_t_return.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@function.comp.{u+1 u+1 u+1} α β γ)))
                (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_2 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_1 g))
              (λ (x_1 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_1 x)))
          (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
            (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
              (@state_t_bind.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                  (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@state_t.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@state_t_return.{u v} σ m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@function.comp.{u+1 u+1 u+1} α β γ)))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @state_t.{u v} σ m inst_1 α_0),
                  @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                      (@state_t.{u v} σ m inst_1 β_0)
                      (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x)))
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
            (λ (x_0 : (∀ (a : β), γ)),
            @state_t_bind.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@state_t.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@state_t_return.{u v} σ m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@function.comp.{u+1 u+1 u+1} α β γ) x_0)
              (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_1 g)))
          ((λ (α_0 β_0 γ_0 : Type u) (x_0 : @state_t.{u v} σ m inst_1 α_0)
              (f : (∀ (a : α_0), @state_t.{u v} σ m inst_1 β_0))
              (g_0 : (∀ (a : β_0), @state_t.{u v} σ m inst_1 γ_0)),
            @funext.{u+1 v+1} σ (λ (x_1 : σ), m (@prod.{u u} γ_0 σ))
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0)
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                (λ (x_1 : α_0),
                @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_1) g_0))
              (λ (x_1 : σ),
              @eq.mpr.{0}
                (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0
                    x_1)
                  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                    (λ (x_2 : α_0),
                    @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2) g_0)
                    x_1))
                (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                    (λ (x_2 : @prod.{u u} α_0 σ),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                      (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                      (λ (x_2 : α_0) (s : σ),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                          g_0)))))
                (@id_locked.{0}
                  (@eq.{1} Prop
                    (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0
                        x_1)
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                        (λ (x_2 : α_0),
                        @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                          g_0) x_1))
                    (@eq.{v+1} (m (@prod.{u u} γ_0 σ))
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} γ_0 σ) (x_0 x_1)
                        (λ (x_2 : @prod.{u u} α_0 σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                            x_2)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} γ_0 σ) (x_0 x_1)
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0))))))
                  ((λ (a a_0 : m (@prod.{u u} γ_0 σ))
                      (e_1 : @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a a_0)
                      (a_1 a_2 : m (@prod.{u u} γ_0 σ))
                      (e_2 : @eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_1 a_2),
                    @congr.{v+1 1} (m (@prod.{u u} γ_0 σ)) Prop
                      (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a)
                      (@eq.{v+1} (m (@prod.{u u} γ_0 σ)) a_0) a_1 a_2
                      (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} γ_0 σ))
                        (∀ (a_3 : m (@prod.{u u} γ_0 σ)), Prop) a a_0
                        (@eq.{v+1} (m (@prod.{u u} γ_0 σ))) e_1) e_2)
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0
                      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0
                      x_1)
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                      (λ (x_2 : @prod.{u u} α_0 σ),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                    (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                      (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f) g_0
                        x_1)
                      ((λ (s : σ),
                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                            ((λ (s_0 : σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                (x_0 s_0)
                                (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                  f)) s)
                            (λ (p : @prod.{u u} β_0 σ),
                            @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0
                              p))) x_1)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@prod.{u u} α_0 σ)
                        (@prod.{u u} γ_0 σ) (x_0 x_1)
                        (λ (x_2 : @prod.{u u} α_0 σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                            x_2)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))
                      (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f)
                          g_0 x_1)
                        (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                          (λ (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f))
                          g_0 x_1)
                        ((λ (s : σ),
                          (λ (this : m (@prod.{u u} γ_0 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                              ((λ (s_0 : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                  (x_0 s_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    β_0 f)) s)
                              (λ (p : @prod.{u u} β_0 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0 p))) x_1)
                        ((λ (act act_0 : @state_t.{u v} σ m inst_1 β_0)
                            (e_1 :
                              @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
                                act act_0)
                            (act_1 act_2 :
                              (∀ (a_1 : β_0), @state_t.{u v} σ m inst_1 γ_0))
                            (e_2 :
                              @eq.{max (u+1) ((max u v)+1)}
                                (∀ (a_1 : β_0), @state_t.{u v} σ m inst_1 γ_0)
                                act_1 act_2) (a a_0 : σ)
                            (e_3 : @eq.{u+1} σ a a_0),
                          @congr.{u+1 v+1} σ (m (@prod.{u u} γ_0 σ))
                            (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act act_1)
                            (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act_0 act_2)
                            a a_0
                            (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                              (∀ (a_1 : β_0), @state_t.{u v} σ m inst_1 γ_0)
                              (@state_t.{u v} σ m inst_1 γ_0)
                              (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act)
                              (@state_t_bind.{u v} σ m inst_1 β_0 γ_0 act_0)
                              act_1 act_2
                              (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                                (@state_t.{u v} σ m inst_1 β_0)
                                (∀ (act_3 :
                                    (∀ (a_1 : β_0),
                                    @state_t.{u v} σ m inst_1 γ_0)),
                                @state_t.{u v} σ m inst_1 γ_0) act act_0
                                (@state_t_bind.{u v} σ m inst_1 β_0 γ_0) e_1)
                              e_2) e_3)
                          (@has_bind.bind.{u max u v}
                            (@state_t.{u v} σ m inst_1)
                            (@has_bind.mk.{u max u v}
                              (@state_t.{u v} σ m inst_1)
                              (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0 f)
                          (λ (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f))
                          (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_0
                            β_0 x_0 f) g_0 g_0
                          (@eq.refl.{max (u+1) ((max u v)+1)}
                            (∀ (a : β_0), @state_t.{u v} σ m inst_1 γ_0) g_0)
                          x_1 x_1 (@eq.refl.{u+1} σ x_1))
                        (@congr_fun.{u+1 v+1} σ
                          (λ (a : σ), m (@prod.{u u} γ_0 σ))
                          (@state_t_bind.{u v} σ m inst_1 β_0 γ_0
                            (λ (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                f)) g_0)
                          (λ (s : σ),
                          (λ (this : m (@prod.{u u} γ_0 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                              ((λ (s_0 : σ),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ)
                                  (x_0 s_0)
                                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0
                                    β_0 f)) s)
                              (λ (p : @prod.{u u} β_0 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0 p)))
                          (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 β_0
                            γ_0
                            (λ (s : σ),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} α_0 σ) (@prod.{u u} β_0 σ) (x_0 s)
                              (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0
                                f)) g_0) x_1))
                      (@monad.bind_assoc.{u v} m inst_1 (@prod.{u u} α_0 σ)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@state_t_bind.{u v} σ m inst_1)) α_0 γ_0 x_0
                      (λ (x_2 : α_0),
                      @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2) g_0)
                      x_1)
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                        (λ (x_2 : α_0) (s : σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0))))
                    (@eq.trans.{v+1} (m (@prod.{u u} γ_0 σ))
                      (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                        (λ (x_2 : α_0),
                        @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                          g_0) x_1)
                      (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                        (λ (x_2 : α_0) (s : σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                        x_1)
                      ((λ (s : σ),
                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 s)
                            (λ (p : @prod.{u u} α_0 σ),
                            @state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                              (λ (x_2 : α_0) (s_0 : σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                (f x_2 s_0)
                                (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                  g_0)) p))) x_1)
                      ((λ (act act_0 : @state_t.{u v} σ m inst_1 α_0)
                          (e_1 :
                            @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_0)
                              act act_0)
                          (act_1 act_2 :
                            (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 γ_0))
                          (e_2 :
                            @eq.{max (u+1) ((max u v)+1)}
                              (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 γ_0)
                              act_1 act_2) (a a_0 : σ)
                          (e_3 : @eq.{u+1} σ a a_0),
                        @congr.{u+1 v+1} σ (m (@prod.{u u} γ_0 σ))
                          (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act act_1)
                          (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act_0 act_2) a
                          a_0
                          (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                            (∀ (a_1 : α_0), @state_t.{u v} σ m inst_1 γ_0)
                            (@state_t.{u v} σ m inst_1 γ_0)
                            (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act)
                            (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 act_0) act_1
                            act_2
                            (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                              (@state_t.{u v} σ m inst_1 α_0)
                              (∀ (act_3 :
                                  (∀ (a_1 : α_0),
                                  @state_t.{u v} σ m inst_1 γ_0)),
                              @state_t.{u v} σ m inst_1 γ_0) act act_0
                              (@state_t_bind.{u v} σ m inst_1 α_0 γ_0) e_1) e_2)
                          e_3) x_0 x_0
                        (@eq.refl.{(max u v)+1} (@state_t.{u v} σ m inst_1 α_0)
                          x_0)
                        (λ (x_2 : α_0),
                        @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                            (@state_t_bind.{u v} σ m inst_1)) β_0 γ_0 (f x_2)
                          g_0)
                        (λ (x_2 : α_0) (s : σ),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                        (@funext.{u+1 (max u v)+1} α_0
                          (λ (x_2 : α_0), @state_t.{u v} σ m inst_1 γ_0)
                          (λ (x_2 : α_0),
                          @state_t_bind.{u v} σ m inst_1 β_0 γ_0 (f x_2) g_0)
                          (λ (x_2 : α_0) (s : σ),
                          (λ (this : m (@prod.{u u} γ_0 σ)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                              (λ (p : @prod.{u u} β_0 σ),
                              @state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                g_0 p)))
                          (λ (x_2 : α_0),
                          @state_t_bind.equations._eqn_1.{u v} σ m inst_1 β_0
                            γ_0 (f x_2) g_0)) x_1 x_1 (@eq.refl.{u+1} σ x_1))
                      (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} γ_0 σ))
                        (@state_t_bind.{u v} σ m inst_1 α_0 γ_0 x_0
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0)))
                        (λ (s : σ),
                        (λ (this : m (@prod.{u u} γ_0 σ)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 s)
                            (λ (p : @prod.{u u} α_0 σ),
                            @state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                              (λ (x_2 : α_0) (s_0 : σ),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                                (f x_2 s_0)
                                (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                                  g_0)) p)))
                        (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α_0 γ_0
                          x_0
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0))) x_1))))
                (@congr_arg.{max (u+1) (v+1) v+1}
                  (∀ (x_2 : @prod.{u u} α_0 σ), m (@prod.{u u} γ_0 σ))
                  (m (@prod.{u u} γ_0 σ))
                  (λ (x_2 : @prod.{u u} α_0 σ),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                    (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                  (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                    (λ (x_2 : α_0) (s : σ),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                      (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α_0 σ) (@prod.{u u} γ_0 σ) (x_0 x_1))
                  (@funext.{u+1 v+1} (@prod.{u u} α_0 σ)
                    (λ (x_2 : @prod.{u u} α_0 σ), m (@prod.{u u} γ_0 σ))
                    (λ (x_2 : @prod.{u u} α_0 σ),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f x_2)
                      (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                    (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                      (λ (x_2 : α_0) (s : σ),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                        (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0)))
                    (λ (r : @prod.{u u} α_0 σ),
                    @prod.cases_on.{0 u u} α_0 σ
                      (λ (r_0 : @prod.{u u} α_0 σ),
                      @eq.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                            r_0)
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0 g_0))
                        (@state_t_bind._match_1.{u v} σ m inst_1 α_0 γ_0
                          (λ (x_2 : α_0) (s : σ),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ) (f x_2 s)
                            (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                              g_0)) r_0)) r
                      (λ (fst : α_0) (snd : σ),
                      @eq.refl.{v+1} (m (@prod.{u u} γ_0 σ))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1)
                          (@prod.{u u} β_0 σ) (@prod.{u u} γ_0 σ)
                          (@state_t_bind._match_1.{u v} σ m inst_1 α_0 β_0 f
                            (@prod.mk.{u u} α_0 σ fst snd))
                          (@state_t_bind._match_1.{u v} σ m inst_1 β_0 γ_0
                            g_0)))))))) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ) h
            (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
              (@state_t.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@state_t_return.{u v} σ m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@function.comp.{u+1 u+1 u+1} α β γ))
            (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) x_0 g))))
      (@eq.rec.{0 (max u v)+1}
        (@state_t.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
        (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
          (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@state_t.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
            (@state_t_return.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
            (@function.comp.{u+1 u+1 u+1} α β γ)))
        (λ (x_0 :
            @state_t.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
            (@state_t_bind.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@state_t.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@state_t_return.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@function.comp.{u+1 u+1 u+1} α β γ)))
              (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_1 g))
            (λ (x_1 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_2 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_1 x))
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
            (@state_t_bind.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ) x_0
              (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_1 g))
            (λ (x_1 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_2 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_1 x)))
        (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
          (@state_t_bind.{u v} σ m inst_1 (∀ (a : α), γ) γ
            (@state_t_bind.{u v} σ m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@state_t_bind.{u v} σ m inst_1 (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                (@function.comp.{u+1 u+1 (max u v)+1} (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@state_t.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@state_t_return.{u v} σ m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@function.comp.{u+1 u+1 u+1} α β γ)))
              (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @state_t.{u v} σ m inst_1 α_0),
                @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                    (@state_t.{u v} σ m inst_1 β_0)
                    (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_0 g))
            (λ (x_0 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @state_t.{u v} σ m inst_1 α_0),
              @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                  (@state_t.{u v} σ m inst_1 β_0)
                  (@state_t_return.{u v} σ m inst_1 β_0) f)) α γ x_0 x)))
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
            (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) β_0) f))) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)))
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0))
              (λ (α_1 β_1 : Type u),
              @function.comp.{u+1 u+1 (max u v)+1} α_1 (∀ (a : β_1), α_1)
                (∀ (a : @state_t.{u v} σ m inst_1 β_1),
                @state_t.{u v} σ m inst_1 α_1)
                ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_2 : @state_t.{u v} σ m inst_1 α_2),
                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                      (@state_t.{u v} σ m inst_1 β_2)
                      (@state_t_return.{u v} σ m inst_1 β_2) f_0)) β_1 α_1)
                (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0 x_1 x_0))) α γ
      (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (∀ (a : α), γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
          (∀ (a : α), γ) x_0 g)) x))
  (@eq.rec.{0 (max u v)+1} (@state_t.{u v} σ m inst_1 (∀ (a : α), γ))
    (@state_t_bind.{u v} σ m inst_1 (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
      (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h)
      (λ (x_0 : (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
        (∀ (a : α), γ) x_0 g))
    (λ (x_0 : @state_t.{u v} σ m inst_1 (∀ (a : α), γ)),
    @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_2 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_3 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2 x_1)) α
        γ
        (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)
          (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_2 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_1 g)) x)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_2 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_3 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_3
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_2 x_1)) α
        γ x_0 x))
    (@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        γ
        (@state_t_bind.{u v} σ m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)
          (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_0 g)) x))
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @state_t.{u v} σ m inst_1 α_1),
          @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
              (@state_t.{u v} σ m inst_1 β_1)
              (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g)
    ((λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @state_t.{u v} σ m inst_1 α_0),
      @rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β_0)
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @state_t.{u v} σ m inst_1 α_1),
              @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                  (@state_t.{u v} σ m inst_1 β_1)
                  (@state_t_return.{u v} σ m inst_1 β_1) f_0))
              (λ (α_1 β_1 : Type u),
              @function.comp.{u+1 u+1 (max u v)+1} α_1 (∀ (a : β_1), α_1)
                (∀ (a : @state_t.{u v} σ m inst_1 β_1),
                @state_t.{u v} σ m inst_1 α_1)
                ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_2 : @state_t.{u v} σ m inst_1 α_2),
                  @state_t_bind.{u v} σ m inst_1 α_2 β_2 x_2
                    (@function.comp.{u+1 u+1 (max u v)+1} α_2 β_2
                      (@state_t.{u v} σ m inst_1 β_2)
                      (@state_t_return.{u v} σ m inst_1 β_2) f_0)) β_1 α_1)
                (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0 x_1 x_0)))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_10,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (f : (∀ (a : α), β)) (x : @state_t.{u v} σ m inst_1 α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α β x
    (@function.comp.{u+1 u+1 (max u v)+1} α β (@state_t.{u v} σ m inst_1 β)
      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_return.{u v} σ m inst_1)) β) f))
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α β x
    (@function.comp.{u+1 u+1 (max u v)+1} α β (@state_t.{u v} σ m inst_1 β)
      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_return.{u v} σ m inst_1)) β) f)),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (f : (∀ (a : α), β)) (x : @state_t.{u v} σ m inst_1 α),
@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α β x
    (@function.comp.{u+1 u+1 (max u v)+1} α β (@state_t.{u v} σ m inst_1 β)
      (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_return.{u v} σ m inst_1)) β) f)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_11,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α), β))
  (x : @state_t.{u v} σ m inst_1 α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α), β) β f
    (λ (x_0 : (∀ (a : α), β)),
    @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (λ (α_0 β_0 : Type u) (f_0 : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f_0))
        (λ (α_0 β_0 : Type u),
        @function.comp.{u+1 u+1 (max u v)+1} α_0 (∀ (a : β_0), α_0)
          (∀ (a : @state_t.{u v} σ m inst_1 β_0), @state_t.{u v} σ m inst_1 α_0)
          ((λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) β_0 α_0)
          (@function.const.{u+1 u+1} α_0 β_0))) α β x_0 x))
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α), β) β f
    (λ (x_0 : (∀ (a : α), β)),
    @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (λ (α_0 β_0 : Type u) (f_0 : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f_0))
        (λ (α_0 β_0 : Type u),
        @function.comp.{u+1 u+1 (max u v)+1} α_0 (∀ (a : β_0), α_0)
          (∀ (a : @state_t.{u v} σ m inst_1 β_0), @state_t.{u v} σ m inst_1 α_0)
          ((λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) β_0 α_0)
          (@function.const.{u+1 u+1} α_0 β_0))) α β x_0 x)),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α), β))
  (x : @state_t.{u v} σ m inst_1 α),
@rfl.{(max u v)+1} (@state_t.{u v} σ m inst_1 β)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) (∀ (a : α), β) β f
    (λ (x_0 : (∀ (a : α), β)),
    @has_map.map.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (λ (α_0 β_0 : Type u) (f_0 : (∀ (a : α_0), β_0))
          (x_1 : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
            (@state_t.{u v} σ m inst_1 β_0)
            (@state_t_return.{u v} σ m inst_1 β_0) f_0))
        (λ (α_0 β_0 : Type u),
        @function.comp.{u+1 u+1 (max u v)+1} α_0 (∀ (a : β_0), α_0)
          (∀ (a : @state_t.{u v} σ m inst_1 β_0), @state_t.{u v} σ m inst_1 α_0)
          ((λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) β_0 α_0)
          (@function.const.{u+1 u+1} α_0 β_0))) α β x_0 x)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_12,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (x : α) (f : (∀ (a : α), @state_t.{u v} σ m inst_1 β)),
@eq.{max (u+1) (v+1)} (∀ (x_0 : σ), (λ (x_1 : σ), m (@prod.{u u} β σ)) x_0)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α β
    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (@state_t_return.{u v} σ m inst_1)) α x) f) (f x),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β : Type u) (x : α) (f : (∀ (a : α), @state_t.{u v} σ m inst_1 β)),
@funext.{u+1 v+1} σ (λ (x_0 : σ), m (@prod.{u u} β σ))
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α β
    (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (@state_t_return.{u v} σ m inst_1)) α x) f) (f x)
  (λ (x_1 : σ),
  @eq.mpr.{0}
    (@eq.{v+1} (m (@prod.{u u} β σ))
      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_bind.{u v} σ m inst_1)) α β
        (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_return.{u v} σ m inst_1)) α x) f x_1) (f x x_1)) @true
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{v+1} (m (@prod.{u u} β σ))
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α β
            (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_return.{u v} σ m inst_1)) α x) f x_1) (f x x_1))
        @true)
      (@eq.trans.{1} Prop
        (@eq.{v+1} (m (@prod.{u u} β σ))
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α β
            (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_return.{u v} σ m inst_1)) α x) f x_1) (f x x_1))
        (@eq.{v+1} (m (@prod.{u u} β σ)) (f x x_1) (f x x_1)) @true
        ((λ (a a_0 : m (@prod.{u u} β σ))
            (e_1 : @eq.{v+1} (m (@prod.{u u} β σ)) a a_0)
            (a_1 a_2 : m (@prod.{u u} β σ))
            (e_2 : @eq.{v+1} (m (@prod.{u u} β σ)) a_1 a_2),
          @congr.{v+1 1} (m (@prod.{u u} β σ)) Prop
            (@eq.{v+1} (m (@prod.{u u} β σ)) a)
            (@eq.{v+1} (m (@prod.{u u} β σ)) a_0) a_1 a_2
            (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} β σ))
              (∀ (a_3 : m (@prod.{u u} β σ)), Prop) a a_0
              (@eq.{v+1} (m (@prod.{u u} β σ))) e_1) e_2)
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α β
            (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_return.{u v} σ m inst_1)) α x) f x_1) (f x x_1)
          (@eq.trans.{v+1} (m (@prod.{u u} β σ))
            (@state_t_bind.{u v} σ m inst_1 α β
              (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_return.{u v} σ m inst_1)) α x) f x_1)
            ((λ (s : σ),
              (λ (this : m (@prod.{u u} β σ)), this)
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@prod.{u u} α σ) (@prod.{u u} β σ)
                  ((λ (s_0 : σ),
                    @return.{u v} m inst_1 (@prod.{u u} α σ)
                      (@prod.mk.{u u} α σ x s_0)) s)
                  (λ (p : @prod.{u u} α σ),
                  @state_t_bind._match_1.{u v} σ m inst_1 α β f p))) x_1)
            (f x x_1)
            (@eq.trans.{v+1} (m (@prod.{u u} β σ))
              (@state_t_bind.{u v} σ m inst_1 α β
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α x) f x_1)
              (@state_t_bind.{u v} σ m inst_1 α β
                (λ (s : σ),
                @return.{u v} m inst_1 (@prod.{u u} α σ)
                  (@prod.mk.{u u} α σ x s)) f x_1)
              ((λ (s : σ),
                (λ (this : m (@prod.{u u} β σ)), this)
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α σ) (@prod.{u u} β σ)
                    ((λ (s_0 : σ),
                      @return.{u v} m inst_1 (@prod.{u u} α σ)
                        (@prod.mk.{u u} α σ x s_0)) s)
                    (λ (p : @prod.{u u} α σ),
                    @state_t_bind._match_1.{u v} σ m inst_1 α β f p))) x_1)
              ((λ (act act_0 : @state_t.{u v} σ m inst_1 α)
                  (e_1 :
                    @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α) act act_0)
                  (act_1 act_2 : (∀ (a_1 : α), @state_t.{u v} σ m inst_1 β))
                  (e_2 :
                    @eq.{max (u+1) ((max u v)+1)}
                      (∀ (a_1 : α), @state_t.{u v} σ m inst_1 β) act_1 act_2)
                  (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
                @congr.{u+1 v+1} σ (m (@prod.{u u} β σ))
                  (@state_t_bind.{u v} σ m inst_1 α β act act_1)
                  (@state_t_bind.{u v} σ m inst_1 α β act_0 act_2) a a_0
                  (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                    (∀ (a_1 : α), @state_t.{u v} σ m inst_1 β)
                    (@state_t.{u v} σ m inst_1 β)
                    (@state_t_bind.{u v} σ m inst_1 α β act)
                    (@state_t_bind.{u v} σ m inst_1 α β act_0) act_1 act_2
                    (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                      (@state_t.{u v} σ m inst_1 α)
                      (∀ (act_3 : (∀ (a_1 : α), @state_t.{u v} σ m inst_1 β)),
                      @state_t.{u v} σ m inst_1 β) act act_0
                      (@state_t_bind.{u v} σ m inst_1 α β) e_1) e_2) e_3)
                (@has_pure.pure.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                    (@state_t_return.{u v} σ m inst_1)) α x)
                (λ (s : σ),
                @return.{u v} m inst_1 (@prod.{u u} α σ)
                  (@prod.mk.{u u} α σ x s))
                (@state_t_return.equations._eqn_1.{u v} σ m inst_1 α x) f f
                (@eq.refl.{max (u+1) ((max u v)+1)}
                  (∀ (a : α), @state_t.{u v} σ m inst_1 β) f) x_1 x_1
                (@eq.refl.{u+1} σ x_1))
              (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} β σ))
                (@state_t_bind.{u v} σ m inst_1 α β
                  (λ (s : σ),
                  @return.{u v} m inst_1 (@prod.{u u} α σ)
                    (@prod.mk.{u u} α σ x s)) f)
                (λ (s : σ),
                (λ (this : m (@prod.{u u} β σ)), this)
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α σ) (@prod.{u u} β σ)
                    ((λ (s_0 : σ),
                      @return.{u v} m inst_1 (@prod.{u u} α σ)
                        (@prod.mk.{u u} α σ x s_0)) s)
                    (λ (p : @prod.{u u} α σ),
                    @state_t_bind._match_1.{u v} σ m inst_1 α β f p)))
                (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α β
                  (λ (s : σ),
                  @return.{u v} m inst_1 (@prod.{u u} α σ)
                    (@prod.mk.{u u} α σ x s)) f) x_1))
            (@eq.trans.{v+1} (m (@prod.{u u} β σ))
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} β σ)
                (@has_pure.pure.{u v} m
                  (@applicative.to_has_pure.{u v} m
                    (@monad.to_applicative.{u v} m inst_1)) (@prod.{u u} α σ)
                  (@prod.mk.{u u} α σ x x_1))
                (@state_t_bind._match_1.{u v} σ m inst_1 α β f))
              (@state_t_bind._match_1.{u v} σ m inst_1 α β f
                (@prod.mk.{u u} α σ x x_1)) (f x x_1)
              (@monad.pure_bind.{u v} m inst_1 (@prod.{u u} α σ)
                (@prod.{u u} β σ) (@prod.mk.{u u} α σ x x_1)
                (@state_t_bind._match_1.{u v} σ m inst_1 α β f))
              (@state_t_bind._match_1.equations._eqn_1.{v u} σ m inst_1 α β f x
                x_1))) (f x x_1) (f x x_1)
          (@eq.refl.{v+1} (m (@prod.{u u} β σ)) (f x x_1)))
        (@propext (@eq.{v+1} (m (@prod.{u u} β σ)) (f x x_1) (f x x_1)) @true
          (@eq_self_iff_true.{v+1} (m (@prod.{u u} β σ)) (f x x_1))))) @trivial),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad._proof_13,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β γ : Type u) (x : @state_t.{u v} σ m inst_1 α)
  (f : (∀ (a : α), @state_t.{u v} σ m inst_1 β))
  (g : (∀ (a : β), @state_t.{u v} σ m inst_1 γ)),
@eq.{max (u+1) (v+1)} (∀ (x_0 : σ), (λ (x_1 : σ), m (@prod.{u u} γ σ)) x_0)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) β γ
    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (@state_t_bind.{u v} σ m inst_1)) α β x f) g)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α γ x
    (λ (x_0 : α),
    @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g)),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m]
  (α β γ : Type u) (x : @state_t.{u v} σ m inst_1 α)
  (f : (∀ (a : α), @state_t.{u v} σ m inst_1 β))
  (g : (∀ (a : β), @state_t.{u v} σ m inst_1 γ)),
@funext.{u+1 v+1} σ (λ (x_0 : σ), m (@prod.{u u} γ σ))
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) β γ
    (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (@state_t_bind.{u v} σ m inst_1)) α β x f) g)
  (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
    (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_bind.{u v} σ m inst_1)) α γ x
    (λ (x_0 : α),
    @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g))
  (λ (x_1 : σ),
  @eq.mpr.{0}
    (@eq.{v+1} (m (@prod.{u u} γ σ))
      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_bind.{u v} σ m inst_1)) β γ
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) α β x f) g x_1)
      (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
        (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
          (@state_t_bind.{u v} σ m inst_1)) α γ x
        (λ (x_0 : α),
        @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g) x_1))
    (@eq.{v+1} (m (@prod.{u u} γ σ))
      (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
        (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
        (λ (x_0 : @prod.{u u} α σ),
        @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} β σ) (@prod.{u u} γ σ)
          (@state_t_bind._match_1.{u v} σ m inst_1 α β f x_0)
          (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
      (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
        (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
        (@state_t_bind._match_1.{u v} σ m inst_1 α γ
          (λ (x_0 : α) (s : σ),
          @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
            (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))))
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{v+1} (m (@prod.{u u} γ σ))
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) β γ
            (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) α β x f) g x_1)
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α γ x
            (λ (x_0 : α),
            @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g) x_1))
        (@eq.{v+1} (m (@prod.{u u} γ σ))
          (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
            (λ (x_0 : @prod.{u u} α σ),
            @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ)
              (@state_t_bind._match_1.{u v} σ m inst_1 α β f x_0)
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
          (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
            (@state_t_bind._match_1.{u v} σ m inst_1 α γ
              (λ (x_0 : α) (s : σ),
              @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
                (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))))))
      ((λ (a a_0 : m (@prod.{u u} γ σ))
          (e_1 : @eq.{v+1} (m (@prod.{u u} γ σ)) a a_0)
          (a_1 a_2 : m (@prod.{u u} γ σ))
          (e_2 : @eq.{v+1} (m (@prod.{u u} γ σ)) a_1 a_2),
        @congr.{v+1 1} (m (@prod.{u u} γ σ)) Prop
          (@eq.{v+1} (m (@prod.{u u} γ σ)) a)
          (@eq.{v+1} (m (@prod.{u u} γ σ)) a_0) a_1 a_2
          (@congr_arg.{v+1 max (v+1) 1} (m (@prod.{u u} γ σ))
            (∀ (a_3 : m (@prod.{u u} γ σ)), Prop) a a_0
            (@eq.{v+1} (m (@prod.{u u} γ σ))) e_1) e_2)
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) β γ
          (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) α β x f) g x_1)
        (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
          (λ (x_0 : @prod.{u u} α σ),
          @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} β σ) (@prod.{u u} γ σ)
            (@state_t_bind._match_1.{u v} σ m inst_1 α β f x_0)
            (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
        (@eq.trans.{v+1} (m (@prod.{u u} γ σ))
          (@state_t_bind.{u v} σ m inst_1 β γ
            (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) α β x f) g x_1)
          ((λ (s : σ),
            (λ (this : m (@prod.{u u} γ σ)), this)
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} β σ) (@prod.{u u} γ σ)
                ((λ (s_0 : σ),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} α σ) (@prod.{u u} β σ) (x s_0)
                    (@state_t_bind._match_1.{u v} σ m inst_1 α β f)) s)
                (λ (p : @prod.{u u} β σ),
                @state_t_bind._match_1.{u v} σ m inst_1 β γ g p))) x_1)
          (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
            (λ (x_0 : @prod.{u u} α σ),
            @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ)
              (@state_t_bind._match_1.{u v} σ m inst_1 α β f x_0)
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
          (@eq.trans.{v+1} (m (@prod.{u u} γ σ))
            (@state_t_bind.{u v} σ m inst_1 β γ
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α β x f) g x_1)
            (@state_t_bind.{u v} σ m inst_1 β γ
              (λ (s : σ),
              @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} β σ) (x s)
                (@state_t_bind._match_1.{u v} σ m inst_1 α β f)) g x_1)
            ((λ (s : σ),
              (λ (this : m (@prod.{u u} γ σ)), this)
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@prod.{u u} β σ) (@prod.{u u} γ σ)
                  ((λ (s_0 : σ),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α σ) (@prod.{u u} β σ) (x s_0)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α β f)) s)
                  (λ (p : @prod.{u u} β σ),
                  @state_t_bind._match_1.{u v} σ m inst_1 β γ g p))) x_1)
            ((λ (act act_0 : @state_t.{u v} σ m inst_1 β)
                (e_1 :
                  @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 β) act act_0)
                (act_1 act_2 : (∀ (a_1 : β), @state_t.{u v} σ m inst_1 γ))
                (e_2 :
                  @eq.{max (u+1) ((max u v)+1)}
                    (∀ (a_1 : β), @state_t.{u v} σ m inst_1 γ) act_1 act_2)
                (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
              @congr.{u+1 v+1} σ (m (@prod.{u u} γ σ))
                (@state_t_bind.{u v} σ m inst_1 β γ act act_1)
                (@state_t_bind.{u v} σ m inst_1 β γ act_0 act_2) a a_0
                (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                  (∀ (a_1 : β), @state_t.{u v} σ m inst_1 γ)
                  (@state_t.{u v} σ m inst_1 γ)
                  (@state_t_bind.{u v} σ m inst_1 β γ act)
                  (@state_t_bind.{u v} σ m inst_1 β γ act_0) act_1 act_2
                  (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                    (@state_t.{u v} σ m inst_1 β)
                    (∀ (act_3 : (∀ (a_1 : β), @state_t.{u v} σ m inst_1 γ)),
                    @state_t.{u v} σ m inst_1 γ) act act_0
                    (@state_t_bind.{u v} σ m inst_1 β γ) e_1) e_2) e_3)
              (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
                (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                  (@state_t_bind.{u v} σ m inst_1)) α β x f)
              (λ (s : σ),
              @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} β σ) (x s)
                (@state_t_bind._match_1.{u v} σ m inst_1 α β f))
              (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α β x f) g g
              (@eq.refl.{max (u+1) ((max u v)+1)}
                (∀ (a : β), @state_t.{u v} σ m inst_1 γ) g) x_1 x_1
              (@eq.refl.{u+1} σ x_1))
            (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} γ σ))
              (@state_t_bind.{u v} σ m inst_1 β γ
                (λ (s : σ),
                @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@prod.{u u} α σ) (@prod.{u u} β σ) (x s)
                  (@state_t_bind._match_1.{u v} σ m inst_1 α β f)) g)
              (λ (s : σ),
              (λ (this : m (@prod.{u u} γ σ)), this)
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@prod.{u u} β σ) (@prod.{u u} γ σ)
                  ((λ (s_0 : σ),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@prod.{u u} α σ) (@prod.{u u} β σ) (x s_0)
                      (@state_t_bind._match_1.{u v} σ m inst_1 α β f)) s)
                  (λ (p : @prod.{u u} β σ),
                  @state_t_bind._match_1.{u v} σ m inst_1 β γ g p)))
              (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 β γ
                (λ (s : σ),
                @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@prod.{u u} α σ) (@prod.{u u} β σ) (x s)
                  (@state_t_bind._match_1.{u v} σ m inst_1 α β f)) g) x_1))
          (@monad.bind_assoc.{u v} m inst_1 (@prod.{u u} α σ) (@prod.{u u} β σ)
            (@prod.{u u} γ σ) (x x_1)
            (@state_t_bind._match_1.{u v} σ m inst_1 α β f)
            (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
        (@has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
          (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
            (@state_t_bind.{u v} σ m inst_1)) α γ x
          (λ (x_0 : α),
          @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
            (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
              (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g) x_1)
        (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1)
          (@state_t_bind._match_1.{u v} σ m inst_1 α γ
            (λ (x_0 : α) (s : σ),
            @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))))
        (@eq.trans.{v+1} (m (@prod.{u u} γ σ))
          (@state_t_bind.{u v} σ m inst_1 α γ x
            (λ (x_0 : α),
            @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g) x_1)
          (@state_t_bind.{u v} σ m inst_1 α γ x
            (λ (x_0 : α) (s : σ),
            @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)) x_1)
          ((λ (s : σ),
            (λ (this : m (@prod.{u u} γ σ)), this)
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} γ σ) (x s)
                (λ (p : @prod.{u u} α σ),
                @state_t_bind._match_1.{u v} σ m inst_1 α γ
                  (λ (x_0 : α) (s_0 : σ),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s_0)
                    (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)) p))) x_1)
          ((λ (act act_0 : @state_t.{u v} σ m inst_1 α)
              (e_1 : @eq.{(max u v)+1} (@state_t.{u v} σ m inst_1 α) act act_0)
              (act_1 act_2 : (∀ (a_1 : α), @state_t.{u v} σ m inst_1 γ))
              (e_2 :
                @eq.{max (u+1) ((max u v)+1)}
                  (∀ (a_1 : α), @state_t.{u v} σ m inst_1 γ) act_1 act_2)
              (a a_0 : σ) (e_3 : @eq.{u+1} σ a a_0),
            @congr.{u+1 v+1} σ (m (@prod.{u u} γ σ))
              (@state_t_bind.{u v} σ m inst_1 α γ act act_1)
              (@state_t_bind.{u v} σ m inst_1 α γ act_0 act_2) a a_0
              (@congr.{max (u+1) ((max u v)+1) (max u v)+1}
                (∀ (a_1 : α), @state_t.{u v} σ m inst_1 γ)
                (@state_t.{u v} σ m inst_1 γ)
                (@state_t_bind.{u v} σ m inst_1 α γ act)
                (@state_t_bind.{u v} σ m inst_1 α γ act_0) act_1 act_2
                (@congr_arg.{(max u v)+1 max (u+1) ((max u v)+1)}
                  (@state_t.{u v} σ m inst_1 α)
                  (∀ (act_3 : (∀ (a_1 : α), @state_t.{u v} σ m inst_1 γ)),
                  @state_t.{u v} σ m inst_1 γ) act act_0
                  (@state_t_bind.{u v} σ m inst_1 α γ) e_1) e_2) e_3) x x
            (@eq.refl.{(max u v)+1} (@state_t.{u v} σ m inst_1 α) x)
            (λ (x_0 : α),
            @has_bind.bind.{u max u v} (@state_t.{u v} σ m inst_1)
              (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
                (@state_t_bind.{u v} σ m inst_1)) β γ (f x_0) g)
            (λ (x_0 : α) (s : σ),
            @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))
            (@funext.{u+1 (max u v)+1} α
              (λ (x_0 : α), @state_t.{u v} σ m inst_1 γ)
              (λ (x_0 : α), @state_t_bind.{u v} σ m inst_1 β γ (f x_0) g)
              (λ (x_0 : α) (s : σ),
              (λ (this : m (@prod.{u u} γ σ)), this)
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
                  (λ (p : @prod.{u u} β σ),
                  @state_t_bind._match_1.{u v} σ m inst_1 β γ g p)))
              (λ (x_0 : α),
              @state_t_bind.equations._eqn_1.{u v} σ m inst_1 β γ (f x_0) g))
            x_1 x_1 (@eq.refl.{u+1} σ x_1))
          (@congr_fun.{u+1 v+1} σ (λ (a : σ), m (@prod.{u u} γ σ))
            (@state_t_bind.{u v} σ m inst_1 α γ x
              (λ (x_0 : α) (s : σ),
              @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
                (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
            (λ (s : σ),
            (λ (this : m (@prod.{u u} γ σ)), this)
              (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} α σ) (@prod.{u u} γ σ) (x s)
                (λ (p : @prod.{u u} α σ),
                @state_t_bind._match_1.{u v} σ m inst_1 α γ
                  (λ (x_0 : α) (s_0 : σ),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s_0)
                    (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)) p)))
            (@state_t_bind.equations._eqn_1.{u v} σ m inst_1 α γ x
              (λ (x_0 : α) (s : σ),
              @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
                (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))) x_1))))
    (@congr_arg.{max (u+1) (v+1) v+1}
      (∀ (x_0 : @prod.{u u} α σ), m (@prod.{u u} γ σ)) (m (@prod.{u u} γ σ))
      (λ (x_0 : @prod.{u u} α σ),
      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
        (@prod.{u u} β σ) (@prod.{u u} γ σ)
        (@state_t_bind._match_1.{u v} σ m inst_1 α β f x_0)
        (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))
      (@state_t_bind._match_1.{u v} σ m inst_1 α γ
        (λ (x_0 : α) (s : σ),
        @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
          (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
      (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
        (@prod.{u u} α σ) (@prod.{u u} γ σ) (x x_1))
      (@funext.{u+1 v+1} (@prod.{u u} α σ)
        (λ (x_0 : @prod.{u u} α σ), m (@prod.{u u} γ σ))
        (λ (x_0 : @prod.{u u} α σ),
        @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
          (@prod.{u u} β σ) (@prod.{u u} γ σ)
          (@state_t_bind._match_1.{u v} σ m inst_1 α β f x_0)
          (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))
        (@state_t_bind._match_1.{u v} σ m inst_1 α γ
          (λ (x_0 : α) (s : σ),
          @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
            (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
            (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)))
        (λ (r : @prod.{u u} α σ),
        @prod.cases_on.{0 u u} α σ
          (λ (r_0 : @prod.{u u} α σ),
          @eq.{v+1} (m (@prod.{u u} γ σ))
            (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ)
              (@state_t_bind._match_1.{u v} σ m inst_1 α β f r_0)
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))
            (@state_t_bind._match_1.{u v} σ m inst_1 α γ
              (λ (x_0 : α) (s : σ),
              @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                (@prod.{u u} β σ) (@prod.{u u} γ σ) (f x_0 s)
                (@state_t_bind._match_1.{u v} σ m inst_1 β γ g)) r_0)) r
          (λ (fst : α) (snd : σ),
          @eq.refl.{v+1} (m (@prod.{u u} γ σ))
            (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
              (@prod.{u u} β σ) (@prod.{u u} γ σ)
              (@state_t_bind._match_1.{u v} σ m inst_1 α β f
                (@prod.mk.{u u} α σ fst snd))
              (@state_t_bind._match_1.{u v} σ m inst_1 β γ g))))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.monad,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m],
@monad.{u max u v} (@state_t.{u v} σ m inst_1),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_1 : @monad.{u v} m],
@monad.mk.{u max u v} (@state_t.{u v} σ m inst_1)
  (@applicative.mk.{u max u v} (@state_t.{u v} σ m inst_1)
    (@functor.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@has_map.mk.{u max u v} (@state_t.{u v} σ m inst_1)
        (λ (α β : Type u) (f : (∀ (a : α), β))
          (x : @state_t.{u v} σ m inst_1 α),
        @state_t_bind.{u v} σ m inst_1 α β x
          (@function.comp.{u+1 u+1 (max u v)+1} α β
            (@state_t.{u v} σ m inst_1 β) (@state_t_return.{u v} σ m inst_1 β)
            f))
        (λ (α β : Type u),
        @function.comp.{u+1 u+1 (max u v)+1} α (∀ (a : β), α)
          (∀ (a : @state_t.{u v} σ m inst_1 β), @state_t.{u v} σ m inst_1 α)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x : @state_t.{u v} σ m inst_1 α_0),
            @state_t_bind.{u v} σ m inst_1 α_0 β_0 x
              (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
                (@state_t.{u v} σ m inst_1 β_0)
                (@state_t_return.{u v} σ m inst_1 β_0) f)) β α)
          (@function.const.{u+1 u+1} α β)))
      (@state_t.monad._proof_1.{u v} σ m inst_1)
      (@state_t.monad._proof_2.{u v} σ m inst_1)
      (@state_t.monad._proof_3.{u v} σ m inst_1))
    (@has_pure.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (@state_t_return.{u v} σ m inst_1))
    (@has_seq.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α β : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a : α), β))
        (x : @state_t.{u v} σ m inst_1 α),
      @state_t_bind.{u v} σ m inst_1 (∀ (a : α), β) β f
        (λ (x_0 : (∀ (a : α), β)),
        (λ (α_0 β_0 : Type u) (f_0 : (∀ (a : α_0), β_0))
            (x_1 : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f_0)) α β x_0 x)))
    (@has_seq_left.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α β : Type u) (a : @state_t.{u v} σ m inst_1 α)
        (b : @state_t.{u v} σ m inst_1 β),
      (λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_0 : α_0), β_0))
          (x : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_0 : α_0), β_0) β_0 f
          (λ (x_0 : (∀ (a_0 : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a_0 : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_0 x)) β α
        ((λ (α_0 β_0 : Type u) (f : (∀ (a_0 : α_0), β_0))
            (x : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α (∀ (a_0 : β), α)
          (@function.const.{u+1 u+1} α β) a) b))
    (@has_seq_right.mk.{u max u v} (@state_t.{u v} σ m inst_1)
      (λ (α β : Type u) (a : @state_t.{u v} σ m inst_1 α)
        (b : @state_t.{u v} σ m inst_1 β),
      (λ (α_0 β_0 : Type u) (f : @state_t.{u v} σ m inst_1 (∀ (a_0 : α_0), β_0))
          (x : @state_t.{u v} σ m inst_1 α_0),
        @state_t_bind.{u v} σ m inst_1 (∀ (a_0 : α_0), β_0) β_0 f
          (λ (x_0 : (∀ (a_0 : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a_0 : α_1), β_1))
              (x_1 : @state_t.{u v} σ m inst_1 α_1),
            @state_t_bind.{u v} σ m inst_1 α_1 β_1 x_1
              (@function.comp.{u+1 u+1 (max u v)+1} α_1 β_1
                (@state_t.{u v} σ m inst_1 β_1)
                (@state_t_return.{u v} σ m inst_1 β_1) f_0)) α_0 β_0 x_0 x)) β β
        ((λ (α_0 β_0 : Type u) (f : (∀ (a_0 : α_0), β_0))
            (x : @state_t.{u v} σ m inst_1 α_0),
          @state_t_bind.{u v} σ m inst_1 α_0 β_0 x
            (@function.comp.{u+1 u+1 (max u v)+1} α_0 β_0
              (@state_t.{u v} σ m inst_1 β_0)
              (@state_t_return.{u v} σ m inst_1 β_0) f)) α (∀ (a_0 : β), β)
          (@function.const.{u+1 u+1} (∀ (a_0 : β), β) α (@id.{u+1} β)) a) b))
    (@state_t.monad._proof_4.{u v} σ m inst_1)
    (@state_t.monad._proof_5.{u v} σ m inst_1)
    (@state_t.monad._proof_6.{u v} σ m inst_1)
    (@state_t.monad._proof_7.{u v} σ m inst_1)
    (@state_t.monad._proof_8.{u v} σ m inst_1)
    (@state_t.monad._proof_9.{u v} σ m inst_1))
  (@has_bind.mk.{u max u v} (@state_t.{u v} σ m inst_1)
    (@state_t_bind.{u v} σ m inst_1))
  (@state_t.monad._proof_10.{u v} σ m inst_1)
  (@state_t.monad._proof_11.{u v} σ m inst_1)
  (@state_t.monad._proof_12.{u v} σ m inst_1)
  (@state_t.monad._proof_13.{u v} σ m inst_1),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(state_t.state_t_monad_lift,Vector(Param(u_1), Param(u_2)),∀ (S : Type u_1) (m : (∀ (a : Type u_1), Type u_2))
  [inst_1 : @monad.{u_1 u_2} m] (α : Type u_1) (f : m α),
@state_t.{u_1 u_2} S m inst_1 α,λ (S : Type u_1) (m : (∀ (a : Type u_1), Type u_2))
  [inst_1 : @monad.{u_1 u_2} m] (α : Type u_1) (f : m α) (state : S),
@has_bind.bind.{u_1 u_2} m (@monad.to_has_bind.{u_1 u_2} m inst_1) α
  (@prod.{u_1 u_1} α S) f
  (λ (res : α),
  @return.{u_1 u_2} m inst_1 (@prod.{u_1 u_1} α S)
    (@prod.mk.{u_1 u_1} α S res state)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u_1 u_2}"

mod: "DefMod(Definition(state_t.monad.monad_transformer,Vector(),∀ (S : Type 0), @monad.monad_transformer.{0} (@state_t.{0 0} S),λ (S : Type 0),
@monad.monad_transformer.mk.{0} (@state_t.{0 0} S) (@state_t.monad.{0 0} S)
  (@state_t.state_t_monad_lift.{0 0} S),0))"
err: "provingground.interface.UnParsedException: could not parse expression @state_t.state_t_monad_lift.{0 0}"

mod: "DefMod(Definition(tactic.simp_config.no_confusion_type,Vector(Param(l)),∀ (P : Sort l) (v1 v2 : @tactic.simp_config), Sort l,λ (P : Sort l) (v1 v2 : @tactic.simp_config),
@tactic.simp_config.cases_on.{l+1} (λ (v1_0 : @tactic.simp_config), Sort l) v1
  (λ (max_steps : @nat)
    (contextual lift_eq canonize_instances canonize_proofs use_axioms zeta beta
      eta proj iota single_pass fail_if_unchanged memoize :
      @bool),
  @tactic.simp_config.cases_on.{l+1} (λ (v1_0 : @tactic.simp_config), Sort l) v2
    (λ (max_steps_0 : @nat)
      (contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0
        use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0
        fail_if_unchanged_0 memoize_0 :
        @bool),
    ∀ (a :
        (∀ (max_steps_eq : @eq.{1} @nat max_steps max_steps_0)
          (contextual_eq : @eq.{1} @bool contextual contextual_0)
          (lift_eq_eq : @eq.{1} @bool lift_eq lift_eq_0)
          (canonize_instances_eq :
            @eq.{1} @bool canonize_instances canonize_instances_0)
          (canonize_proofs_eq : @eq.{1} @bool canonize_proofs canonize_proofs_0)
          (use_axioms_eq : @eq.{1} @bool use_axioms use_axioms_0)
          (zeta_eq : @eq.{1} @bool zeta zeta_0)
          (beta_eq : @eq.{1} @bool beta beta_0)
          (eta_eq : @eq.{1} @bool eta eta_0)
          (proj_eq : @eq.{1} @bool proj proj_0)
          (iota_eq : @eq.{1} @bool iota iota_0)
          (single_pass_eq : @eq.{1} @bool single_pass single_pass_0)
          (fail_if_unchanged_eq :
            @eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
          (memoize_eq : @eq.{1} @bool memoize memoize_0),
        P)),
    P)),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(tactic.simp_config.no_confusion,Vector(Param(l)),∀ {P : Sort l} {v1 v2 : @tactic.simp_config}
  (H12 : @eq.{1} @tactic.simp_config v1 v2),
@tactic.simp_config.no_confusion_type.{l} P v1 v2,λ {P : Sort l} {v1 v2 : @tactic.simp_config}
  (H12 : @eq.{1} @tactic.simp_config v1 v2),
@eq.rec.{l 1} @tactic.simp_config v1
  (λ (a : @tactic.simp_config),
  ∀ (H1a : @eq.{1} @tactic.simp_config v1 a),
  @tactic.simp_config.no_confusion_type.{l} P v1 a)
  (λ (H11 : @eq.{1} @tactic.simp_config v1 v1),
  @tactic.simp_config.cases_on.{l}
    (λ {v1_0 : @tactic.simp_config},
    @tactic.simp_config.no_confusion_type.{l} P v1_0 v1_0) v1
    (λ (max_steps : @nat)
      (contextual lift_eq canonize_instances canonize_proofs use_axioms zeta
        beta eta proj iota single_pass fail_if_unchanged memoize :
        @bool)
      (a :
        (∀ (max_steps_eq : @eq.{1} @nat max_steps max_steps)
          (contextual_eq : @eq.{1} @bool contextual contextual)
          (lift_eq_eq : @eq.{1} @bool lift_eq lift_eq)
          (canonize_instances_eq :
            @eq.{1} @bool canonize_instances canonize_instances)
          (canonize_proofs_eq : @eq.{1} @bool canonize_proofs canonize_proofs)
          (use_axioms_eq : @eq.{1} @bool use_axioms use_axioms)
          (zeta_eq : @eq.{1} @bool zeta zeta)
          (beta_eq : @eq.{1} @bool beta beta) (eta_eq : @eq.{1} @bool eta eta)
          (proj_eq : @eq.{1} @bool proj proj)
          (iota_eq : @eq.{1} @bool iota iota)
          (single_pass_eq : @eq.{1} @bool single_pass single_pass)
          (fail_if_unchanged_eq :
            @eq.{1} @bool fail_if_unchanged fail_if_unchanged)
          (memoize_eq : @eq.{1} @bool memoize memoize),
        P)),
    a (@eq.refl.{1} @nat max_steps) (@eq.refl.{1} @bool contextual)
      (@eq.refl.{1} @bool lift_eq) (@eq.refl.{1} @bool canonize_instances)
      (@eq.refl.{1} @bool canonize_proofs) (@eq.refl.{1} @bool use_axioms)
      (@eq.refl.{1} @bool zeta) (@eq.refl.{1} @bool beta)
      (@eq.refl.{1} @bool eta) (@eq.refl.{1} @bool proj)
      (@eq.refl.{1} @bool iota) (@eq.refl.{1} @bool single_pass)
      (@eq.refl.{1} @bool fail_if_unchanged) (@eq.refl.{1} @bool memoize))) v2
  H12 H12,0))"
err: "provingground.interface.UnParsedException: could not parse expression @tactic.simp_config.no_confusion_type.{l}"

mod: "DefMod(Definition(tactic.simp_config.mk.inj,Vector(),∀ {max_steps : @nat}
  {contextual lift_eq canonize_instances canonize_proofs use_axioms zeta beta
    eta proj iota single_pass fail_if_unchanged memoize :
    @bool} {max_steps_0 : @nat}
  {contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0 use_axioms_0
    zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0 fail_if_unchanged_0
    memoize_0 :
    @bool}
  (a :
    @eq.{1} @tactic.simp_config
      (@tactic.simp_config.mk max_steps contextual lift_eq canonize_instances
        canonize_proofs use_axioms zeta beta eta proj iota single_pass
        fail_if_unchanged memoize)
      (@tactic.simp_config.mk max_steps_0 contextual_0 lift_eq_0
        canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
        proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0)),
@and (@eq.{1} @nat max_steps max_steps_0)
  (@and (@eq.{1} @bool contextual contextual_0)
    (@and (@eq.{1} @bool lift_eq lift_eq_0)
      (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
          (@and (@eq.{1} @bool use_axioms use_axioms_0)
            (@and (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0))))))))))))),λ {max_steps : @nat}
  {contextual lift_eq canonize_instances canonize_proofs use_axioms zeta beta
    eta proj iota single_pass fail_if_unchanged memoize :
    @bool} {max_steps_0 : @nat}
  {contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0 use_axioms_0
    zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0 fail_if_unchanged_0
    memoize_0 :
    @bool}
  (a :
    @eq.{1} @tactic.simp_config
      (@tactic.simp_config.mk max_steps contextual lift_eq canonize_instances
        canonize_proofs use_axioms zeta beta eta proj iota single_pass
        fail_if_unchanged memoize)
      (@tactic.simp_config.mk max_steps_0 contextual_0 lift_eq_0
        canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
        proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0)),
@tactic.simp_config.no_confusion.{0}
  (@and (@eq.{1} @nat max_steps max_steps_0)
    (@and (@eq.{1} @bool contextual contextual_0)
      (@and (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))))))))
  (@tactic.simp_config.mk max_steps contextual lift_eq canonize_instances
    canonize_proofs use_axioms zeta beta eta proj iota single_pass
    fail_if_unchanged memoize)
  (@tactic.simp_config.mk max_steps_0 contextual_0 lift_eq_0
    canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
    proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0) a
  (λ (max_steps_eq : @eq.{1} @nat max_steps max_steps_0)
    (contextual_eq : @eq.{1} @bool contextual contextual_0)
    (lift_eq_eq : @eq.{1} @bool lift_eq lift_eq_0)
    (canonize_instances_eq :
      @eq.{1} @bool canonize_instances canonize_instances_0)
    (canonize_proofs_eq : @eq.{1} @bool canonize_proofs canonize_proofs_0)
    (use_axioms_eq : @eq.{1} @bool use_axioms use_axioms_0)
    (zeta_eq : @eq.{1} @bool zeta zeta_0) (beta_eq : @eq.{1} @bool beta beta_0)
    (eta_eq : @eq.{1} @bool eta eta_0) (proj_eq : @eq.{1} @bool proj proj_0)
    (iota_eq : @eq.{1} @bool iota iota_0)
    (single_pass_eq : @eq.{1} @bool single_pass single_pass_0)
    (fail_if_unchanged_eq : @eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
    (memoize_eq : @eq.{1} @bool memoize memoize_0),
  @and.intro (@eq.{1} @nat max_steps max_steps_0)
    (@and (@eq.{1} @bool contextual contextual_0)
      (@and (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))))))))
    max_steps_eq
    (@and.intro (@eq.{1} @bool contextual contextual_0)
      (@and (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))))))
      contextual_eq
      (@and.intro (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))))))
        lift_eq_eq
        (@and.intro (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))))
          canonize_instances_eq
          (@and.intro (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))))
            canonize_proofs_eq
            (@and.intro (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))
              use_axioms_eq
              (@and.intro (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))) zeta_eq
                (@and.intro (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))) beta_eq
                  (@and.intro (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))) eta_eq
                    (@and.intro (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))) proj_eq
                      (@and.intro (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))) iota_eq
                        (@and.intro (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)) single_pass_eq
                          (@and.intro
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)
                            fail_if_unchanged_eq memoize_eq))))))))))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @tactic.simp_config.no_confusion.{0}"

mod: "DefMod(Definition(tactic.simp_config.mk.inj_arrow,Vector(Param(l)),∀ {max_steps : @nat}
  {contextual lift_eq canonize_instances canonize_proofs use_axioms zeta beta
    eta proj iota single_pass fail_if_unchanged memoize :
    @bool} {max_steps_0 : @nat}
  {contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0 use_axioms_0
    zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0 fail_if_unchanged_0
    memoize_0 :
    @bool}
  (a :
    @eq.{1} @tactic.simp_config
      (@tactic.simp_config.mk max_steps contextual lift_eq canonize_instances
        canonize_proofs use_axioms zeta beta eta proj iota single_pass
        fail_if_unchanged memoize)
      (@tactic.simp_config.mk max_steps_0 contextual_0 lift_eq_0
        canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
        proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0))
  {{P : Sort l}}
  (a_0 :
    (∀ (a_1 : @eq.{1} @nat max_steps max_steps_0)
      (a_2 : @eq.{1} @bool contextual contextual_0)
      (a_3 : @eq.{1} @bool lift_eq lift_eq_0)
      (a_4 : @eq.{1} @bool canonize_instances canonize_instances_0)
      (a_5 : @eq.{1} @bool canonize_proofs canonize_proofs_0)
      (a_6 : @eq.{1} @bool use_axioms use_axioms_0)
      (a_7 : @eq.{1} @bool zeta zeta_0) (a_8 : @eq.{1} @bool beta beta_0)
      (a_9 : @eq.{1} @bool eta eta_0) (a_10 : @eq.{1} @bool proj proj_0)
      (a_11 : @eq.{1} @bool iota iota_0)
      (a_12 : @eq.{1} @bool single_pass single_pass_0)
      (a_13 : @eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
      (a_14 : @eq.{1} @bool memoize memoize_0),
    P)),
P,λ {max_steps : @nat}
  {contextual lift_eq canonize_instances canonize_proofs use_axioms zeta beta
    eta proj iota single_pass fail_if_unchanged memoize :
    @bool} {max_steps_0 : @nat}
  {contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0 use_axioms_0
    zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0 fail_if_unchanged_0
    memoize_0 :
    @bool}
  (a :
    @eq.{1} @tactic.simp_config
      (@tactic.simp_config.mk max_steps contextual lift_eq canonize_instances
        canonize_proofs use_axioms zeta beta eta proj iota single_pass
        fail_if_unchanged memoize)
      (@tactic.simp_config.mk max_steps_0 contextual_0 lift_eq_0
        canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
        proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0))
  {{P : Sort l}}
  (a_0 :
    (∀ (a_1 : @eq.{1} @nat max_steps max_steps_0)
      (a_2 : @eq.{1} @bool contextual contextual_0)
      (a_3 : @eq.{1} @bool lift_eq lift_eq_0)
      (a_4 : @eq.{1} @bool canonize_instances canonize_instances_0)
      (a_5 : @eq.{1} @bool canonize_proofs canonize_proofs_0)
      (a_6 : @eq.{1} @bool use_axioms use_axioms_0)
      (a_7 : @eq.{1} @bool zeta zeta_0) (a_8 : @eq.{1} @bool beta beta_0)
      (a_9 : @eq.{1} @bool eta eta_0) (a_10 : @eq.{1} @bool proj proj_0)
      (a_11 : @eq.{1} @bool iota iota_0)
      (a_12 : @eq.{1} @bool single_pass single_pass_0)
      (a_13 : @eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
      (a_14 : @eq.{1} @bool memoize memoize_0),
    P)),
a_0
  (@and.elim_left (@eq.{1} @nat max_steps max_steps_0)
    (@and (@eq.{1} @bool contextual contextual_0)
      (@and (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))))))))
    (@tactic.simp_config.mk.inj max_steps contextual lift_eq canonize_instances
      canonize_proofs use_axioms zeta beta eta proj iota single_pass
      fail_if_unchanged memoize max_steps_0 contextual_0 lift_eq_0
      canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
      proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0 a))
  (@and.elim_left (@eq.{1} @bool contextual contextual_0)
    (@and (@eq.{1} @bool lift_eq lift_eq_0)
      (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
          (@and (@eq.{1} @bool use_axioms use_axioms_0)
            (@and (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0))))))))))))
    (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
      (@and (@eq.{1} @bool contextual contextual_0)
        (@and (@eq.{1} @bool lift_eq lift_eq_0)
          (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
            (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                (@and (@eq.{1} @bool zeta zeta_0)
                  (@and (@eq.{1} @bool beta beta_0)
                    (@and (@eq.{1} @bool eta eta_0)
                      (@and (@eq.{1} @bool proj proj_0)
                        (@and (@eq.{1} @bool iota iota_0)
                          (@and (@eq.{1} @bool single_pass single_pass_0)
                            (@and
                              (@eq.{1} @bool fail_if_unchanged
                                fail_if_unchanged_0)
                              (@eq.{1} @bool memoize memoize_0)))))))))))))
      (@tactic.simp_config.mk.inj max_steps contextual lift_eq
        canonize_instances canonize_proofs use_axioms zeta beta eta proj iota
        single_pass fail_if_unchanged memoize max_steps_0 contextual_0 lift_eq_0
        canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
        proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0 a)))
  (@and.elim_left (@eq.{1} @bool lift_eq lift_eq_0)
    (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
        (@and (@eq.{1} @bool use_axioms use_axioms_0)
          (@and (@eq.{1} @bool zeta zeta_0)
            (@and (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0)))))))))))
    (@and.elim_right (@eq.{1} @bool contextual contextual_0)
      (@and (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))))))
      (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
        (@and (@eq.{1} @bool contextual contextual_0)
          (@and (@eq.{1} @bool lift_eq lift_eq_0)
            (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
              (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0)))))))))))))
        (@tactic.simp_config.mk.inj max_steps contextual lift_eq
          canonize_instances canonize_proofs use_axioms zeta beta eta proj iota
          single_pass fail_if_unchanged memoize max_steps_0 contextual_0
          lift_eq_0 canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0
          beta_0 eta_0 proj_0 iota_0 single_pass_0 fail_if_unchanged_0 memoize_0
          a))))
  (@and.elim_left (@eq.{1} @bool canonize_instances canonize_instances_0)
    (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
      (@and (@eq.{1} @bool use_axioms use_axioms_0)
        (@and (@eq.{1} @bool zeta zeta_0)
          (@and (@eq.{1} @bool beta beta_0)
            (@and (@eq.{1} @bool eta eta_0)
              (@and (@eq.{1} @bool proj proj_0)
                (@and (@eq.{1} @bool iota iota_0)
                  (@and (@eq.{1} @bool single_pass single_pass_0)
                    (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                      (@eq.{1} @bool memoize memoize_0))))))))))
    (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
      (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
          (@and (@eq.{1} @bool use_axioms use_axioms_0)
            (@and (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0)))))))))))
      (@and.elim_right (@eq.{1} @bool contextual contextual_0)
        (@and (@eq.{1} @bool lift_eq lift_eq_0)
          (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
            (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                (@and (@eq.{1} @bool zeta zeta_0)
                  (@and (@eq.{1} @bool beta beta_0)
                    (@and (@eq.{1} @bool eta eta_0)
                      (@and (@eq.{1} @bool proj proj_0)
                        (@and (@eq.{1} @bool iota iota_0)
                          (@and (@eq.{1} @bool single_pass single_pass_0)
                            (@and
                              (@eq.{1} @bool fail_if_unchanged
                                fail_if_unchanged_0)
                              (@eq.{1} @bool memoize memoize_0))))))))))))
        (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
          (@and (@eq.{1} @bool contextual contextual_0)
            (@and (@eq.{1} @bool lift_eq lift_eq_0)
              (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                  (@and (@eq.{1} @bool use_axioms use_axioms_0)
                    (@and (@eq.{1} @bool zeta zeta_0)
                      (@and (@eq.{1} @bool beta beta_0)
                        (@and (@eq.{1} @bool eta eta_0)
                          (@and (@eq.{1} @bool proj proj_0)
                            (@and (@eq.{1} @bool iota iota_0)
                              (@and (@eq.{1} @bool single_pass single_pass_0)
                                (@and
                                  (@eq.{1} @bool fail_if_unchanged
                                    fail_if_unchanged_0)
                                  (@eq.{1} @bool memoize memoize_0)))))))))))))
          (@tactic.simp_config.mk.inj max_steps contextual lift_eq
            canonize_instances canonize_proofs use_axioms zeta beta eta proj
            iota single_pass fail_if_unchanged memoize max_steps_0 contextual_0
            lift_eq_0 canonize_instances_0 canonize_proofs_0 use_axioms_0 zeta_0
            beta_0 eta_0 proj_0 iota_0 single_pass_0 fail_if_unchanged_0
            memoize_0 a)))))
  (@and.elim_left (@eq.{1} @bool canonize_proofs canonize_proofs_0)
    (@and (@eq.{1} @bool use_axioms use_axioms_0)
      (@and (@eq.{1} @bool zeta zeta_0)
        (@and (@eq.{1} @bool beta beta_0)
          (@and (@eq.{1} @bool eta eta_0)
            (@and (@eq.{1} @bool proj proj_0)
              (@and (@eq.{1} @bool iota iota_0)
                (@and (@eq.{1} @bool single_pass single_pass_0)
                  (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                    (@eq.{1} @bool memoize memoize_0)))))))))
    (@and.elim_right (@eq.{1} @bool canonize_instances canonize_instances_0)
      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
        (@and (@eq.{1} @bool use_axioms use_axioms_0)
          (@and (@eq.{1} @bool zeta zeta_0)
            (@and (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0))))))))))
      (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
        (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))))))
        (@and.elim_right (@eq.{1} @bool contextual contextual_0)
          (@and (@eq.{1} @bool lift_eq lift_eq_0)
            (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
              (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0))))))))))))
          (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
            (@and (@eq.{1} @bool contextual contextual_0)
              (@and (@eq.{1} @bool lift_eq lift_eq_0)
                (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                  (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                    (@and (@eq.{1} @bool use_axioms use_axioms_0)
                      (@and (@eq.{1} @bool zeta zeta_0)
                        (@and (@eq.{1} @bool beta beta_0)
                          (@and (@eq.{1} @bool eta eta_0)
                            (@and (@eq.{1} @bool proj proj_0)
                              (@and (@eq.{1} @bool iota iota_0)
                                (@and (@eq.{1} @bool single_pass single_pass_0)
                                  (@and
                                    (@eq.{1} @bool fail_if_unchanged
                                      fail_if_unchanged_0)
                                    (@eq.{1} @bool memoize
                                      memoize_0)))))))))))))
            (@tactic.simp_config.mk.inj max_steps contextual lift_eq
              canonize_instances canonize_proofs use_axioms zeta beta eta proj
              iota single_pass fail_if_unchanged memoize max_steps_0
              contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0
              use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0
              fail_if_unchanged_0 memoize_0 a))))))
  (@and.elim_left (@eq.{1} @bool use_axioms use_axioms_0)
    (@and (@eq.{1} @bool zeta zeta_0)
      (@and (@eq.{1} @bool beta beta_0)
        (@and (@eq.{1} @bool eta eta_0)
          (@and (@eq.{1} @bool proj proj_0)
            (@and (@eq.{1} @bool iota iota_0)
              (@and (@eq.{1} @bool single_pass single_pass_0)
                (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                  (@eq.{1} @bool memoize memoize_0))))))))
    (@and.elim_right (@eq.{1} @bool canonize_proofs canonize_proofs_0)
      (@and (@eq.{1} @bool use_axioms use_axioms_0)
        (@and (@eq.{1} @bool zeta zeta_0)
          (@and (@eq.{1} @bool beta beta_0)
            (@and (@eq.{1} @bool eta eta_0)
              (@and (@eq.{1} @bool proj proj_0)
                (@and (@eq.{1} @bool iota iota_0)
                  (@and (@eq.{1} @bool single_pass single_pass_0)
                    (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                      (@eq.{1} @bool memoize memoize_0)))))))))
      (@and.elim_right (@eq.{1} @bool canonize_instances canonize_instances_0)
        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
          (@and (@eq.{1} @bool use_axioms use_axioms_0)
            (@and (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0))))))))))
        (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
          (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
            (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                (@and (@eq.{1} @bool zeta zeta_0)
                  (@and (@eq.{1} @bool beta beta_0)
                    (@and (@eq.{1} @bool eta eta_0)
                      (@and (@eq.{1} @bool proj proj_0)
                        (@and (@eq.{1} @bool iota iota_0)
                          (@and (@eq.{1} @bool single_pass single_pass_0)
                            (@and
                              (@eq.{1} @bool fail_if_unchanged
                                fail_if_unchanged_0)
                              (@eq.{1} @bool memoize memoize_0)))))))))))
          (@and.elim_right (@eq.{1} @bool contextual contextual_0)
            (@and (@eq.{1} @bool lift_eq lift_eq_0)
              (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                  (@and (@eq.{1} @bool use_axioms use_axioms_0)
                    (@and (@eq.{1} @bool zeta zeta_0)
                      (@and (@eq.{1} @bool beta beta_0)
                        (@and (@eq.{1} @bool eta eta_0)
                          (@and (@eq.{1} @bool proj proj_0)
                            (@and (@eq.{1} @bool iota iota_0)
                              (@and (@eq.{1} @bool single_pass single_pass_0)
                                (@and
                                  (@eq.{1} @bool fail_if_unchanged
                                    fail_if_unchanged_0)
                                  (@eq.{1} @bool memoize memoize_0))))))))))))
            (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
              (@and (@eq.{1} @bool contextual contextual_0)
                (@and (@eq.{1} @bool lift_eq lift_eq_0)
                  (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                    (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                      (@and (@eq.{1} @bool use_axioms use_axioms_0)
                        (@and (@eq.{1} @bool zeta zeta_0)
                          (@and (@eq.{1} @bool beta beta_0)
                            (@and (@eq.{1} @bool eta eta_0)
                              (@and (@eq.{1} @bool proj proj_0)
                                (@and (@eq.{1} @bool iota iota_0)
                                  (@and
                                    (@eq.{1} @bool single_pass single_pass_0)
                                    (@and
                                      (@eq.{1} @bool fail_if_unchanged
                                        fail_if_unchanged_0)
                                      (@eq.{1} @bool memoize
                                        memoize_0)))))))))))))
              (@tactic.simp_config.mk.inj max_steps contextual lift_eq
                canonize_instances canonize_proofs use_axioms zeta beta eta proj
                iota single_pass fail_if_unchanged memoize max_steps_0
                contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0
                use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0
                fail_if_unchanged_0 memoize_0 a)))))))
  (@and.elim_left (@eq.{1} @bool zeta zeta_0)
    (@and (@eq.{1} @bool beta beta_0)
      (@and (@eq.{1} @bool eta eta_0)
        (@and (@eq.{1} @bool proj proj_0)
          (@and (@eq.{1} @bool iota iota_0)
            (@and (@eq.{1} @bool single_pass single_pass_0)
              (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                (@eq.{1} @bool memoize memoize_0)))))))
    (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
      (@and (@eq.{1} @bool zeta zeta_0)
        (@and (@eq.{1} @bool beta beta_0)
          (@and (@eq.{1} @bool eta eta_0)
            (@and (@eq.{1} @bool proj proj_0)
              (@and (@eq.{1} @bool iota iota_0)
                (@and (@eq.{1} @bool single_pass single_pass_0)
                  (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                    (@eq.{1} @bool memoize memoize_0))))))))
      (@and.elim_right (@eq.{1} @bool canonize_proofs canonize_proofs_0)
        (@and (@eq.{1} @bool use_axioms use_axioms_0)
          (@and (@eq.{1} @bool zeta zeta_0)
            (@and (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0)))))))))
        (@and.elim_right (@eq.{1} @bool canonize_instances canonize_instances_0)
          (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))))
          (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
            (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
              (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0)))))))))))
            (@and.elim_right (@eq.{1} @bool contextual contextual_0)
              (@and (@eq.{1} @bool lift_eq lift_eq_0)
                (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                  (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                    (@and (@eq.{1} @bool use_axioms use_axioms_0)
                      (@and (@eq.{1} @bool zeta zeta_0)
                        (@and (@eq.{1} @bool beta beta_0)
                          (@and (@eq.{1} @bool eta eta_0)
                            (@and (@eq.{1} @bool proj proj_0)
                              (@and (@eq.{1} @bool iota iota_0)
                                (@and (@eq.{1} @bool single_pass single_pass_0)
                                  (@and
                                    (@eq.{1} @bool fail_if_unchanged
                                      fail_if_unchanged_0)
                                    (@eq.{1} @bool memoize memoize_0))))))))))))
              (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                (@and (@eq.{1} @bool contextual contextual_0)
                  (@and (@eq.{1} @bool lift_eq lift_eq_0)
                    (@and
                      (@eq.{1} @bool canonize_instances canonize_instances_0)
                      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                        (@and (@eq.{1} @bool use_axioms use_axioms_0)
                          (@and (@eq.{1} @bool zeta zeta_0)
                            (@and (@eq.{1} @bool beta beta_0)
                              (@and (@eq.{1} @bool eta eta_0)
                                (@and (@eq.{1} @bool proj proj_0)
                                  (@and (@eq.{1} @bool iota iota_0)
                                    (@and
                                      (@eq.{1} @bool single_pass single_pass_0)
                                      (@and
                                        (@eq.{1} @bool fail_if_unchanged
                                          fail_if_unchanged_0)
                                        (@eq.{1} @bool memoize
                                          memoize_0)))))))))))))
                (@tactic.simp_config.mk.inj max_steps contextual lift_eq
                  canonize_instances canonize_proofs use_axioms zeta beta eta
                  proj iota single_pass fail_if_unchanged memoize max_steps_0
                  contextual_0 lift_eq_0 canonize_instances_0 canonize_proofs_0
                  use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0
                  fail_if_unchanged_0 memoize_0 a))))))))
  (@and.elim_left (@eq.{1} @bool beta beta_0)
    (@and (@eq.{1} @bool eta eta_0)
      (@and (@eq.{1} @bool proj proj_0)
        (@and (@eq.{1} @bool iota iota_0)
          (@and (@eq.{1} @bool single_pass single_pass_0)
            (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
              (@eq.{1} @bool memoize memoize_0))))))
    (@and.elim_right (@eq.{1} @bool zeta zeta_0)
      (@and (@eq.{1} @bool beta beta_0)
        (@and (@eq.{1} @bool eta eta_0)
          (@and (@eq.{1} @bool proj proj_0)
            (@and (@eq.{1} @bool iota iota_0)
              (@and (@eq.{1} @bool single_pass single_pass_0)
                (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                  (@eq.{1} @bool memoize memoize_0)))))))
      (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
        (@and (@eq.{1} @bool zeta zeta_0)
          (@and (@eq.{1} @bool beta beta_0)
            (@and (@eq.{1} @bool eta eta_0)
              (@and (@eq.{1} @bool proj proj_0)
                (@and (@eq.{1} @bool iota iota_0)
                  (@and (@eq.{1} @bool single_pass single_pass_0)
                    (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                      (@eq.{1} @bool memoize memoize_0))))))))
        (@and.elim_right (@eq.{1} @bool canonize_proofs canonize_proofs_0)
          (@and (@eq.{1} @bool use_axioms use_axioms_0)
            (@and (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0)))))))))
          (@and.elim_right
            (@eq.{1} @bool canonize_instances canonize_instances_0)
            (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                (@and (@eq.{1} @bool zeta zeta_0)
                  (@and (@eq.{1} @bool beta beta_0)
                    (@and (@eq.{1} @bool eta eta_0)
                      (@and (@eq.{1} @bool proj proj_0)
                        (@and (@eq.{1} @bool iota iota_0)
                          (@and (@eq.{1} @bool single_pass single_pass_0)
                            (@and
                              (@eq.{1} @bool fail_if_unchanged
                                fail_if_unchanged_0)
                              (@eq.{1} @bool memoize memoize_0))))))))))
            (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
              (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                  (@and (@eq.{1} @bool use_axioms use_axioms_0)
                    (@and (@eq.{1} @bool zeta zeta_0)
                      (@and (@eq.{1} @bool beta beta_0)
                        (@and (@eq.{1} @bool eta eta_0)
                          (@and (@eq.{1} @bool proj proj_0)
                            (@and (@eq.{1} @bool iota iota_0)
                              (@and (@eq.{1} @bool single_pass single_pass_0)
                                (@and
                                  (@eq.{1} @bool fail_if_unchanged
                                    fail_if_unchanged_0)
                                  (@eq.{1} @bool memoize memoize_0)))))))))))
              (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                (@and (@eq.{1} @bool lift_eq lift_eq_0)
                  (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                    (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                      (@and (@eq.{1} @bool use_axioms use_axioms_0)
                        (@and (@eq.{1} @bool zeta zeta_0)
                          (@and (@eq.{1} @bool beta beta_0)
                            (@and (@eq.{1} @bool eta eta_0)
                              (@and (@eq.{1} @bool proj proj_0)
                                (@and (@eq.{1} @bool iota iota_0)
                                  (@and
                                    (@eq.{1} @bool single_pass single_pass_0)
                                    (@and
                                      (@eq.{1} @bool fail_if_unchanged
                                        fail_if_unchanged_0)
                                      (@eq.{1} @bool memoize
                                        memoize_0))))))))))))
                (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                  (@and (@eq.{1} @bool contextual contextual_0)
                    (@and (@eq.{1} @bool lift_eq lift_eq_0)
                      (@and
                        (@eq.{1} @bool canonize_instances canonize_instances_0)
                        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                          (@and (@eq.{1} @bool use_axioms use_axioms_0)
                            (@and (@eq.{1} @bool zeta zeta_0)
                              (@and (@eq.{1} @bool beta beta_0)
                                (@and (@eq.{1} @bool eta eta_0)
                                  (@and (@eq.{1} @bool proj proj_0)
                                    (@and (@eq.{1} @bool iota iota_0)
                                      (@and
                                        (@eq.{1} @bool single_pass
                                          single_pass_0)
                                        (@and
                                          (@eq.{1} @bool fail_if_unchanged
                                            fail_if_unchanged_0)
                                          (@eq.{1} @bool memoize
                                            memoize_0)))))))))))))
                  (@tactic.simp_config.mk.inj max_steps contextual lift_eq
                    canonize_instances canonize_proofs use_axioms zeta beta eta
                    proj iota single_pass fail_if_unchanged memoize max_steps_0
                    contextual_0 lift_eq_0 canonize_instances_0
                    canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0 proj_0
                    iota_0 single_pass_0 fail_if_unchanged_0 memoize_0
                    a)))))))))
  (@and.elim_left (@eq.{1} @bool eta eta_0)
    (@and (@eq.{1} @bool proj proj_0)
      (@and (@eq.{1} @bool iota iota_0)
        (@and (@eq.{1} @bool single_pass single_pass_0)
          (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
            (@eq.{1} @bool memoize memoize_0)))))
    (@and.elim_right (@eq.{1} @bool beta beta_0)
      (@and (@eq.{1} @bool eta eta_0)
        (@and (@eq.{1} @bool proj proj_0)
          (@and (@eq.{1} @bool iota iota_0)
            (@and (@eq.{1} @bool single_pass single_pass_0)
              (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                (@eq.{1} @bool memoize memoize_0))))))
      (@and.elim_right (@eq.{1} @bool zeta zeta_0)
        (@and (@eq.{1} @bool beta beta_0)
          (@and (@eq.{1} @bool eta eta_0)
            (@and (@eq.{1} @bool proj proj_0)
              (@and (@eq.{1} @bool iota iota_0)
                (@and (@eq.{1} @bool single_pass single_pass_0)
                  (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                    (@eq.{1} @bool memoize memoize_0)))))))
        (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
          (@and (@eq.{1} @bool zeta zeta_0)
            (@and (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0))))))))
          (@and.elim_right (@eq.{1} @bool canonize_proofs canonize_proofs_0)
            (@and (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))))
            (@and.elim_right
              (@eq.{1} @bool canonize_instances canonize_instances_0)
              (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0))))))))))
              (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
                (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                  (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                    (@and (@eq.{1} @bool use_axioms use_axioms_0)
                      (@and (@eq.{1} @bool zeta zeta_0)
                        (@and (@eq.{1} @bool beta beta_0)
                          (@and (@eq.{1} @bool eta eta_0)
                            (@and (@eq.{1} @bool proj proj_0)
                              (@and (@eq.{1} @bool iota iota_0)
                                (@and (@eq.{1} @bool single_pass single_pass_0)
                                  (@and
                                    (@eq.{1} @bool fail_if_unchanged
                                      fail_if_unchanged_0)
                                    (@eq.{1} @bool memoize memoize_0)))))))))))
                (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                  (@and (@eq.{1} @bool lift_eq lift_eq_0)
                    (@and
                      (@eq.{1} @bool canonize_instances canonize_instances_0)
                      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                        (@and (@eq.{1} @bool use_axioms use_axioms_0)
                          (@and (@eq.{1} @bool zeta zeta_0)
                            (@and (@eq.{1} @bool beta beta_0)
                              (@and (@eq.{1} @bool eta eta_0)
                                (@and (@eq.{1} @bool proj proj_0)
                                  (@and (@eq.{1} @bool iota iota_0)
                                    (@and
                                      (@eq.{1} @bool single_pass single_pass_0)
                                      (@and
                                        (@eq.{1} @bool fail_if_unchanged
                                          fail_if_unchanged_0)
                                        (@eq.{1} @bool memoize
                                          memoize_0))))))))))))
                  (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                    (@and (@eq.{1} @bool contextual contextual_0)
                      (@and (@eq.{1} @bool lift_eq lift_eq_0)
                        (@and
                          (@eq.{1} @bool canonize_instances
                            canonize_instances_0)
                          (@and
                            (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                            (@and (@eq.{1} @bool use_axioms use_axioms_0)
                              (@and (@eq.{1} @bool zeta zeta_0)
                                (@and (@eq.{1} @bool beta beta_0)
                                  (@and (@eq.{1} @bool eta eta_0)
                                    (@and (@eq.{1} @bool proj proj_0)
                                      (@and (@eq.{1} @bool iota iota_0)
                                        (@and
                                          (@eq.{1} @bool single_pass
                                            single_pass_0)
                                          (@and
                                            (@eq.{1} @bool fail_if_unchanged
                                              fail_if_unchanged_0)
                                            (@eq.{1} @bool memoize
                                              memoize_0)))))))))))))
                    (@tactic.simp_config.mk.inj max_steps contextual lift_eq
                      canonize_instances canonize_proofs use_axioms zeta beta
                      eta proj iota single_pass fail_if_unchanged memoize
                      max_steps_0 contextual_0 lift_eq_0 canonize_instances_0
                      canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0 proj_0
                      iota_0 single_pass_0 fail_if_unchanged_0 memoize_0
                      a))))))))))
  (@and.elim_left (@eq.{1} @bool proj proj_0)
    (@and (@eq.{1} @bool iota iota_0)
      (@and (@eq.{1} @bool single_pass single_pass_0)
        (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
          (@eq.{1} @bool memoize memoize_0))))
    (@and.elim_right (@eq.{1} @bool eta eta_0)
      (@and (@eq.{1} @bool proj proj_0)
        (@and (@eq.{1} @bool iota iota_0)
          (@and (@eq.{1} @bool single_pass single_pass_0)
            (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
              (@eq.{1} @bool memoize memoize_0)))))
      (@and.elim_right (@eq.{1} @bool beta beta_0)
        (@and (@eq.{1} @bool eta eta_0)
          (@and (@eq.{1} @bool proj proj_0)
            (@and (@eq.{1} @bool iota iota_0)
              (@and (@eq.{1} @bool single_pass single_pass_0)
                (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                  (@eq.{1} @bool memoize memoize_0))))))
        (@and.elim_right (@eq.{1} @bool zeta zeta_0)
          (@and (@eq.{1} @bool beta beta_0)
            (@and (@eq.{1} @bool eta eta_0)
              (@and (@eq.{1} @bool proj proj_0)
                (@and (@eq.{1} @bool iota iota_0)
                  (@and (@eq.{1} @bool single_pass single_pass_0)
                    (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                      (@eq.{1} @bool memoize memoize_0)))))))
          (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
            (@and (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0))))))))
            (@and.elim_right (@eq.{1} @bool canonize_proofs canonize_proofs_0)
              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                (@and (@eq.{1} @bool zeta zeta_0)
                  (@and (@eq.{1} @bool beta beta_0)
                    (@and (@eq.{1} @bool eta eta_0)
                      (@and (@eq.{1} @bool proj proj_0)
                        (@and (@eq.{1} @bool iota iota_0)
                          (@and (@eq.{1} @bool single_pass single_pass_0)
                            (@and
                              (@eq.{1} @bool fail_if_unchanged
                                fail_if_unchanged_0)
                              (@eq.{1} @bool memoize memoize_0)))))))))
              (@and.elim_right
                (@eq.{1} @bool canonize_instances canonize_instances_0)
                (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                  (@and (@eq.{1} @bool use_axioms use_axioms_0)
                    (@and (@eq.{1} @bool zeta zeta_0)
                      (@and (@eq.{1} @bool beta beta_0)
                        (@and (@eq.{1} @bool eta eta_0)
                          (@and (@eq.{1} @bool proj proj_0)
                            (@and (@eq.{1} @bool iota iota_0)
                              (@and (@eq.{1} @bool single_pass single_pass_0)
                                (@and
                                  (@eq.{1} @bool fail_if_unchanged
                                    fail_if_unchanged_0)
                                  (@eq.{1} @bool memoize memoize_0))))))))))
                (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
                  (@and (@eq.{1} @bool canonize_instances canonize_instances_0)
                    (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                      (@and (@eq.{1} @bool use_axioms use_axioms_0)
                        (@and (@eq.{1} @bool zeta zeta_0)
                          (@and (@eq.{1} @bool beta beta_0)
                            (@and (@eq.{1} @bool eta eta_0)
                              (@and (@eq.{1} @bool proj proj_0)
                                (@and (@eq.{1} @bool iota iota_0)
                                  (@and
                                    (@eq.{1} @bool single_pass single_pass_0)
                                    (@and
                                      (@eq.{1} @bool fail_if_unchanged
                                        fail_if_unchanged_0)
                                      (@eq.{1} @bool memoize
                                        memoize_0)))))))))))
                  (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                    (@and (@eq.{1} @bool lift_eq lift_eq_0)
                      (@and
                        (@eq.{1} @bool canonize_instances canonize_instances_0)
                        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                          (@and (@eq.{1} @bool use_axioms use_axioms_0)
                            (@and (@eq.{1} @bool zeta zeta_0)
                              (@and (@eq.{1} @bool beta beta_0)
                                (@and (@eq.{1} @bool eta eta_0)
                                  (@and (@eq.{1} @bool proj proj_0)
                                    (@and (@eq.{1} @bool iota iota_0)
                                      (@and
                                        (@eq.{1} @bool single_pass
                                          single_pass_0)
                                        (@and
                                          (@eq.{1} @bool fail_if_unchanged
                                            fail_if_unchanged_0)
                                          (@eq.{1} @bool memoize
                                            memoize_0))))))))))))
                    (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                      (@and (@eq.{1} @bool contextual contextual_0)
                        (@and (@eq.{1} @bool lift_eq lift_eq_0)
                          (@and
                            (@eq.{1} @bool canonize_instances
                              canonize_instances_0)
                            (@and
                              (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                                (@and (@eq.{1} @bool zeta zeta_0)
                                  (@and (@eq.{1} @bool beta beta_0)
                                    (@and (@eq.{1} @bool eta eta_0)
                                      (@and (@eq.{1} @bool proj proj_0)
                                        (@and (@eq.{1} @bool iota iota_0)
                                          (@and
                                            (@eq.{1} @bool single_pass
                                              single_pass_0)
                                            (@and
                                              (@eq.{1} @bool fail_if_unchanged
                                                fail_if_unchanged_0)
                                              (@eq.{1} @bool memoize
                                                memoize_0)))))))))))))
                      (@tactic.simp_config.mk.inj max_steps contextual lift_eq
                        canonize_instances canonize_proofs use_axioms zeta beta
                        eta proj iota single_pass fail_if_unchanged memoize
                        max_steps_0 contextual_0 lift_eq_0 canonize_instances_0
                        canonize_proofs_0 use_axioms_0 zeta_0 beta_0 eta_0
                        proj_0 iota_0 single_pass_0 fail_if_unchanged_0
                        memoize_0 a)))))))))))
  (@and.elim_left (@eq.{1} @bool iota iota_0)
    (@and (@eq.{1} @bool single_pass single_pass_0)
      (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
        (@eq.{1} @bool memoize memoize_0)))
    (@and.elim_right (@eq.{1} @bool proj proj_0)
      (@and (@eq.{1} @bool iota iota_0)
        (@and (@eq.{1} @bool single_pass single_pass_0)
          (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
            (@eq.{1} @bool memoize memoize_0))))
      (@and.elim_right (@eq.{1} @bool eta eta_0)
        (@and (@eq.{1} @bool proj proj_0)
          (@and (@eq.{1} @bool iota iota_0)
            (@and (@eq.{1} @bool single_pass single_pass_0)
              (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                (@eq.{1} @bool memoize memoize_0)))))
        (@and.elim_right (@eq.{1} @bool beta beta_0)
          (@and (@eq.{1} @bool eta eta_0)
            (@and (@eq.{1} @bool proj proj_0)
              (@and (@eq.{1} @bool iota iota_0)
                (@and (@eq.{1} @bool single_pass single_pass_0)
                  (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                    (@eq.{1} @bool memoize memoize_0))))))
          (@and.elim_right (@eq.{1} @bool zeta zeta_0)
            (@and (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0)))))))
            (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
              (@and (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0))))))))
              (@and.elim_right (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0)))))))))
                (@and.elim_right
                  (@eq.{1} @bool canonize_instances canonize_instances_0)
                  (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                    (@and (@eq.{1} @bool use_axioms use_axioms_0)
                      (@and (@eq.{1} @bool zeta zeta_0)
                        (@and (@eq.{1} @bool beta beta_0)
                          (@and (@eq.{1} @bool eta eta_0)
                            (@and (@eq.{1} @bool proj proj_0)
                              (@and (@eq.{1} @bool iota iota_0)
                                (@and (@eq.{1} @bool single_pass single_pass_0)
                                  (@and
                                    (@eq.{1} @bool fail_if_unchanged
                                      fail_if_unchanged_0)
                                    (@eq.{1} @bool memoize memoize_0))))))))))
                  (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
                    (@and
                      (@eq.{1} @bool canonize_instances canonize_instances_0)
                      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                        (@and (@eq.{1} @bool use_axioms use_axioms_0)
                          (@and (@eq.{1} @bool zeta zeta_0)
                            (@and (@eq.{1} @bool beta beta_0)
                              (@and (@eq.{1} @bool eta eta_0)
                                (@and (@eq.{1} @bool proj proj_0)
                                  (@and (@eq.{1} @bool iota iota_0)
                                    (@and
                                      (@eq.{1} @bool single_pass single_pass_0)
                                      (@and
                                        (@eq.{1} @bool fail_if_unchanged
                                          fail_if_unchanged_0)
                                        (@eq.{1} @bool memoize
                                          memoize_0)))))))))))
                    (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                      (@and (@eq.{1} @bool lift_eq lift_eq_0)
                        (@and
                          (@eq.{1} @bool canonize_instances
                            canonize_instances_0)
                          (@and
                            (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                            (@and (@eq.{1} @bool use_axioms use_axioms_0)
                              (@and (@eq.{1} @bool zeta zeta_0)
                                (@and (@eq.{1} @bool beta beta_0)
                                  (@and (@eq.{1} @bool eta eta_0)
                                    (@and (@eq.{1} @bool proj proj_0)
                                      (@and (@eq.{1} @bool iota iota_0)
                                        (@and
                                          (@eq.{1} @bool single_pass
                                            single_pass_0)
                                          (@and
                                            (@eq.{1} @bool fail_if_unchanged
                                              fail_if_unchanged_0)
                                            (@eq.{1} @bool memoize
                                              memoize_0))))))))))))
                      (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                        (@and (@eq.{1} @bool contextual contextual_0)
                          (@and (@eq.{1} @bool lift_eq lift_eq_0)
                            (@and
                              (@eq.{1} @bool canonize_instances
                                canonize_instances_0)
                              (@and
                                (@eq.{1} @bool canonize_proofs
                                  canonize_proofs_0)
                                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                                  (@and (@eq.{1} @bool zeta zeta_0)
                                    (@and (@eq.{1} @bool beta beta_0)
                                      (@and (@eq.{1} @bool eta eta_0)
                                        (@and (@eq.{1} @bool proj proj_0)
                                          (@and (@eq.{1} @bool iota iota_0)
                                            (@and
                                              (@eq.{1} @bool single_pass
                                                single_pass_0)
                                              (@and
                                                (@eq.{1} @bool fail_if_unchanged
                                                  fail_if_unchanged_0)
                                                (@eq.{1} @bool memoize
                                                  memoize_0)))))))))))))
                        (@tactic.simp_config.mk.inj max_steps contextual lift_eq
                          canonize_instances canonize_proofs use_axioms zeta
                          beta eta proj iota single_pass fail_if_unchanged
                          memoize max_steps_0 contextual_0 lift_eq_0
                          canonize_instances_0 canonize_proofs_0 use_axioms_0
                          zeta_0 beta_0 eta_0 proj_0 iota_0 single_pass_0
                          fail_if_unchanged_0 memoize_0 a))))))))))))
  (@and.elim_left (@eq.{1} @bool single_pass single_pass_0)
    (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
      (@eq.{1} @bool memoize memoize_0))
    (@and.elim_right (@eq.{1} @bool iota iota_0)
      (@and (@eq.{1} @bool single_pass single_pass_0)
        (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
          (@eq.{1} @bool memoize memoize_0)))
      (@and.elim_right (@eq.{1} @bool proj proj_0)
        (@and (@eq.{1} @bool iota iota_0)
          (@and (@eq.{1} @bool single_pass single_pass_0)
            (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
              (@eq.{1} @bool memoize memoize_0))))
        (@and.elim_right (@eq.{1} @bool eta eta_0)
          (@and (@eq.{1} @bool proj proj_0)
            (@and (@eq.{1} @bool iota iota_0)
              (@and (@eq.{1} @bool single_pass single_pass_0)
                (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                  (@eq.{1} @bool memoize memoize_0)))))
          (@and.elim_right (@eq.{1} @bool beta beta_0)
            (@and (@eq.{1} @bool eta eta_0)
              (@and (@eq.{1} @bool proj proj_0)
                (@and (@eq.{1} @bool iota iota_0)
                  (@and (@eq.{1} @bool single_pass single_pass_0)
                    (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                      (@eq.{1} @bool memoize memoize_0))))))
            (@and.elim_right (@eq.{1} @bool zeta zeta_0)
              (@and (@eq.{1} @bool beta beta_0)
                (@and (@eq.{1} @bool eta eta_0)
                  (@and (@eq.{1} @bool proj proj_0)
                    (@and (@eq.{1} @bool iota iota_0)
                      (@and (@eq.{1} @bool single_pass single_pass_0)
                        (@and
                          (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                          (@eq.{1} @bool memoize memoize_0)))))))
              (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
                (@and (@eq.{1} @bool zeta zeta_0)
                  (@and (@eq.{1} @bool beta beta_0)
                    (@and (@eq.{1} @bool eta eta_0)
                      (@and (@eq.{1} @bool proj proj_0)
                        (@and (@eq.{1} @bool iota iota_0)
                          (@and (@eq.{1} @bool single_pass single_pass_0)
                            (@and
                              (@eq.{1} @bool fail_if_unchanged
                                fail_if_unchanged_0)
                              (@eq.{1} @bool memoize memoize_0))))))))
                (@and.elim_right
                  (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                  (@and (@eq.{1} @bool use_axioms use_axioms_0)
                    (@and (@eq.{1} @bool zeta zeta_0)
                      (@and (@eq.{1} @bool beta beta_0)
                        (@and (@eq.{1} @bool eta eta_0)
                          (@and (@eq.{1} @bool proj proj_0)
                            (@and (@eq.{1} @bool iota iota_0)
                              (@and (@eq.{1} @bool single_pass single_pass_0)
                                (@and
                                  (@eq.{1} @bool fail_if_unchanged
                                    fail_if_unchanged_0)
                                  (@eq.{1} @bool memoize memoize_0)))))))))
                  (@and.elim_right
                    (@eq.{1} @bool canonize_instances canonize_instances_0)
                    (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                      (@and (@eq.{1} @bool use_axioms use_axioms_0)
                        (@and (@eq.{1} @bool zeta zeta_0)
                          (@and (@eq.{1} @bool beta beta_0)
                            (@and (@eq.{1} @bool eta eta_0)
                              (@and (@eq.{1} @bool proj proj_0)
                                (@and (@eq.{1} @bool iota iota_0)
                                  (@and
                                    (@eq.{1} @bool single_pass single_pass_0)
                                    (@and
                                      (@eq.{1} @bool fail_if_unchanged
                                        fail_if_unchanged_0)
                                      (@eq.{1} @bool memoize memoize_0))))))))))
                    (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
                      (@and
                        (@eq.{1} @bool canonize_instances canonize_instances_0)
                        (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                          (@and (@eq.{1} @bool use_axioms use_axioms_0)
                            (@and (@eq.{1} @bool zeta zeta_0)
                              (@and (@eq.{1} @bool beta beta_0)
                                (@and (@eq.{1} @bool eta eta_0)
                                  (@and (@eq.{1} @bool proj proj_0)
                                    (@and (@eq.{1} @bool iota iota_0)
                                      (@and
                                        (@eq.{1} @bool single_pass
                                          single_pass_0)
                                        (@and
                                          (@eq.{1} @bool fail_if_unchanged
                                            fail_if_unchanged_0)
                                          (@eq.{1} @bool memoize
                                            memoize_0)))))))))))
                      (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                        (@and (@eq.{1} @bool lift_eq lift_eq_0)
                          (@and
                            (@eq.{1} @bool canonize_instances
                              canonize_instances_0)
                            (@and
                              (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                              (@and (@eq.{1} @bool use_axioms use_axioms_0)
                                (@and (@eq.{1} @bool zeta zeta_0)
                                  (@and (@eq.{1} @bool beta beta_0)
                                    (@and (@eq.{1} @bool eta eta_0)
                                      (@and (@eq.{1} @bool proj proj_0)
                                        (@and (@eq.{1} @bool iota iota_0)
                                          (@and
                                            (@eq.{1} @bool single_pass
                                              single_pass_0)
                                            (@and
                                              (@eq.{1} @bool fail_if_unchanged
                                                fail_if_unchanged_0)
                                              (@eq.{1} @bool memoize
                                                memoize_0))))))))))))
                        (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                          (@and (@eq.{1} @bool contextual contextual_0)
                            (@and (@eq.{1} @bool lift_eq lift_eq_0)
                              (@and
                                (@eq.{1} @bool canonize_instances
                                  canonize_instances_0)
                                (@and
                                  (@eq.{1} @bool canonize_proofs
                                    canonize_proofs_0)
                                  (@and (@eq.{1} @bool use_axioms use_axioms_0)
                                    (@and (@eq.{1} @bool zeta zeta_0)
                                      (@and (@eq.{1} @bool beta beta_0)
                                        (@and (@eq.{1} @bool eta eta_0)
                                          (@and (@eq.{1} @bool proj proj_0)
                                            (@and (@eq.{1} @bool iota iota_0)
                                              (@and
                                                (@eq.{1} @bool single_pass
                                                  single_pass_0)
                                                (@and
                                                  (@eq.{1} @bool
                                                    fail_if_unchanged
                                                    fail_if_unchanged_0)
                                                  (@eq.{1} @bool memoize
                                                    memoize_0)))))))))))))
                          (@tactic.simp_config.mk.inj max_steps contextual
                            lift_eq canonize_instances canonize_proofs
                            use_axioms zeta beta eta proj iota single_pass
                            fail_if_unchanged memoize max_steps_0 contextual_0
                            lift_eq_0 canonize_instances_0 canonize_proofs_0
                            use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0
                            single_pass_0 fail_if_unchanged_0 memoize_0
                            a)))))))))))))
  (@and.elim_left (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
    (@eq.{1} @bool memoize memoize_0)
    (@and.elim_right (@eq.{1} @bool single_pass single_pass_0)
      (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
        (@eq.{1} @bool memoize memoize_0))
      (@and.elim_right (@eq.{1} @bool iota iota_0)
        (@and (@eq.{1} @bool single_pass single_pass_0)
          (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
            (@eq.{1} @bool memoize memoize_0)))
        (@and.elim_right (@eq.{1} @bool proj proj_0)
          (@and (@eq.{1} @bool iota iota_0)
            (@and (@eq.{1} @bool single_pass single_pass_0)
              (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                (@eq.{1} @bool memoize memoize_0))))
          (@and.elim_right (@eq.{1} @bool eta eta_0)
            (@and (@eq.{1} @bool proj proj_0)
              (@and (@eq.{1} @bool iota iota_0)
                (@and (@eq.{1} @bool single_pass single_pass_0)
                  (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                    (@eq.{1} @bool memoize memoize_0)))))
            (@and.elim_right (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0))))))
              (@and.elim_right (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))
                (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0))))))))
                  (@and.elim_right
                    (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                    (@and (@eq.{1} @bool use_axioms use_axioms_0)
                      (@and (@eq.{1} @bool zeta zeta_0)
                        (@and (@eq.{1} @bool beta beta_0)
                          (@and (@eq.{1} @bool eta eta_0)
                            (@and (@eq.{1} @bool proj proj_0)
                              (@and (@eq.{1} @bool iota iota_0)
                                (@and (@eq.{1} @bool single_pass single_pass_0)
                                  (@and
                                    (@eq.{1} @bool fail_if_unchanged
                                      fail_if_unchanged_0)
                                    (@eq.{1} @bool memoize memoize_0)))))))))
                    (@and.elim_right
                      (@eq.{1} @bool canonize_instances canonize_instances_0)
                      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                        (@and (@eq.{1} @bool use_axioms use_axioms_0)
                          (@and (@eq.{1} @bool zeta zeta_0)
                            (@and (@eq.{1} @bool beta beta_0)
                              (@and (@eq.{1} @bool eta eta_0)
                                (@and (@eq.{1} @bool proj proj_0)
                                  (@and (@eq.{1} @bool iota iota_0)
                                    (@and
                                      (@eq.{1} @bool single_pass single_pass_0)
                                      (@and
                                        (@eq.{1} @bool fail_if_unchanged
                                          fail_if_unchanged_0)
                                        (@eq.{1} @bool memoize
                                          memoize_0))))))))))
                      (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
                        (@and
                          (@eq.{1} @bool canonize_instances
                            canonize_instances_0)
                          (@and
                            (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                            (@and (@eq.{1} @bool use_axioms use_axioms_0)
                              (@and (@eq.{1} @bool zeta zeta_0)
                                (@and (@eq.{1} @bool beta beta_0)
                                  (@and (@eq.{1} @bool eta eta_0)
                                    (@and (@eq.{1} @bool proj proj_0)
                                      (@and (@eq.{1} @bool iota iota_0)
                                        (@and
                                          (@eq.{1} @bool single_pass
                                            single_pass_0)
                                          (@and
                                            (@eq.{1} @bool fail_if_unchanged
                                              fail_if_unchanged_0)
                                            (@eq.{1} @bool memoize
                                              memoize_0)))))))))))
                        (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                          (@and (@eq.{1} @bool lift_eq lift_eq_0)
                            (@and
                              (@eq.{1} @bool canonize_instances
                                canonize_instances_0)
                              (@and
                                (@eq.{1} @bool canonize_proofs
                                  canonize_proofs_0)
                                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                                  (@and (@eq.{1} @bool zeta zeta_0)
                                    (@and (@eq.{1} @bool beta beta_0)
                                      (@and (@eq.{1} @bool eta eta_0)
                                        (@and (@eq.{1} @bool proj proj_0)
                                          (@and (@eq.{1} @bool iota iota_0)
                                            (@and
                                              (@eq.{1} @bool single_pass
                                                single_pass_0)
                                              (@and
                                                (@eq.{1} @bool fail_if_unchanged
                                                  fail_if_unchanged_0)
                                                (@eq.{1} @bool memoize
                                                  memoize_0))))))))))))
                          (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                            (@and (@eq.{1} @bool contextual contextual_0)
                              (@and (@eq.{1} @bool lift_eq lift_eq_0)
                                (@and
                                  (@eq.{1} @bool canonize_instances
                                    canonize_instances_0)
                                  (@and
                                    (@eq.{1} @bool canonize_proofs
                                      canonize_proofs_0)
                                    (@and
                                      (@eq.{1} @bool use_axioms use_axioms_0)
                                      (@and (@eq.{1} @bool zeta zeta_0)
                                        (@and (@eq.{1} @bool beta beta_0)
                                          (@and (@eq.{1} @bool eta eta_0)
                                            (@and (@eq.{1} @bool proj proj_0)
                                              (@and (@eq.{1} @bool iota iota_0)
                                                (@and
                                                  (@eq.{1} @bool single_pass
                                                    single_pass_0)
                                                  (@and
                                                    (@eq.{1} @bool
                                                      fail_if_unchanged
                                                      fail_if_unchanged_0)
                                                    (@eq.{1} @bool memoize
                                                      memoize_0)))))))))))))
                            (@tactic.simp_config.mk.inj max_steps contextual
                              lift_eq canonize_instances canonize_proofs
                              use_axioms zeta beta eta proj iota single_pass
                              fail_if_unchanged memoize max_steps_0 contextual_0
                              lift_eq_0 canonize_instances_0 canonize_proofs_0
                              use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0
                              single_pass_0 fail_if_unchanged_0 memoize_0
                              a))))))))))))))
  (@and.elim_right (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
    (@eq.{1} @bool memoize memoize_0)
    (@and.elim_right (@eq.{1} @bool single_pass single_pass_0)
      (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
        (@eq.{1} @bool memoize memoize_0))
      (@and.elim_right (@eq.{1} @bool iota iota_0)
        (@and (@eq.{1} @bool single_pass single_pass_0)
          (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
            (@eq.{1} @bool memoize memoize_0)))
        (@and.elim_right (@eq.{1} @bool proj proj_0)
          (@and (@eq.{1} @bool iota iota_0)
            (@and (@eq.{1} @bool single_pass single_pass_0)
              (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                (@eq.{1} @bool memoize memoize_0))))
          (@and.elim_right (@eq.{1} @bool eta eta_0)
            (@and (@eq.{1} @bool proj proj_0)
              (@and (@eq.{1} @bool iota iota_0)
                (@and (@eq.{1} @bool single_pass single_pass_0)
                  (@and (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                    (@eq.{1} @bool memoize memoize_0)))))
            (@and.elim_right (@eq.{1} @bool beta beta_0)
              (@and (@eq.{1} @bool eta eta_0)
                (@and (@eq.{1} @bool proj proj_0)
                  (@and (@eq.{1} @bool iota iota_0)
                    (@and (@eq.{1} @bool single_pass single_pass_0)
                      (@and
                        (@eq.{1} @bool fail_if_unchanged fail_if_unchanged_0)
                        (@eq.{1} @bool memoize memoize_0))))))
              (@and.elim_right (@eq.{1} @bool zeta zeta_0)
                (@and (@eq.{1} @bool beta beta_0)
                  (@and (@eq.{1} @bool eta eta_0)
                    (@and (@eq.{1} @bool proj proj_0)
                      (@and (@eq.{1} @bool iota iota_0)
                        (@and (@eq.{1} @bool single_pass single_pass_0)
                          (@and
                            (@eq.{1} @bool fail_if_unchanged
                              fail_if_unchanged_0)
                            (@eq.{1} @bool memoize memoize_0)))))))
                (@and.elim_right (@eq.{1} @bool use_axioms use_axioms_0)
                  (@and (@eq.{1} @bool zeta zeta_0)
                    (@and (@eq.{1} @bool beta beta_0)
                      (@and (@eq.{1} @bool eta eta_0)
                        (@and (@eq.{1} @bool proj proj_0)
                          (@and (@eq.{1} @bool iota iota_0)
                            (@and (@eq.{1} @bool single_pass single_pass_0)
                              (@and
                                (@eq.{1} @bool fail_if_unchanged
                                  fail_if_unchanged_0)
                                (@eq.{1} @bool memoize memoize_0))))))))
                  (@and.elim_right
                    (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                    (@and (@eq.{1} @bool use_axioms use_axioms_0)
                      (@and (@eq.{1} @bool zeta zeta_0)
                        (@and (@eq.{1} @bool beta beta_0)
                          (@and (@eq.{1} @bool eta eta_0)
                            (@and (@eq.{1} @bool proj proj_0)
                              (@and (@eq.{1} @bool iota iota_0)
                                (@and (@eq.{1} @bool single_pass single_pass_0)
                                  (@and
                                    (@eq.{1} @bool fail_if_unchanged
                                      fail_if_unchanged_0)
                                    (@eq.{1} @bool memoize memoize_0)))))))))
                    (@and.elim_right
                      (@eq.{1} @bool canonize_instances canonize_instances_0)
                      (@and (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                        (@and (@eq.{1} @bool use_axioms use_axioms_0)
                          (@and (@eq.{1} @bool zeta zeta_0)
                            (@and (@eq.{1} @bool beta beta_0)
                              (@and (@eq.{1} @bool eta eta_0)
                                (@and (@eq.{1} @bool proj proj_0)
                                  (@and (@eq.{1} @bool iota iota_0)
                                    (@and
                                      (@eq.{1} @bool single_pass single_pass_0)
                                      (@and
                                        (@eq.{1} @bool fail_if_unchanged
                                          fail_if_unchanged_0)
                                        (@eq.{1} @bool memoize
                                          memoize_0))))))))))
                      (@and.elim_right (@eq.{1} @bool lift_eq lift_eq_0)
                        (@and
                          (@eq.{1} @bool canonize_instances
                            canonize_instances_0)
                          (@and
                            (@eq.{1} @bool canonize_proofs canonize_proofs_0)
                            (@and (@eq.{1} @bool use_axioms use_axioms_0)
                              (@and (@eq.{1} @bool zeta zeta_0)
                                (@and (@eq.{1} @bool beta beta_0)
                                  (@and (@eq.{1} @bool eta eta_0)
                                    (@and (@eq.{1} @bool proj proj_0)
                                      (@and (@eq.{1} @bool iota iota_0)
                                        (@and
                                          (@eq.{1} @bool single_pass
                                            single_pass_0)
                                          (@and
                                            (@eq.{1} @bool fail_if_unchanged
                                              fail_if_unchanged_0)
                                            (@eq.{1} @bool memoize
                                              memoize_0)))))))))))
                        (@and.elim_right (@eq.{1} @bool contextual contextual_0)
                          (@and (@eq.{1} @bool lift_eq lift_eq_0)
                            (@and
                              (@eq.{1} @bool canonize_instances
                                canonize_instances_0)
                              (@and
                                (@eq.{1} @bool canonize_proofs
                                  canonize_proofs_0)
                                (@and (@eq.{1} @bool use_axioms use_axioms_0)
                                  (@and (@eq.{1} @bool zeta zeta_0)
                                    (@and (@eq.{1} @bool beta beta_0)
                                      (@and (@eq.{1} @bool eta eta_0)
                                        (@and (@eq.{1} @bool proj proj_0)
                                          (@and (@eq.{1} @bool iota iota_0)
                                            (@and
                                              (@eq.{1} @bool single_pass
                                                single_pass_0)
                                              (@and
                                                (@eq.{1} @bool fail_if_unchanged
                                                  fail_if_unchanged_0)
                                                (@eq.{1} @bool memoize
                                                  memoize_0))))))))))))
                          (@and.elim_right (@eq.{1} @nat max_steps max_steps_0)
                            (@and (@eq.{1} @bool contextual contextual_0)
                              (@and (@eq.{1} @bool lift_eq lift_eq_0)
                                (@and
                                  (@eq.{1} @bool canonize_instances
                                    canonize_instances_0)
                                  (@and
                                    (@eq.{1} @bool canonize_proofs
                                      canonize_proofs_0)
                                    (@and
                                      (@eq.{1} @bool use_axioms use_axioms_0)
                                      (@and (@eq.{1} @bool zeta zeta_0)
                                        (@and (@eq.{1} @bool beta beta_0)
                                          (@and (@eq.{1} @bool eta eta_0)
                                            (@and (@eq.{1} @bool proj proj_0)
                                              (@and (@eq.{1} @bool iota iota_0)
                                                (@and
                                                  (@eq.{1} @bool single_pass
                                                    single_pass_0)
                                                  (@and
                                                    (@eq.{1} @bool
                                                      fail_if_unchanged
                                                      fail_if_unchanged_0)
                                                    (@eq.{1} @bool memoize
                                                      memoize_0)))))))))))))
                            (@tactic.simp_config.mk.inj max_steps contextual
                              lift_eq canonize_instances canonize_proofs
                              use_axioms zeta beta eta proj iota single_pass
                              fail_if_unchanged memoize max_steps_0 contextual_0
                              lift_eq_0 canonize_instances_0 canonize_proofs_0
                              use_axioms_0 zeta_0 beta_0 eta_0 proj_0 iota_0
                              single_pass_0 fail_if_unchanged_0 memoize_0
                              a)))))))))))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @tactic.simp_config.mk.inj"

mod: "IndMod(InductiveType(has_to_string,Vector(Param(u)),∀ (α : Type u), Type u),1,Vector((has_to_string.mk,∀ {α : Type u} (to_string : (∀ (a : α), @string)), @has_to_string.{u} α)))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(has_to_string.cases_on,Vector(Param(l), Param(u)),∀ {α : Type u} {C : (∀ (n_0 : @has_to_string.{u} α), Sort l)}
  (n : @has_to_string.{u} α)
  (e_1 :
    (∀ (to_string : (∀ (a : α), @string)),
    C (@has_to_string.mk.{u} α to_string))),
C n,λ {α : Type u} {C : (∀ (n_0 : @has_to_string.{u} α), Sort l)}
  (n : @has_to_string.{u} α)
  (e_1 :
    (∀ (to_string : (∀ (a : α), @string)),
    C (@has_to_string.mk.{u} α to_string))),
@has_to_string.rec.{l u} α C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_to_string.{u}"

mod: "DefMod(Definition(has_to_string.no_confusion_type,Vector(Param(l), Param(u)),∀ {α : Type u} (P : Sort l) (v1 v2 : @has_to_string.{u} α), Sort l,λ {α : Type u} (P : Sort l) (v1 v2 : @has_to_string.{u} α),
@has_to_string.cases_on.{l+1 u} α (λ (v1_0 : @has_to_string.{u} α), Sort l) v1
  (λ (to_string : (∀ (a : α), @string)),
  @has_to_string.cases_on.{l+1 u} α (λ (v1_0 : @has_to_string.{u} α), Sort l) v2
    (λ (to_string_0 : (∀ (a_0 : α), @string)),
    ∀ (a :
        (∀ (to_string_eq :
            @eq.{max (u+1) 1} (∀ (a_0 : α), @string) to_string to_string_0),
        P)),
    P)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_to_string.{u}"

mod: "DefMod(Definition(list.intersperse._main.equations._eqn_3,Vector(Param(u)),∀ {α : Type u} (sep x a : α) (a_0 : @list.{u} α),
@eq.{u+1} (@list.{u} α)
  (@list.intersperse._main.{u} α sep
    (@list.cons.{u} α x (@list.cons.{u} α a a_0)))
  (@list.cons.{u} α x
    (@list.cons.{u} α sep
      (@list.intersperse._main.{u} α sep (@list.cons.{u} α a a_0)))),λ {α : Type u} (sep x a : α) (a_0 : @list.{u} α),
@eq.refl.{u+1}
  ((λ (a_1 : @list.{u} α), @list.{u} α)
    (@list.cons.{u} α x (@list.cons.{u} α a a_0)))
  (@list.brec_on.{u+1 u} α (λ (a_1 : @list.{u} α), @list.{u} α)
    (@list.cons.{u} α x (@list.cons.{u} α a a_0))
    (λ (a_1 : @list.{u} α)
      (F : @list.below.{u+1 u} α (λ (a_2 : @list.{u} α), @list.{u} α) a_1),
    (λ (a_2 : @list.{u} α)
        (F_0 : @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), @list.{u} α) a_2),
      @list.cases_on.{max 1 (u+1) u} α
        (λ (a_3 : @list.{u} α),
        ∀ (F_1 :
            @list.below.{u+1 u} α (λ (a_4 : @list.{u} α), @list.{u} α) a_3),
        @list.{u} α) a_2
        (λ (F_1 :
            @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), @list.{u} α)
              (@list.nil.{u} α)),
        @list.nil.{u} α)
        (λ (a_3 : α) (a_1_0 : @list.{u} α)
          (F_1 :
            @list.below.{u+1 u} α (λ (a_4 : @list.{u} α), @list.{u} α)
              (@list.cons.{u} α a_3 a_1_0)),
        @list.cases_on.{max 1 (u+1) u} α
          (λ (a_1_1 : @list.{u} α),
          ∀ (F_2 :
              @list.below.{u+1 u} α (λ (a_4 : @list.{u} α), @list.{u} α)
                (@list.cons.{u} α a_3 a_1_1)),
          @list.{u} α) a_1_0
          (λ (F_2 :
              @list.below.{u+1 u} α (λ (a_4 : @list.{u} α), @list.{u} α)
                (@list.cons.{u} α a_3 (@list.nil.{u} α))),
          @list.cons.{u} α a_3 (@list.nil.{u} α))
          (λ (a_1_1 : α) (a_2_0 : @list.{u} α)
            (F_2 :
              @list.below.{u+1 u} α (λ (a_4 : @list.{u} α), @list.{u} α)
                (@list.cons.{u} α a_3 (@list.cons.{u} α a_1_1 a_2_0))),
          @list.cons.{u} α a_3
            (@list.cons.{u} α sep
              (@pprod.fst.{u+1 max 1 (u+1)}
                ((λ (a_4 : @list.{u} α), @list.{u} α)
                  (@list.cons.{u} α a_1_1 a_2_0))
                (@list.rec.{(max 1 (u+1))+1 u} α
                  (λ (n : @list.{u} α), Sort (max 1 (u+1))) @punit.{max 1 (u+1)}
                  (λ (a_4 : α) (a_5 : @list.{u} α) (ih_1 : Sort (max 1 (u+1))),
                  @pprod.{max 1 (u+1) max 1 (u+1)}
                    (@pprod.{u+1 max 1 (u+1)}
                      ((λ (a_6 : @list.{u} α), @list.{u} α) a_5) ih_1)
                    @punit.{max 1 (u+1)}) (@list.cons.{u} α a_1_1 a_2_0))
                (@pprod.fst.{max 1 (u+1) max 1 (u+1)}
                  (@pprod.{u+1 max 1 (u+1)}
                    ((λ (a_4 : @list.{u} α), @list.{u} α)
                      (@list.cons.{u} α a_1_1 a_2_0))
                    (@list.rec.{(max 1 (u+1))+1 u} α
                      (λ (n : @list.{u} α), Sort (max 1 (u+1)))
                      @punit.{max 1 (u+1)}
                      (λ (a_4 : α) (a_5 : @list.{u} α)
                        (ih_1 : Sort (max 1 (u+1))),
                      @pprod.{max 1 (u+1) max 1 (u+1)}
                        (@pprod.{u+1 max 1 (u+1)}
                          ((λ (a_6 : @list.{u} α), @list.{u} α) a_5) ih_1)
                        @punit.{max 1 (u+1)}) (@list.cons.{u} α a_1_1 a_2_0)))
                  @punit.{max 1 (u+1)} F_2)))) F_1) F_0) a_1 F)),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(list.intersperse.equations._eqn_3,Vector(Param(u)),∀ {α : Type u} (sep x a : α) (a_0 : @list.{u} α),
@eq.{u+1} (@list.{u} α)
  (@list.intersperse.{u} α sep (@list.cons.{u} α x (@list.cons.{u} α a a_0)))
  (@list.cons.{u} α x
    (@list.cons.{u} α sep
      (@list.intersperse.{u} α sep (@list.cons.{u} α a a_0)))),λ {α : Type u} (sep : α), @list.intersperse._main.equations._eqn_3.{u} α sep,0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.intersperse._main.equations._eqn_3.{u}"

mod: "DefMod(Definition(functor.map_comp,Vector(Param(u), Param(v)),∀ {f : (∀ (a : Type u), Type v)} [c : @functor.{u v} f] {α β γ : Type u}
  (g : (∀ (a : α), β)) (h : (∀ (a : β), γ)) (x : f α),
@eq.{v+1} (f γ)
  (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0) (@functor.to_has_map.{u v} f c)
    α γ (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
  (@has_map.map.{u v} f (@functor.to_has_map.{u v} f c) β γ h
    (@has_map.map.{u v} f (@functor.to_has_map.{u v} f c) α β g x)),λ (f : (∀ (a : Type u), Type v)) [c : @functor.{u v} f],
@functor.rec.{0 u v} f
  (λ [c_0 : @functor.{u v} f],
  ∀ {α β γ : Type u} (g : (∀ (a : α), β)) (h : (∀ (a : β), γ)) (x : f α),
  @eq.{v+1} (f γ)
    (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0)
      (@functor.to_has_map.{u v} f c_0) α γ
      (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
    (@has_map.map.{u v} f (@functor.to_has_map.{u v} f c_0) β γ h
      (@has_map.map.{u v} f (@functor.to_has_map.{u v} f c_0) α β g x)))
  (λ (to_has_map : @has_map.{u v} f)
    (map_const_eq :
      @auto_param.{0}
        (∀ {α β : Type u},
        @eq.{max (u+1) (v+1)} (∀ (a : α) (a_0 : f β), f α)
          (@has_map.map_const.{u v} f to_has_map α β)
          (@function.comp.{u+1 u+1 v+1} α (∀ (a : β), α) (∀ (a : f β), f α)
            (@has_map.map.{u v} f to_has_map β α)
            (@function.const.{u+1 u+1} α β)))
        (@name.mk_string
          (@string.str
            (@string.str
              (@string.str
                (@string.str
                  (@string.str
                    (@string.str
                      (@string.str
                        (@string.str
                          (@string.str
                            (@string.str
                              (@string.str
                                (@string.str
                                  (@string.str
                                    (@string.str
                                      (@string.str
                                        (@string.str @string.empty
                                          (@char.of_nat
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit0.{0} @nat @nat.has_add
                                                      (@bit1.{0} @nat
                                                        @nat.has_one
                                                        @nat.has_add
                                                        (@has_one.one.{0} @nat
                                                          @nat.has_one)))))))))
                                        (@char.of_nat
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@bit0.{0} @nat @nat.has_add
                                                    (@bit1.{0} @nat @nat.has_one
                                                      @nat.has_add
                                                      (@has_one.one.{0} @nat
                                                        @nat.has_one)))))))))
                                      (@char.of_nat
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit0.{0} @nat @nat.has_add
                                                  (@bit1.{0} @nat @nat.has_one
                                                    @nat.has_add
                                                    (@has_one.one.{0} @nat
                                                      @nat.has_one)))))))))
                                    (@char.of_nat
                                      (@bit0.{0} @nat @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@bit0.{0} @nat @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@bit1.{0} @nat @nat.has_one
                                                  @nat.has_add
                                                  (@has_one.one.{0} @nat
                                                    @nat.has_one)))))))))
                                  (@char.of_nat
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@bit1.{0} @nat @nat.has_one
                                                @nat.has_add
                                                (@has_one.one.{0} @nat
                                                  @nat.has_one)))))))))
                                (@char.of_nat
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit1.{0} @nat @nat.has_one
                                          @nat.has_add
                                          (@bit0.{0} @nat @nat.has_add
                                            (@bit1.{0} @nat @nat.has_one
                                              @nat.has_add
                                              (@has_one.one.{0} @nat
                                                @nat.has_one)))))))))
                              (@char.of_nat
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@bit1.{0} @nat @nat.has_one
                                            @nat.has_add
                                            (@has_one.one.{0} @nat
                                              @nat.has_one)))))))))
                            (@char.of_nat
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@bit0.{0} @nat @nat.has_add
                                          (@has_one.one.{0} @nat
                                            @nat.has_one)))))))))
                          (@char.of_nat
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@bit0.{0} @nat @nat.has_add
                                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                                        (@has_one.one.{0} @nat
                                          @nat.has_one)))))))))
                        (@char.of_nat
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit0.{0} @nat @nat.has_add
                                  (@bit0.{0} @nat @nat.has_add
                                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                                      (@has_one.one.{0} @nat
                                        @nat.has_one)))))))))
                      (@char.of_nat
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@bit1.{0} @nat @nat.has_one @nat.has_add
                                    (@has_one.one.{0} @nat @nat.has_one)))))))))
                    (@char.of_nat
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit0.{0} @nat @nat.has_add
                            (@bit0.{0} @nat @nat.has_add
                              (@bit1.{0} @nat @nat.has_one @nat.has_add
                                (@bit1.{0} @nat @nat.has_one @nat.has_add
                                  (@has_one.one.{0} @nat @nat.has_one)))))))))
                  (@char.of_nat
                    (@bit1.{0} @nat @nat.has_one @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@bit0.{0} @nat @nat.has_add
                                (@has_one.one.{0} @nat @nat.has_one)))))))))
                (@char.of_nat
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit1.{0} @nat @nat.has_one @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@bit1.{0} @nat @nat.has_one @nat.has_add
                              (@has_one.one.{0} @nat @nat.has_one)))))))))
              (@char.of_nat
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit0.{0} @nat @nat.has_add
                          (@bit1.{0} @nat @nat.has_one @nat.has_add
                            (@has_one.one.{0} @nat @nat.has_one)))))))))
            (@char.of_nat
              (@bit1.{0} @nat @nat.has_one @nat.has_add
                (@bit1.{0} @nat @nat.has_one @nat.has_add
                  (@bit0.{0} @nat @nat.has_add
                    (@bit0.{0} @nat @nat.has_add
                      (@bit0.{0} @nat @nat.has_add
                        (@bit1.{0} @nat @nat.has_one @nat.has_add
                          (@has_one.one.{0} @nat @nat.has_one)))))))))
          @name.anonymous))
    (id_map :
      (∀ {α : Type u} (x : f α),
      @eq.{v+1} (f α) (@has_map.map.{u v} f to_has_map α α (@id.{u+1} α) x) x))
    (map_comp :
      (∀ {α β γ : Type u} (g : (∀ (a : α), β)) (h : (∀ (a : β), γ)) (x : f α),
      @eq.{v+1} (f γ)
        (@has_map.map.{u v} (λ {α_0 : Type u}, f α_0) to_has_map α γ
          (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
        (@has_map.map.{u v} f to_has_map β γ h
          (@has_map.map.{u v} f to_has_map α β g x)))),
  map_comp) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @functor.{u v}"

mod: "DefMod(Definition(state_t.alternative._proof_3,Vector(Param(u), Param(v)),∀ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_2 : @monad.{u v} m]
  {α β γ : Type u} (g : (∀ (a : α), β)) (h : (∀ (a : β), γ))
  (x : @state_t.{u v} σ m inst_2 α),
@eq.{(max u v)+1} (@state_t.{u v} σ m inst_2 γ)
  (@has_map.map.{u max u v} (λ {α_0 : Type u}, @state_t.{u v} σ m inst_2 α_0)
    (@functor.to_has_map.{u max u v} (@state_t.{u v} σ m inst_2)
      (@applicative.to_functor.{u max u v} (@state_t.{u v} σ m inst_2)
        (@monad.to_applicative.{u max u v} (@state_t.{u v} σ m inst_2)
          (@state_t.monad.{u v} σ m inst_2)))) α γ
    (@function.comp.{u+1 u+1 u+1} α β γ h g) x)
  (@has_map.map.{u max u v} (@state_t.{u v} σ m inst_2)
    (@functor.to_has_map.{u max u v} (@state_t.{u v} σ m inst_2)
      (@applicative.to_functor.{u max u v} (@state_t.{u v} σ m inst_2)
        (@monad.to_applicative.{u max u v} (@state_t.{u v} σ m inst_2)
          (@state_t.monad.{u v} σ m inst_2)))) β γ h
    (@has_map.map.{u max u v} (@state_t.{u v} σ m inst_2)
      (@functor.to_has_map.{u max u v} (@state_t.{u v} σ m inst_2)
        (@applicative.to_functor.{u max u v} (@state_t.{u v} σ m inst_2)
          (@monad.to_applicative.{u max u v} (@state_t.{u v} σ m inst_2)
            (@state_t.monad.{u v} σ m inst_2)))) α β g x)),λ (σ : Type u) (m : (∀ (a : Type u), Type v)) [inst_2 : @monad.{u v} m],
@functor.map_comp.{u max u v} (@state_t.{u v} σ m inst_2)
  (@applicative.to_functor.{u max u v} (@state_t.{u v} σ m inst_2)
    (@monad.to_applicative.{u max u v} (@state_t.{u v} σ m inst_2)
      (@state_t.monad.{u v} σ m inst_2))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(list.mfoldr._main,Vector(Param(w), Param(u), Param(v)),∀ {m : (∀ (a_2 : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (a : (∀ (a_2 : α) (a_3 : s), m s)) (a_0 : s) (a_1 : @list.{w} α),
m s,λ {m : (∀ (a_2 : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (a : (∀ (a_2 : α) (a_3 : s), m s)) (a_0 : s) (a_1 : @list.{w} α),
@list.brec_on.{max (w+1) (max (u+1) (v+1)) w} α
  (λ (a_2 : @list.{w} α), ∀ (a_3 : (∀ (a_5 : α) (a_6 : s), m s)) (a_4 : s), m s)
  a_1
  (λ (a_2 : @list.{w} α)
    (F :
      @list.below.{max (w+1) (max (u+1) (v+1)) w} α
        (λ (a_5 : @list.{w} α),
        ∀ (a_6 : (∀ (a_8 : α) (a_9 : s), m s)) (a_7 : s),
        m s) a_2) (a_3 : (∀ (a_5 : α) (a_6 : s), m s)) (a_4 : s),
  (λ (a_5 : (∀ (a_8 : α) (a_9 : s), m s)) (a_6 : s) (a_7 : @list.{w} α)
      (F_0 :
        @list.below.{max (w+1) (max (u+1) (v+1)) w} α
          (λ (a_8 : @list.{w} α),
          ∀ (a_9 : (∀ (a_11 : α) (a_12 : s), m s)) (a_10 : s),
          m s) a_7),
    @list.cases_on.{max (max 1 (max (w+1) (max (u+1) (v+1)))) (v+1) w} α
      (λ (a_8 : @list.{w} α),
      ∀ (F_1 :
          @list.below.{max (w+1) (max (u+1) (v+1)) w} α
            (λ (a_9 : @list.{w} α),
            ∀ (a_10 : (∀ (a_12 : α) (a_13 : s), m s)) (a_11 : s),
            m s) a_8),
      m s) a_7
      (λ (F_1 :
          @list.below.{max (w+1) (max (u+1) (v+1)) w} α
            (λ (a_8 : @list.{w} α),
            ∀ (a_9 : (∀ (a_11 : α) (a_12 : s), m s)) (a_10 : s),
            m s) (@list.nil.{w} α)),
      @return.{u v} m inst_1 s a_6)
      (λ (a_1_0 : α) (a_2_0 : @list.{w} α)
        (F_1 :
          @list.below.{max (w+1) (max (u+1) (v+1)) w} α
            (λ (a_8 : @list.{w} α),
            ∀ (a_9 : (∀ (a_11 : α) (a_12 : s), m s)) (a_10 : s),
            m s) (@list.cons.{w} α a_1_0 a_2_0)),
      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) s s
        (@pprod.fst.{max (w+1)
          (max (u+1)
          (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
          ((λ (a_8 : @list.{w} α),
            ∀ (a_9 : (∀ (a_11 : α) (a_12 : s), m s)) (a_10 : s),
            m s) a_2_0)
          (@list.rec.{(max 1 (max (w+1) (max (u+1) (v+1))))+1 w} α
            (λ (n : @list.{w} α), Sort (max 1 (max (w+1) (max (u+1) (v+1)))))
            @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}
            (λ (a_8 : α) (a_9 : @list.{w} α)
              (ih_1 : Sort (max 1 (max (w+1) (max (u+1) (v+1))))),
            @pprod.{max 1
              (max (w+1)
              (max (u+1)
              (v+1))) max 1 (max (w+1) (max (u+1) (v+1)))}
              (@pprod.{max (w+1)
                (max (u+1)
                (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
                ((λ (a_10 : @list.{w} α),
                  ∀ (a_11 : (∀ (a_13 : α) (a_14 : s), m s)) (a_12 : s),
                  m s) a_9) ih_1) @punit.{max 1 (max (w+1) (max (u+1) (v+1)))})
            a_2_0)
          (@pprod.fst.{max 1
            (max (w+1)
            (max (u+1)
            (v+1))) max 1 (max (w+1) (max (u+1) (v+1)))}
            (@pprod.{max (w+1)
              (max (u+1)
              (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
              ((λ (a_8 : @list.{w} α),
                ∀ (a_9 : (∀ (a_11 : α) (a_12 : s), m s)) (a_10 : s),
                m s) a_2_0)
              (@list.rec.{(max 1 (max (w+1) (max (u+1) (v+1))))+1 w} α
                (λ (n : @list.{w} α),
                Sort (max 1
                (max (w+1)
                (max (u+1)
                (v+1))))) @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}
                (λ (a_8 : α) (a_9 : @list.{w} α)
                  (ih_1 : Sort (max 1 (max (w+1) (max (u+1) (v+1))))),
                @pprod.{max 1
                  (max (w+1)
                  (max (u+1)
                  (v+1))) max 1 (max (w+1) (max (u+1) (v+1)))}
                  (@pprod.{max (w+1)
                    (max (u+1)
                    (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
                    ((λ (a_10 : @list.{w} α),
                      ∀ (a_11 : (∀ (a_13 : α) (a_14 : s), m s)) (a_12 : s),
                      m s) a_9) ih_1)
                  @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}) a_2_0))
            @punit.{max 1 (max (w+1) (max (u+1) (v+1)))} F_1) a_5 a_6)
        (λ (s_0 : s), a_5 a_1_0 s_0)) F_0) a_3 a_4 a_2 F) a a_0,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(list.mfoldr._main.equations._eqn_1,Vector(Param(v), Param(w), Param(u)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (f : (∀ (a : α) (a_0 : s), m s)) (s_0 : s),
@eq.{v+1} (m s)
  (@list.mfoldr._main.{w u v} m inst_1 s α f s_0 (@list.nil.{w} α))
  (@return.{u v} m inst_1 s s_0),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (f : (∀ (a : α) (a_0 : s), m s)) (s_0 : s),
@eq.refl.{v+1} (m s)
  (@list.brec_on.{max (w+1) (max (u+1) (v+1)) w} α
    (λ (a : @list.{w} α), ∀ (a_0 : (∀ (a_2 : α) (a_3 : s), m s)) (a_1 : s), m s)
    (@list.nil.{w} α)
    (λ (a : @list.{w} α)
      (F :
        @list.below.{max (w+1) (max (u+1) (v+1)) w} α
          (λ (a_2 : @list.{w} α),
          ∀ (a_3 : (∀ (a_5 : α) (a_6 : s), m s)) (a_4 : s),
          m s) a) (a_0 : (∀ (a_2 : α) (a_3 : s), m s)) (a_1 : s),
    (λ (a_2 : (∀ (a_5 : α) (a_6 : s), m s)) (a_3 : s) (a_4 : @list.{w} α)
        (F_0 :
          @list.below.{max (w+1) (max (u+1) (v+1)) w} α
            (λ (a_5 : @list.{w} α),
            ∀ (a_6 : (∀ (a_8 : α) (a_9 : s), m s)) (a_7 : s),
            m s) a_4),
      @list.cases_on.{max (max 1 (max (w+1) (max (u+1) (v+1)))) (v+1) w} α
        (λ (a_5 : @list.{w} α),
        ∀ (F_1 :
            @list.below.{max (w+1) (max (u+1) (v+1)) w} α
              (λ (a_6 : @list.{w} α),
              ∀ (a_7 : (∀ (a_9 : α) (a_10 : s), m s)) (a_8 : s),
              m s) a_5),
        m s) a_4
        (λ (F_1 :
            @list.below.{max (w+1) (max (u+1) (v+1)) w} α
              (λ (a_5 : @list.{w} α),
              ∀ (a_6 : (∀ (a_8 : α) (a_9 : s), m s)) (a_7 : s),
              m s) (@list.nil.{w} α)),
        @return.{u v} m inst_1 s a_3)
        (λ (a_1_0 : α) (a_2_0 : @list.{w} α)
          (F_1 :
            @list.below.{max (w+1) (max (u+1) (v+1)) w} α
              (λ (a_5 : @list.{w} α),
              ∀ (a_6 : (∀ (a_8 : α) (a_9 : s), m s)) (a_7 : s),
              m s) (@list.cons.{w} α a_1_0 a_2_0)),
        @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) s s
          (@pprod.fst.{max (w+1)
            (max (u+1)
            (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
            ((λ (a_5 : @list.{w} α),
              ∀ (a_6 : (∀ (a_8 : α) (a_9 : s), m s)) (a_7 : s),
              m s) a_2_0)
            (@list.rec.{(max 1 (max (w+1) (max (u+1) (v+1))))+1 w} α
              (λ (n : @list.{w} α), Sort (max 1 (max (w+1) (max (u+1) (v+1)))))
              @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}
              (λ (a_5 : α) (a_6 : @list.{w} α)
                (ih_1 : Sort (max 1 (max (w+1) (max (u+1) (v+1))))),
              @pprod.{max 1
                (max (w+1)
                (max (u+1)
                (v+1))) max 1 (max (w+1) (max (u+1) (v+1)))}
                (@pprod.{max (w+1)
                  (max (u+1)
                  (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
                  ((λ (a_7 : @list.{w} α),
                    ∀ (a_8 : (∀ (a_10 : α) (a_11 : s), m s)) (a_9 : s),
                    m s) a_6) ih_1)
                @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}) a_2_0)
            (@pprod.fst.{max 1
              (max (w+1)
              (max (u+1)
              (v+1))) max 1 (max (w+1) (max (u+1) (v+1)))}
              (@pprod.{max (w+1)
                (max (u+1)
                (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
                ((λ (a_5 : @list.{w} α),
                  ∀ (a_6 : (∀ (a_8 : α) (a_9 : s), m s)) (a_7 : s),
                  m s) a_2_0)
                (@list.rec.{(max 1 (max (w+1) (max (u+1) (v+1))))+1 w} α
                  (λ (n : @list.{w} α),
                  Sort (max 1
                  (max (w+1)
                  (max (u+1)
                  (v+1))))) @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}
                  (λ (a_5 : α) (a_6 : @list.{w} α)
                    (ih_1 : Sort (max 1 (max (w+1) (max (u+1) (v+1))))),
                  @pprod.{max 1
                    (max (w+1)
                    (max (u+1)
                    (v+1))) max 1 (max (w+1) (max (u+1) (v+1)))}
                    (@pprod.{max (w+1)
                      (max (u+1)
                      (v+1)) max 1 (max (w+1) (max (u+1) (v+1)))}
                      ((λ (a_7 : @list.{w} α),
                        ∀ (a_8 : (∀ (a_10 : α) (a_11 : s), m s)) (a_9 : s),
                        m s) a_6) ih_1)
                    @punit.{max 1 (max (w+1) (max (u+1) (v+1)))}) a_2_0))
              @punit.{max 1 (max (w+1) (max (u+1) (v+1)))} F_1) a_2 a_3)
          (λ (s_1 : s), a_2 a_1_0 s_1)) F_0) a_0 a_1 a F) f s_0),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(monad_fail.cases_on,Vector(Param(l), Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} {C : (∀ (n_0 : @monad_fail.{u v} m), Sort l)}
  (n : @monad_fail.{u v} m)
  (e_1 :
    (∀ (to_monad : @monad.{u v} m)
      (fail : (∀ {a : Type u} (a_0 : @string), m a)),
    C (@monad_fail.mk.{u v} m to_monad fail))),
C n,λ {m : (∀ (a : Type u), Type v)} {C : (∀ (n_0 : @monad_fail.{u v} m), Sort l)}
  (n : @monad_fail.{u v} m)
  (e_1 :
    (∀ (to_monad : @monad.{u v} m)
      (fail : (∀ {a : Type u} (a_0 : @string), m a)),
    C (@monad_fail.mk.{u v} m to_monad fail))),
@monad_fail.rec.{l u v} m C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad_fail.{u v}"

mod: "DefMod(Definition(monad_fail.no_confusion_type,Vector(Param(l), Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} (P : Sort l) (v1 v2 : @monad_fail.{u v} m),
Sort l,λ {m : (∀ (a : Type u), Type v)} (P : Sort l) (v1 v2 : @monad_fail.{u v} m),
@monad_fail.cases_on.{l+1 u v} m (λ (v1_0 : @monad_fail.{u v} m), Sort l) v1
  (λ (to_monad : @monad.{u v} m) (fail : (∀ {a : Type u} (a_0 : @string), m a)),
  @monad_fail.cases_on.{l+1 u v} m (λ (v1_0 : @monad_fail.{u v} m), Sort l) v2
    (λ (to_monad_0 : @monad.{u v} m)
      (fail_0 : (∀ {a_0 : Type u} (a_1 : @string), m a_0)),
    ∀ (a :
        (∀ (to_monad_eq :
            @eq.{(max (u+1) v)+1} (@monad.{u v} m) to_monad to_monad_0)
          (fail_eq :
            @eq.{max (u+2) (max 1 (v+1))}
              (∀ {a_0 : Type u} (a_1 : @string), m a_0) fail fail_0),
        P)),
    P)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad_fail.{u v}"

mod: "DefMod(Definition(monad_fail.no_confusion,Vector(Param(l), Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} {P : Sort l} {v1 v2 : @monad_fail.{u v} m}
  (H12 : @eq.{max (u+2) (v+1)} (@monad_fail.{u v} m) v1 v2),
@monad_fail.no_confusion_type.{l u v} m P v1 v2,λ {m : (∀ (a : Type u), Type v)} {P : Sort l} {v1 v2 : @monad_fail.{u v} m}
  (H12 : @eq.{max (u+2) (v+1)} (@monad_fail.{u v} m) v1 v2),
@eq.rec.{l max (u+2) (v+1)} (@monad_fail.{u v} m) v1
  (λ (a : @monad_fail.{u v} m),
  ∀ (H1a : @eq.{max (u+2) (v+1)} (@monad_fail.{u v} m) v1 a),
  @monad_fail.no_confusion_type.{l u v} m P v1 a)
  (λ (H11 : @eq.{max (u+2) (v+1)} (@monad_fail.{u v} m) v1 v1),
  @monad_fail.cases_on.{l u v} m
    (λ {v1_0 : @monad_fail.{u v} m},
    @monad_fail.no_confusion_type.{l u v} m P v1_0 v1_0) v1
    (λ (to_monad : @monad.{u v} m)
      (fail : (∀ {a_0 : Type u} (a_1 : @string), m a_0))
      (a :
        (∀ (to_monad_eq :
            @eq.{(max (u+1) v)+1} (@monad.{u v} m) to_monad to_monad)
          (fail_eq :
            @eq.{max (u+2) (max 1 (v+1))}
              (∀ {a_0 : Type u} (a_1 : @string), m a_0) fail fail),
        P)),
    a (@eq.refl.{(max (u+1) v)+1} (@monad.{u v} m) to_monad)
      (@eq.refl.{max (u+2) (max 1 (v+1))}
        (∀ {a_0 : Type u} (a_1 : @string), m a_0) fail))) v2 H12 H12,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad_fail.{u v}"

mod: "DefMod(Definition(monad_fail.mk.inj,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} {to_monad : @monad.{u v} m}
  {fail : (∀ {a_0 : Type u} (a_1 : @string), m a_0)}
  {to_monad_0 : @monad.{u v} m}
  {fail_0 : (∀ {a_0 : Type u} (a_1 : @string), m a_0)}
  (a :
    @eq.{max (u+2) (v+1)} (@monad_fail.{u v} m)
      (@monad_fail.mk.{u v} m to_monad fail)
      (@monad_fail.mk.{u v} m to_monad_0 fail_0)),
@and (@eq.{(max (u+1) v)+1} (@monad.{u v} m) to_monad to_monad_0)
  (@eq.{max (u+2) (max 1 (v+1))} (∀ {a_0 : Type u} (a_1 : @string), m a_0) fail
    fail_0),λ {m : (∀ (a_0 : Type u), Type v)} {to_monad : @monad.{u v} m}
  {fail : (∀ {a_0 : Type u} (a_1 : @string), m a_0)}
  {to_monad_0 : @monad.{u v} m}
  {fail_0 : (∀ {a_0 : Type u} (a_1 : @string), m a_0)}
  (a :
    @eq.{max (u+2) (v+1)} (@monad_fail.{u v} m)
      (@monad_fail.mk.{u v} m to_monad fail)
      (@monad_fail.mk.{u v} m to_monad_0 fail_0)),
@monad_fail.no_confusion.{0 u v} m
  (@and (@eq.{(max (u+1) v)+1} (@monad.{u v} m) to_monad to_monad_0)
    (@eq.{max (u+2) (max 1 (v+1))} (∀ {a_0 : Type u} (a_1 : @string), m a_0)
      fail fail_0)) (@monad_fail.mk.{u v} m to_monad fail)
  (@monad_fail.mk.{u v} m to_monad_0 fail_0) a
  (λ (to_monad_eq : @eq.{(max (u+1) v)+1} (@monad.{u v} m) to_monad to_monad_0)
    (fail_eq :
      @eq.{max (u+2) (max 1 (v+1))} (∀ {a_0 : Type u} (a_1 : @string), m a_0)
        fail fail_0),
  @and.intro (@eq.{(max (u+1) v)+1} (@monad.{u v} m) to_monad to_monad_0)
    (@eq.{max (u+2) (max 1 (v+1))} (∀ {a_0 : Type u} (a_1 : @string), m a_0)
      fail fail_0) to_monad_eq fail_eq),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(fin.veq_of_eq,Vector(),∀ {n : @nat} {i j : @fin n} (a : @eq.{1} (@fin n) i j),
@eq.{1} @nat (@fin.val n i) (@fin.val n j),λ {n : @nat} {i j : @fin n} (a : @eq.{1} (@fin n) i j),
@fin.cases_on.{0} n
  (λ {i_0 : @fin n},
  ∀ (a_0 : @eq.{1} (@fin n) i_0 j),
  @eq.{1} @nat (@fin.val n i_0) (@fin.val n j)) i
  (λ (val : @nat) (is_lt : @has_lt.lt.{0} @nat @nat.has_lt val n)
    (a_0 : @eq.{1} (@fin n) (@fin.mk n val is_lt) j),
  @eq.dcases_on.{0 1} (@fin n) (@fin.mk n val is_lt)
    (λ (t_1 : @fin n) (a_1 : @eq.{1} (@fin n) (@fin.mk n val is_lt) t_1),
    ∀ (H_1 : @eq.{1} (@fin n) j t_1)
      (H_2 :
        @heq.{0} (@eq.{1} (@fin n) (@fin.mk n val is_lt) j) a_0
          (@eq.{1} (@fin n) (@fin.mk n val is_lt) t_1) a_1),
    @eq.{1} @nat (@fin.val n (@fin.mk n val is_lt)) (@fin.val n j)) j a_0
    (λ (H_1 : @eq.{1} (@fin n) j (@fin.mk n val is_lt)),
    @eq.rec.{0 1} (@fin n) (@fin.mk n val is_lt)
      (λ {j_0 : @fin n},
      ∀ (a_1 : @eq.{1} (@fin n) (@fin.mk n val is_lt) j_0)
        (H_2 :
          @heq.{0} (@eq.{1} (@fin n) (@fin.mk n val is_lt) j_0) a_1
            (@eq.{1} (@fin n) (@fin.mk n val is_lt) (@fin.mk n val is_lt))
            (@eq.refl.{1} (@fin n) (@fin.mk n val is_lt))),
      @eq.{1} @nat (@fin.val n (@fin.mk n val is_lt)) (@fin.val n j_0))
      (λ (a_1 : @eq.{1} (@fin n) (@fin.mk n val is_lt) (@fin.mk n val is_lt))
        (H_2 :
          @heq.{0}
            (@eq.{1} (@fin n) (@fin.mk n val is_lt) (@fin.mk n val is_lt)) a_1
            (@eq.{1} (@fin n) (@fin.mk n val is_lt) (@fin.mk n val is_lt))
            (@eq.refl.{1} (@fin n) (@fin.mk n val is_lt))),
      @rfl.{1} @nat (@fin.val n (@fin.mk n val is_lt))) j
      (@eq.symm.{1} (@fin n) j (@fin.mk n val is_lt) H_1) a_0)
    (@eq.refl.{1} (@fin n) j)
    (@heq.refl.{0} (@eq.{1} (@fin n) (@fin.mk n val is_lt) j) a_0)) a,0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(fin.decidable_eq._proof_1,Vector(),∀ (n : @nat) (i j : @fin n),
@iff (@eq.{1} @nat (@fin.val n i) (@fin.val n j)) (@eq.{1} (@fin n) i j),λ (n : @nat) (i j : @fin n),
@iff.intro (@eq.{1} @nat (@fin.val n i) (@fin.val n j)) (@eq.{1} (@fin n) i j)
  (@fin.eq_of_veq n i j) (@fin.veq_of_eq n i j),0))"
err: "provingground.interface.UnParsedException: could not parse expression @fin.veq_of_eq"

mod: "DefMod(Definition(fin.decidable_eq,Vector(),∀ (n : @nat), @decidable_eq.{1} (@fin n),λ (n : @nat) (i j : @fin n),
@decidable_of_decidable_of_iff (@eq.{1} @nat (@fin.val n i) (@fin.val n j))
  (@eq.{1} (@fin n) i j) (@nat.decidable_eq (@fin.val n i) (@fin.val n j))
  (@fin.decidable_eq._proof_1 n i j),0))"
err: "provingground.interface.UnParsedException: could not parse expression @fin.decidable_eq._proof_1"

mod: "DefMod(Definition(well_founded.fix_F,Vector(Param(u), Param(v)),∀ {α : Sort u} {r : (∀ (a_0 a_1 : α), Prop)} {C : (∀ (a_0 : α), Sort v)}
  (F : (∀ (x_0 : α) (a_0 : (∀ (y : α) (a_1 : r y x_0), C y)), C x_0)) (x : α)
  (a : @acc.{u} α r x),
C x,λ {α : Sort u} {r : (∀ (a_0 a_1 : α), Prop)} {C : (∀ (a_0 : α), Sort v)}
  (F : (∀ (x_0 : α) (a_0 : (∀ (y : α) (a_1 : r y x_0), C y)), C x_0)) (x : α)
  (a : @acc.{u} α r x),
@acc.rec_on.{v u} α r (λ (x_0 : α), C x_0) x a
  (λ (x_0 : α) (ac : (∀ (y : α) (a_0 : r y x_0), @acc.{u} α r y))
    (ih : (∀ (y : α) (a_0 : r y x_0), C y)),
  F x_0 ih),0))"
err: "provingground.interface.UnParsedException: could not parse expression @acc.rec_on.{v u}"

mod: "DefMod(Definition(well_founded.fix,Vector(Param(u), Param(v)),∀ {α : Sort u} {C : (∀ (a : α), Sort v)} {r : (∀ (a a_0 : α), Prop)}
  (hwf : @well_founded.{u} α r)
  (F : (∀ (x_0 : α) (a : (∀ (y : α) (a_0 : r y x_0), C y)), C x_0)) (x : α),
C x,λ {α : Sort u} {C : (∀ (a : α), Sort v)} {r : (∀ (a a_0 : α), Prop)}
  (hwf : @well_founded.{u} α r)
  (F : (∀ (x_0 : α) (a : (∀ (y : α) (a_0 : r y x_0), C y)), C x_0)) (x : α),
@well_founded.fix_F.{u v} α (λ (y x_0 : α), r y x_0) C F x
  (@well_founded.fix._proof_1.{u} α r hwf x),0))"
err: "provingground.interface.UnParsedException: could not parse expression @well_founded.fix_F.{u v}"

mod: "DefMod(Definition(acc.inv,Vector(Param(u)),∀ {α : Sort u} {r : (∀ (a a_0 : α), Prop)} {x y : α} (h : @acc.{u} α r x)
  (h_0 : r y x),
@acc.{u} α r y,λ {α : Sort u} {r : (∀ (a a_0 : α), Prop)} {x y : α} (h : @acc.{u} α r x)
  (h_0 : r y x),
@acc.rec_on.{0 u} α r (λ (x_0 : α), ∀ (a : r y x_0), @acc.{u} α r y) x h
  (λ (x_0 : α) (ac : (∀ (y_0 : α) (a : r y_0 x_0), @acc.{u} α r y_0))
    (ih : (∀ (y_0 : α) (a : r y_0 x_0) (a_0 : r y y_0), @acc.{u} α r y))
    (h_1 : r y x_0),
  ac y h_1) h_0,0))"
err: "provingground.interface.UnParsedException: could not parse expression @acc.rec_on.{0 u}"

mod: "DefMod(Definition(nat.lt_wf,Vector(),@well_founded.{1} @nat @nat.lt,@well_founded.intro.{1} @nat @nat.lt
  (@nat.rec.{0} (@acc.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt))
    (@acc.intro.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt)
      (@has_zero.zero.{0} @nat @nat.has_zero)
      (λ (n : @nat) (h : @has_lt.lt.{0} @nat @nat.has_lt n @nat.zero),
      @absurd.{0} (@has_lt.lt.{0} @nat @nat.has_lt n @nat.zero)
        (@acc.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt) n) h
        (@nat.not_lt_zero n)))
    (λ (n : @nat) (ih : @acc.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt) n),
    @acc.intro.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt) (@nat.succ n)
      (λ (m : @nat) (h : @has_lt.lt.{0} @nat @nat.has_lt m (@nat.succ n)),
      @or.elim (@eq.{1} @nat m n) (@has_lt.lt.{0} @nat @nat.has_lt m n)
        (@acc.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt) m)
        (@nat.eq_or_lt_of_le m n (@nat.le_of_succ_le_succ m n h))
        (λ (e : @eq.{1} @nat m n),
        @eq.substr.{1} @nat
          (λ (x : @nat), @acc.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt) x) n m
          e ih) (@acc.inv.{1} @nat (@has_lt.lt.{0} @nat @nat.has_lt) n m ih)))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @acc.inv.{1}"

mod: "DefMod(Definition(nat.succ_sub_succ_eq_sub,Vector(),∀ (a b : @nat),
@eq.{1} @nat (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a) (@nat.succ b))
  (@has_sub.sub.{0} @nat @nat.has_sub a b),λ (a b : @nat),
@nat.rec_on.{0}
  (λ (x : @nat),
  @eq.{1} @nat (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a) (@nat.succ x))
    (@has_sub.sub.{0} @nat @nat.has_sub a x)) b
  ((λ (this :
        @eq.{1} @nat
          (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a)
            (@nat.succ @nat.zero))
          (@has_sub.sub.{0} @nat @nat.has_sub a @nat.zero)),
    this)
    (@eq.refl.{1} @nat
      (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a) (@nat.succ @nat.zero))))
  (λ (b_0 : @nat),
  @congr_arg.{1 1} @nat @nat
    (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a) (@nat.succ b_0))
    (@has_sub.sub.{0} @nat @nat.has_sub a b_0) @nat.pred),0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(nat.sub_le,Vector(),∀ (a b : @nat),
@has_le.le.{0} @nat @nat.has_le (@has_sub.sub.{0} @nat @nat.has_sub a b) a,λ (a b : @nat),
@nat.rec_on.{0}
  (λ (x : @nat),
  @has_le.le.{0} @nat @nat.has_le (@has_sub.sub.{0} @nat @nat.has_sub a x) a) b
  (@nat.le_refl
    (@has_sub.sub.{0} @nat @nat.has_sub a
      (@has_zero.zero.{0} @nat @nat.has_zero)))
  (λ (b_0 : @nat),
  @nat.le_trans (@has_sub.sub.{0} @nat @nat.has_sub a (@nat.succ b_0))
    (@has_sub.sub.{0} @nat @nat.has_sub a b_0) a
    (@nat.pred_le (@has_sub.sub.{0} @nat @nat.has_sub a b_0))),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(nat.sub_lt,Vector(),∀ {a b : @nat}
  (a_0 :
    @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) a)
  (a_1 :
    @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) b),
@has_lt.lt.{0} @nat @nat.has_lt (@has_sub.sub.{0} @nat @nat.has_sub a b) a,λ {a b : @nat}
  (a_0 :
    @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) a)
  (a_1 :
    @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) b),
@nat.cases_on.{0}
  (λ {a_2 : @nat},
  ∀ (a_3 :
      @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
        a_2),
  @has_lt.lt.{0} @nat @nat.has_lt (@has_sub.sub.{0} @nat @nat.has_sub a_2 b)
    a_2) a
  (λ (a_2 :
      @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
        @nat.zero),
  @absurd.{0}
    (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
      (@has_zero.zero.{0} @nat @nat.has_zero))
    (@has_lt.lt.{0} @nat @nat.has_lt
      (@has_sub.sub.{0} @nat @nat.has_sub
        (@has_zero.zero.{0} @nat @nat.has_zero) b)
      (@has_zero.zero.{0} @nat @nat.has_zero)) a_2
    (@nat.lt_irrefl (@has_zero.zero.{0} @nat @nat.has_zero)))
  (λ (a_1_0 : @nat)
    (a_2 :
      @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
        (@nat.succ a_1_0)),
  @nat.cases_on.{0}
    (λ {b_0 : @nat},
    ∀ (a_3 :
        @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
          b_0),
    @has_lt.lt.{0} @nat @nat.has_lt
      (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a_1_0) b_0)
      (@nat.succ a_1_0)) b
    (λ (a_3 :
        @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
          @nat.zero),
    @absurd.{0}
      (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
        (@has_zero.zero.{0} @nat @nat.has_zero))
      (@has_lt.lt.{0} @nat @nat.has_lt
        (@has_sub.sub.{0} @nat @nat.has_sub
          (@has_add.add.{0} @nat @nat.has_add a_1_0
            (@has_one.one.{0} @nat @nat.has_one))
          (@has_zero.zero.{0} @nat @nat.has_zero))
        (@has_add.add.{0} @nat @nat.has_add a_1_0
          (@has_one.one.{0} @nat @nat.has_one))) a_3
      (@nat.lt_irrefl (@has_zero.zero.{0} @nat @nat.has_zero)))
    (λ (a_2_0 : @nat)
      (a_3 :
        @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
          (@nat.succ a_2_0)),
    @eq.subst.{1} @nat
      (λ (x : @nat),
      @has_lt.lt.{0} @nat @nat.has_lt x
        (@has_add.add.{0} @nat @nat.has_add a_1_0
          (@has_one.one.{0} @nat @nat.has_one)))
      (@has_sub.sub.{0} @nat @nat.has_sub a_1_0 a_2_0)
      (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a_1_0) (@nat.succ a_2_0))
      (@eq.symm.{1} @nat
        (@has_sub.sub.{0} @nat @nat.has_sub (@nat.succ a_1_0) (@nat.succ a_2_0))
        (@has_sub.sub.{0} @nat @nat.has_sub a_1_0 a_2_0)
        (@nat.succ_sub_succ_eq_sub a_1_0 a_2_0))
      ((λ (this :
            @has_lt.lt.{0} @nat @nat.has_lt
              (@has_sub.sub.{0} @nat @nat.has_sub a_1_0 a_2_0)
              (@nat.succ a_1_0)),
        this)
        (@nat.lt_succ_of_le (@has_sub.sub.{0} @nat @nat.has_sub a_1_0 a_2_0)
          a_1_0 (@nat.sub_le a_1_0 a_2_0)))) a_1) a_0,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.sub_le"

mod: "DefMod(Definition(_private.3910366791.div_rec_lemma,Vector(),∀ {x y : @nat}
  (a :
    @and
      (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
        y) (@has_le.le.{0} @nat @nat.has_le y x)),
@has_lt.lt.{0} @nat @nat.has_lt (@has_sub.sub.{0} @nat @nat.has_sub x y) x,λ {x y : @nat}
  (h :
    @and
      (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
        y) (@has_le.le.{0} @nat @nat.has_le y x)),
@and.rec.{0}
  (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
  (@has_le.le.{0} @nat @nat.has_le y x)
  (@has_lt.lt.{0} @nat @nat.has_lt (@has_sub.sub.{0} @nat @nat.has_sub x y) x)
  (λ (ypos :
      @has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (ylex : @has_le.le.{0} @nat @nat.has_le y x),
  @nat.sub_lt x y
    (@nat.lt_of_lt_of_le (@has_zero.zero.{0} @nat @nat.has_zero) y x ypos ylex)
    ypos) h,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.sub_lt"

mod: "DefMod(Definition(_private.4138750021.div.F,Vector(),∀ (x : @nat)
  (f :
    (∀ (x_0 : @nat) (a : @has_lt.lt.{0} @nat @nat.has_lt x_0 x) (a_0 : @nat),
    @nat)) (y : @nat),
@nat,λ (x : @nat)
  (f :
    (∀ (x_0 : @nat) (a : @has_lt.lt.{0} @nat @nat.has_lt x_0 x) (a_0 : @nat),
    @nat)) (y : @nat),
@dite.{1}
  (@and
    (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (@has_le.le.{0} @nat @nat.has_le y x))
  (@and.decidable
    (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (@has_le.le.{0} @nat @nat.has_le y x)
    (@nat.decidable_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (@nat.decidable_le y x)) @nat
  (λ (h :
      @and
        (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
          y) (@has_le.le.{0} @nat @nat.has_le y x)),
  @has_add.add.{0} @nat @nat.has_add
    (f (@has_sub.sub.{0} @nat @nat.has_sub x y)
      (@_private.3910366791.div_rec_lemma x y h) y)
    (@has_one.one.{0} @nat @nat.has_one))
  (λ (h :
      @not
        (@and
          (@has_lt.lt.{0} @nat @nat.has_lt
            (@has_zero.zero.{0} @nat @nat.has_zero) y)
          (@has_le.le.{0} @nat @nat.has_le y x))),
  @nat.zero),0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_lt"

mod: "DefMod(Definition(nat.div,Vector(),∀ (x a : @nat), @nat,@well_founded.fix.{1 1} @nat (λ (x : @nat), ∀ (a : @nat), @nat) @nat.lt
  @nat.lt_wf @_private.4138750021.div.F,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.4138750021.div.F"

mod: "DefMod(Definition(nat.has_div,Vector(),@has_div.{0} @nat,@has_div.mk.{0} @nat @nat.div,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.div"

mod: "DefMod(Definition(_private.3871569147.mod.F,Vector(),∀ (x : @nat)
  (f :
    (∀ (x_0 : @nat) (a : @has_lt.lt.{0} @nat @nat.has_lt x_0 x) (a_0 : @nat),
    @nat)) (y : @nat),
@nat,λ (x : @nat)
  (f :
    (∀ (x_0 : @nat) (a : @has_lt.lt.{0} @nat @nat.has_lt x_0 x) (a_0 : @nat),
    @nat)) (y : @nat),
@dite.{1}
  (@and
    (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (@has_le.le.{0} @nat @nat.has_le y x))
  (@and.decidable
    (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (@has_le.le.{0} @nat @nat.has_le y x)
    (@nat.decidable_lt (@has_zero.zero.{0} @nat @nat.has_zero) y)
    (@nat.decidable_le y x)) @nat
  (λ (h :
      @and
        (@has_lt.lt.{0} @nat @nat.has_lt (@has_zero.zero.{0} @nat @nat.has_zero)
          y) (@has_le.le.{0} @nat @nat.has_le y x)),
  f (@has_sub.sub.{0} @nat @nat.has_sub x y)
    (@_private.3910366791.div_rec_lemma x y h) y)
  (λ (h :
      @not
        (@and
          (@has_lt.lt.{0} @nat @nat.has_lt
            (@has_zero.zero.{0} @nat @nat.has_zero) y)
          (@has_le.le.{0} @nat @nat.has_le y x))),
  x),0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.decidable_lt"

mod: "DefMod(Definition(nat.mod,Vector(),∀ (x a : @nat), @nat,@well_founded.fix.{1 1} @nat (λ (x : @nat), ∀ (a : @nat), @nat) @nat.lt
  @nat.lt_wf @_private.3871569147.mod.F,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.3871569147.mod.F"

mod: "DefMod(Definition(nat.has_mod,Vector(),@has_mod.{0} @nat,@has_mod.mk.{0} @nat @nat.mod,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.mod"

mod: "DefMod(Definition(string.singleton,Vector(),∀ (c : @char), @string,λ (c : @char), @string.str @string.empty c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @char"

mod: "DefMod(Definition(hex_digit_repr,Vector(),∀ (n : @nat), @string,λ (n : @nat), @string.singleton (@nat.digit_char n),0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.digit_char"

mod: "DefMod(Definition(option_t.monad._proof_1,Vector(Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] (α β : Type u),
@eq.{max (u+1) (v+1)}
  (∀ (a : α) (a_0 : @option_t.{u v} m inst_1 β), @option_t.{u v} m inst_1 α)
  (@has_map.map_const.{u v} (@option_t.{u v} m inst_1)
    (@has_map.mk.{u v} (@option_t.{u v} m inst_1)
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 α_0 β_0 x
        (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
          (@option_t_return.{u v} m inst_1 β_0) f))
      (λ (α_0 β_0 : Type u),
      @function.comp.{u+1 u+1 v+1} α_0 (∀ (a : β_0), α_0)
        (∀ (a : @option_t.{u v} m inst_1 β_0), @option_t.{u v} m inst_1 α_0)
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f)) β_0 α_0)
        (@function.const.{u+1 u+1} α_0 β_0))) α β)
  (@has_map.map_const.{u v} (@option_t.{u v} m inst_1)
    (@has_map.mk.{u v} (@option_t.{u v} m inst_1)
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 α_0 β_0 x
        (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
          (@option_t_return.{u v} m inst_1 β_0) f))
      (λ (α_0 β_0 : Type u),
      @function.comp.{u+1 u+1 v+1} α_0 (∀ (a : β_0), α_0)
        (∀ (a : @option_t.{u v} m inst_1 β_0), @option_t.{u v} m inst_1 α_0)
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f)) β_0 α_0)
        (@function.const.{u+1 u+1} α_0 β_0))) α β),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] (α β : Type u),
@rfl.{max (u+1) (v+1)}
  (∀ (a : α) (a_0 : @option_t.{u v} m inst_1 β), @option_t.{u v} m inst_1 α)
  (@has_map.map_const.{u v} (@option_t.{u v} m inst_1)
    (@has_map.mk.{u v} (@option_t.{u v} m inst_1)
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
        (x : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 α_0 β_0 x
        (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
          (@option_t_return.{u v} m inst_1 β_0) f))
      (λ (α_0 β_0 : Type u),
      @function.comp.{u+1 u+1 v+1} α_0 (∀ (a : β_0), α_0)
        (∀ (a : @option_t.{u v} m inst_1 β_0), @option_t.{u v} m inst_1 α_0)
        ((λ (α_1 β_1 : Type u) (f : (∀ (a : α_1), β_1))
            (x : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f)) β_0 α_0)
        (@function.const.{u+1 u+1} α_0 β_0))) α β),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(occurrences_repr.equations._eqn_2,Vector(),∀ (l : @list.{0} @nat),
@eq.{1} @string (@occurrences_repr (@occurrences.pos l))
  (@repr.{0} (@list.{0} @nat) (@list.has_repr.{0} @nat @nat.has_repr) l),@occurrences_repr._main.equations._eqn_2,0))"
err: "provingground.interface.UnParsedException: could not parse expression @occurrences_repr._main.equations._eqn_2"

mod: "DefMod(Definition(sigma.no_confusion,Vector(Param(l), Param(u), Param(v)),∀ {α : Type u} {β : (∀ (a : α), Type v)} {P : Sort l} {v1 v2 : @sigma.{u v} α β}
  (H12 : @eq.{max (u+1) (v+1)} (@sigma.{u v} α β) v1 v2),
@sigma.no_confusion_type.{l u v} α β P v1 v2,λ {α : Type u} {β : (∀ (a : α), Type v)} {P : Sort l} {v1 v2 : @sigma.{u v} α β}
  (H12 : @eq.{max (u+1) (v+1)} (@sigma.{u v} α β) v1 v2),
@eq.rec.{l max (u+1) (v+1)} (@sigma.{u v} α β) v1
  (λ (a : @sigma.{u v} α β),
  ∀ (H1a : @eq.{max (u+1) (v+1)} (@sigma.{u v} α β) v1 a),
  @sigma.no_confusion_type.{l u v} α β P v1 a)
  (λ (H11 : @eq.{max (u+1) (v+1)} (@sigma.{u v} α β) v1 v1),
  @sigma.cases_on.{l u v} α β
    (λ {v1_0 : @sigma.{u v} α β},
    @sigma.no_confusion_type.{l u v} α β P v1_0 v1_0) v1
    (λ (fst : α) (snd : β fst)
      (a :
        (∀ (fst_eq : @eq.{u+1} α fst fst)
          (snd_eq : @heq.{v+1} (β fst) snd (β fst) snd),
        P)),
    a (@eq.refl.{u+1} α fst) (@heq.refl.{v+1} (β fst) snd))) v2 H12 H12,0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(sigma.mk.inj,Vector(Param(u), Param(v)),∀ {α : Type u} {β : (∀ (a_0 : α), Type v)} {fst : α} {snd : β fst} {fst_0 : α}
  {snd_0 : β fst_0}
  (a :
    @eq.{max (u+1) (v+1)} (@sigma.{u v} α β) (@sigma.mk.{u v} α β fst snd)
      (@sigma.mk.{u v} α β fst_0 snd_0)),
@and (@eq.{u+1} α fst fst_0) (@heq.{v+1} (β fst) snd (β fst_0) snd_0),λ {α : Type u} {β : (∀ (a_0 : α), Type v)} {fst : α} {snd : β fst} {fst_0 : α}
  {snd_0 : β fst_0}
  (a :
    @eq.{max (u+1) (v+1)} (@sigma.{u v} α β) (@sigma.mk.{u v} α β fst snd)
      (@sigma.mk.{u v} α β fst_0 snd_0)),
@sigma.no_confusion.{0 u v} α β
  (@and (@eq.{u+1} α fst fst_0) (@heq.{v+1} (β fst) snd (β fst_0) snd_0))
  (@sigma.mk.{u v} α β fst snd) (@sigma.mk.{u v} α β fst_0 snd_0) a
  (λ (fst_eq : @eq.{u+1} α fst fst_0)
    (snd_eq : @heq.{v+1} (β fst) snd (β fst_0) snd_0),
  @and.intro (@eq.{u+1} α fst fst_0) (@heq.{v+1} (β fst) snd (β fst_0) snd_0)
    fst_eq snd_eq),0))"
err: "provingground.interface.UnParsedException: could not parse expression @sigma.no_confusion.{0 u v}"

mod: "DefMod(Definition(group.cases_on,Vector(Param(l), Param(u)),∀ {α : Type u} {C : (∀ (n_0 : @group.{u} α), Sort l)} (n : @group.{u} α)
  (e_1 :
    (∀ (mul : (∀ (a a_0 : α), α))
      (mul_assoc :
        (∀ (a b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
      (one_mul :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
      (mul_one :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
            (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
      (inv : (∀ (a : α), α))
      (mul_left_inv :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
    C (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv))),
C n,λ {α : Type u} {C : (∀ (n_0 : @group.{u} α), Sort l)} (n : @group.{u} α)
  (e_1 :
    (∀ (mul : (∀ (a a_0 : α), α))
      (mul_assoc :
        (∀ (a b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
      (one_mul :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
      (mul_one :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
            (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
      (inv : (∀ (a : α), α))
      (mul_left_inv :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
    C (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv))),
@group.rec.{l u} α C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.no_confusion_type,Vector(Param(l), Param(u)),∀ {α : Type u} (P : Sort l) (v1 v2 : @group.{u} α), Sort l,λ {α : Type u} (P : Sort l) (v1 v2 : @group.{u} α),
@group.cases_on.{l+1 u} α (λ (v1_0 : @group.{u} α), Sort l) v1
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))),
  @group.cases_on.{l+1 u} α (λ (v1_0 : @group.{u} α), Sort l) v2
    (λ (mul_0 : (∀ (a_0 a_1 : α), α))
      (mul_assoc_0 :
        (∀ (a_0 b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0 b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) b c)))) (one_0 : α)
      (one_mul_0 :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@semigroup.mk.{u} α mul_0 mul_assoc_0))
            (@has_one.one.{u} α (@has_one.mk.{u} α one_0)) a_0) a_0))
      (mul_one_0 :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@semigroup.mk.{u} α mul_0 mul_assoc_0)) a_0
            (@has_one.one.{u} α (@has_one.mk.{u} α one_0))) a_0))
      (inv_0 : (∀ (a_0 : α), α))
      (mul_left_inv_0 :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv_0) a_0) a_0)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0
                mul_one_0))))),
    ∀ (a :
        (∀ (mul_eq : @eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul_0)
          (one_eq : @eq.{u+1} α one one_0)
          (inv_eq : @eq.{u+1} (∀ (a_0 : α), α) inv inv_0),
        P)),
    P)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.no_confusion,Vector(Param(l), Param(u)),∀ {α : Type u} {P : Sort l} {v1 v2 : @group.{u} α}
  (H12 : @eq.{u+1} (@group.{u} α) v1 v2),
@group.no_confusion_type.{l u} α P v1 v2,λ {α : Type u} {P : Sort l} {v1 v2 : @group.{u} α}
  (H12 : @eq.{u+1} (@group.{u} α) v1 v2),
@eq.rec.{l u+1} (@group.{u} α) v1
  (λ (a : @group.{u} α),
  ∀ (H1a : @eq.{u+1} (@group.{u} α) v1 a),
  @group.no_confusion_type.{l u} α P v1 a)
  (λ (H11 : @eq.{u+1} (@group.{u} α) v1 v1),
  @group.cases_on.{l u} α
    (λ {v1_0 : @group.{u} α}, @group.no_confusion_type.{l u} α P v1_0 v1_0) v1
    (λ (mul : (∀ (a_0 a_1 : α), α))
      (mul_assoc :
        (∀ (a_0 b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0 b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
      (one_mul :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            (@has_one.one.{u} α (@has_one.mk.{u} α one)) a_0) a_0))
      (mul_one :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            a_0 (@has_one.one.{u} α (@has_one.mk.{u} α one))) a_0))
      (inv : (∀ (a_0 : α), α))
      (mul_left_inv :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a_0) a_0)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))))
      (a :
        (∀ (mul_eq : @eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul)
          (one_eq : @eq.{u+1} α one one)
          (inv_eq : @eq.{u+1} (∀ (a_0 : α), α) inv inv),
        P)),
    a (@eq.refl.{u+1} (∀ (a_0 a_1 : α), α) mul) (@eq.refl.{u+1} α one)
      (@eq.refl.{u+1} (∀ (a_0 : α), α) inv))) v2 H12 H12,0))"
err: "provingground.interface.UnParsedException: could not parse expression @group.{u}"

mod: "DefMod(Definition(group.mk.inj,Vector(Param(u)),∀ {α : Type u} {mul : (∀ (a_0 a_1 : α), α)}
  {mul_assoc :
    (∀ (a_0 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))} {one : α}
  {one_mul :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
        (@has_one.one.{u} α (@has_one.mk.{u} α one)) a_0) a_0)}
  {mul_one :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a_0
        (@has_one.one.{u} α (@has_one.mk.{u} α one))) a_0)}
  {inv : (∀ (a_0 : α), α)}
  {mul_left_inv :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a_0) a_0)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))}
  {mul_0 : (∀ (a_0 a_1 : α), α)}
  {mul_assoc_0 :
    (∀ (a_0 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) b c)))} {one_0 : α}
  {one_mul_0 :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        (@has_one.one.{u} α (@has_one.mk.{u} α one_0)) a_0) a_0)}
  {mul_one_0 :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        a_0 (@has_one.one.{u} α (@has_one.mk.{u} α one_0))) a_0)}
  {inv_0 : (∀ (a_0 : α), α)}
  {mul_left_inv_0 :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv_0) a_0) a_0)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0))))}
  (a :
    @eq.{u+1} (@group.{u} α)
      (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv)
      (@group.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0
        mul_left_inv_0)),
@and (@eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul_0)
  (@and (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_0 : α), α) inv inv_0)),λ {α : Type u} {mul : (∀ (a_0 a_1 : α), α)}
  {mul_assoc :
    (∀ (a_0 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))} {one : α}
  {one_mul :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
        (@has_one.one.{u} α (@has_one.mk.{u} α one)) a_0) a_0)}
  {mul_one :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a_0
        (@has_one.one.{u} α (@has_one.mk.{u} α one))) a_0)}
  {inv : (∀ (a_0 : α), α)}
  {mul_left_inv :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a_0) a_0)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))}
  {mul_0 : (∀ (a_0 a_1 : α), α)}
  {mul_assoc_0 :
    (∀ (a_0 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) b c)))} {one_0 : α}
  {one_mul_0 :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        (@has_one.one.{u} α (@has_one.mk.{u} α one_0)) a_0) a_0)}
  {mul_one_0 :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        a_0 (@has_one.one.{u} α (@has_one.mk.{u} α one_0))) a_0)}
  {inv_0 : (∀ (a_0 : α), α)}
  {mul_left_inv_0 :
    (∀ (a_0 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv_0) a_0) a_0)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0))))}
  (a :
    @eq.{u+1} (@group.{u} α)
      (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv)
      (@group.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0
        mul_left_inv_0)),
@group.no_confusion.{0 u} α
  (@and (@eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul_0)
    (@and (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_0 : α), α) inv inv_0)))
  (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv)
  (@group.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0
    mul_left_inv_0) a
  (λ (mul_eq : @eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul_0)
    (one_eq : @eq.{u+1} α one one_0)
    (inv_eq : @eq.{u+1} (∀ (a_0 : α), α) inv inv_0),
  @and.intro (@eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul_0)
    (@and (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_0 : α), α) inv inv_0)) mul_eq
    (@and.intro (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_0 : α), α) inv inv_0)
      one_eq inv_eq)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.to_semigroup.{u}"

mod: "DefMod(Definition(group.mk.inj_arrow,Vector(Param(l), Param(u)),∀ {α : Type u} {mul : (∀ (a_1 a_2 : α), α)}
  {mul_assoc :
    (∀ (a_1 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_1 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_1
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))} {one : α}
  {one_mul :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
        (@has_one.one.{u} α (@has_one.mk.{u} α one)) a_1) a_1)}
  {mul_one :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a_1
        (@has_one.one.{u} α (@has_one.mk.{u} α one))) a_1)}
  {inv : (∀ (a_1 : α), α)}
  {mul_left_inv :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a_1) a_1)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))}
  {mul_0 : (∀ (a_1 a_2 : α), α)}
  {mul_assoc_0 :
    (∀ (a_1 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_1 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_1
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) b c)))} {one_0 : α}
  {one_mul_0 :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        (@has_one.one.{u} α (@has_one.mk.{u} α one_0)) a_1) a_1)}
  {mul_one_0 :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        a_1 (@has_one.one.{u} α (@has_one.mk.{u} α one_0))) a_1)}
  {inv_0 : (∀ (a_1 : α), α)}
  {mul_left_inv_0 :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv_0) a_1) a_1)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0))))}
  (a :
    @eq.{u+1} (@group.{u} α)
      (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv)
      (@group.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0
        mul_left_inv_0)) {{P : Sort l}}
  (a_0 :
    (∀ (a_1 : @eq.{u+1} (∀ (a_4 a_5 : α), α) mul mul_0)
      (a_2 : @eq.{u+1} α one one_0)
      (a_3 : @eq.{u+1} (∀ (a_4 : α), α) inv inv_0),
    P)),
P,λ {α : Type u} {mul : (∀ (a_1 a_2 : α), α)}
  {mul_assoc :
    (∀ (a_1 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_1 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_1
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))} {one : α}
  {one_mul :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
        (@has_one.one.{u} α (@has_one.mk.{u} α one)) a_1) a_1)}
  {mul_one :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a_1
        (@has_one.one.{u} α (@has_one.mk.{u} α one))) a_1)}
  {inv : (∀ (a_1 : α), α)}
  {mul_left_inv :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a_1) a_1)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one))))}
  {mul_0 : (∀ (a_1 a_2 : α), α)}
  {mul_assoc_0 :
    (∀ (a_1 b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_1 b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_1
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) b c)))} {one_0 : α}
  {one_mul_0 :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        (@has_one.one.{u} α (@has_one.mk.{u} α one_0)) a_1) a_1)}
  {mul_one_0 :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul_0 mul_assoc_0))
        a_1 (@has_one.one.{u} α (@has_one.mk.{u} α one_0))) a_1)}
  {inv_0 : (∀ (a_1 : α), α)}
  {mul_left_inv_0 :
    (∀ (a_1 : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv_0) a_1) a_1)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0))))}
  (a :
    @eq.{u+1} (@group.{u} α)
      (@group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv)
      (@group.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0
        mul_left_inv_0)) {{P : Sort l}}
  (a_0 :
    (∀ (a_1 : @eq.{u+1} (∀ (a_4 a_5 : α), α) mul mul_0)
      (a_2 : @eq.{u+1} α one one_0)
      (a_3 : @eq.{u+1} (∀ (a_4 : α), α) inv inv_0),
    P)),
a_0
  (@and.elim_left (@eq.{u+1} (∀ (a_1 a_2 : α), α) mul mul_0)
    (@and (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_1 : α), α) inv inv_0))
    (@group.mk.inj.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv
      mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0 mul_left_inv_0 a))
  (@and.elim_left (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_1 : α), α) inv inv_0)
    (@and.elim_right (@eq.{u+1} (∀ (a_1 a_2 : α), α) mul mul_0)
      (@and (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_1 : α), α) inv inv_0))
      (@group.mk.inj.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv
        mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0 mul_left_inv_0 a)))
  (@and.elim_right (@eq.{u+1} α one one_0)
    (@eq.{u+1} (∀ (a_1 : α), α) inv inv_0)
    (@and.elim_right (@eq.{u+1} (∀ (a_1 a_2 : α), α) mul mul_0)
      (@and (@eq.{u+1} α one one_0) (@eq.{u+1} (∀ (a_1 : α), α) inv inv_0))
      (@group.mk.inj.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv
        mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0 inv_0 mul_left_inv_0 a))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.to_semigroup.{u}"

mod: "DefMod(Definition(list.decidable_mem,Vector(Param(u)),∀ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (a : α) (l : @list.{u} α),
@decidable (@has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) a l),λ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (a : α),
@list.decidable_mem._main.{u} α inst_1 a,0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.decidable_mem._main.{u}"

mod: "DefMod(Definition(list.inter,Vector(Param(u)),∀ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (l l_0 : @list.{u} α),
@list.{u} α,λ {α : Type u} [inst_1 : @decidable_eq.{u+1} α] (l l_0 : @list.{u} α),
@list.filter.{u} α
  (λ (x : α), @has_mem.mem.{u u} α (@list.{u} α) (@list.has_mem.{u} α) x l_0)
  (λ (a : α), @list.decidable_mem.{u} α (λ (a_0 b : α), inst_1 a_0 b) a l_0) l,0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.decidable_mem.{u}"

mod: "DefMod(Definition(list.has_inter,Vector(Param(u)),∀ {α : Type u} [inst_1 : @decidable_eq.{u+1} α], @has_inter.{u} (@list.{u} α),λ {α : Type u} [inst_1 : @decidable_eq.{u+1} α],
@has_inter.mk.{u} (@list.{u} α) (@list.inter.{u} α (λ (a b : α), inst_1 a b)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.inter.{u}"

mod: "DefMod(Definition(tactic.simp_config.has_sizeof_inst,Vector(),@has_sizeof.{1} @tactic.simp_config,@has_sizeof.mk.{1} @tactic.simp_config @tactic.simp_config.sizeof,0))"
err: "provingground.interface.UnParsedException: could not parse expression @tactic.simp_config.sizeof"

mod: "DefMod(Definition(tactic.simp_intros_config.has_sizeof_inst,Vector(),@has_sizeof.{1} @tactic.simp_intros_config,@has_sizeof.mk.{1} @tactic.simp_intros_config @tactic.simp_intros_config.sizeof,0))"
err: "provingground.interface.UnParsedException: could not parse expression @tactic.simp_intros_config.sizeof"

mod: "DefMod(Definition(has_to_string.to_string,Vector(Param(u)),∀ {α : Type u} [c : @has_to_string.{u} α] (a : α), @string,λ (α : Type u) [c : @has_to_string.{u} α],
@has_to_string.rec.{max (u+1) 1 u} α
  (λ [c_0 : @has_to_string.{u} α], ∀ (a : α), @string)
  (λ (to_string : (∀ (a : α), @string)), to_string) c,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_to_string.{u}"

mod: "DefMod(Definition(to_string,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_to_string.{u} α] (a : α), @string,λ {α : Type u} [inst_1 : @has_to_string.{u} α],
@has_to_string.to_string.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_to_string.{u}"

mod: "DefMod(Definition(has_coe_to_sort.mk.sizeof_spec,Vector(Param(u), Param(v)),∀ (a : Sort u) (S : Sort v) (coe : (∀ (a_0 : a), S)),
@eq.{1} @nat
  (@has_coe_to_sort.sizeof.{u v} a (@has_coe_to_sort.mk.{u v} a S coe))
  (@has_one.one.{0} @nat @nat.has_one),λ (a : Sort u) (S : Sort v) (coe : (∀ (a_0 : a), S)),
@eq.refl.{1} @nat
  (@has_coe_to_sort.sizeof.{u v} a (@has_coe_to_sort.mk.{u v} a S coe)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @has_coe_to_sort.sizeof.{u v}"

mod: "DefMod(Definition(neg_add_cancel_left,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@eq.{u+1} α
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1)))
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))) a b)) b,λ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@eq.mpr.{0}
  (@eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))
      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
  (@eq.{u+1} α
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1)))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b) b)
  (@id_locked.{0}
    (@eq.{1} Prop
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b)
        b))
    (@eq.rec.{0 u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b))
      (λ (a_0 : α),
      @eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
        (@eq.{u+1} α a_0 b))
      (@eq.refl.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)) b))
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b)
      (@eq.symm.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b))
        (@add_assoc.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a b))))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b) b)
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) b) b)
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a) b)
          b)
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b) b))
      (@eq.rec.{0 u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
              b) b)
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a_0 b) b))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a) a)
              b) b))
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@add_left_neg.{u} α inst_1 a)))
    (@eq.mpr.{0}
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) b) b) (@eq.{u+1} α b b)
      (@id_locked.{0}
        (@eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b) b)
          (@eq.{u+1} α b b))
        (@eq.rec.{0 u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b)
          (λ (a_0 : α),
          @eq.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b) b)
            (@eq.{u+1} α a_0 b))
          (@eq.refl.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b) b)) b
          (@zero_add.{u} α (@add_group.to_add_monoid.{u} α inst_1) b)))
      (@eq.refl.{u+1} α b))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(add_group.add_left_cancel,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] {a b c : α}
  (h :
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a c)),
@eq.{u+1} α b c,λ {α : Type u} [inst_1 : @add_group.{u} α] {a b c : α}
  (h :
    @eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a b)
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a c)),
(λ (this :
      @eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)) b),
  @eq.mpr.{0} (@eq.{u+1} α b c) (@eq.{u+1} α b b)
    (@id_locked.{0} (@eq.{1} Prop (@eq.{u+1} α b c) (@eq.{u+1} α b b))
      (@eq.rec.{0 u+1} α c
        (λ (a_0 : α), @eq.{1} Prop (@eq.{u+1} α b c) (@eq.{u+1} α b a_0))
        (@eq.refl.{1} Prop (@eq.{u+1} α b c)) b
        (@eq.mp.{0}
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
          (@eq.{u+1} α c b)
          ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
              (e_2 : @eq.{u+1} α a_2 a_3),
            @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
              (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
                (@eq.{u+1} α) e_1) e_2)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)) c
            (@eq.trans.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a b))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a c)) c
              ((λ [c_0 : @has_add.{u} α] (a_0 a_1 : α)
                  (e_2 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
                  (e_3 : @eq.{u+1} α a_2 a_3),
                @congr.{u+1 u+1} α α (@has_add.add.{u} α c_0 a_0)
                  (@has_add.add.{u} α c_0 a_1) a_2 a_3
                  (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                    (@has_add.add.{u} α c_0) e_2) e_3)
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
                (@eq.refl.{u+1} α
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a b)
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a c) h)
              (@neg_add_cancel_left.{u} α inst_1 a c)) b b (@eq.refl.{u+1} α b))
          this))) (@eq.refl.{u+1} α b))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)) b) @true
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)) b) @true)
      (@eq.trans.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)) b)
        (@eq.{u+1} α b b) @true
        ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
            (e_2 : @eq.{u+1} α a_2 a_3),
          @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
            (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
              (@eq.{u+1} α) e_1) e_2)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)) b
          (@neg_add_cancel_left.{u} α inst_1 a b) b b (@eq.refl.{u+1} α b))
        (@propext (@eq.{u+1} α b b) @true (@eq_self_iff_true.{u+1} α b))))
    @trivial),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(timeit,Vector(Param(u)),∀ {α : Type u} (s : @string) (f : @thunk.{u} α), α,λ {α : Type u} (s : @string) (f : @thunk.{u} α), f @unit.star,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(timeit.equations._eqn_1,Vector(Param(u)),∀ {α : Type u} (s : @string) (f : @thunk.{u} α),
@eq.{u+1} α (@timeit.{u} α s f) (f @unit.star),λ {α : Type u} (s : @string) (f : @thunk.{u} α),
@eq.refl.{u+1} α (@timeit.{u} α s f),0))"
err: "provingground.interface.UnParsedException: could not parse expression @string"

mod: "DefMod(Definition(list.mmap'._main,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type u}
  {β : Type 0} (f : (∀ (a_0 : α), m β)) (a : @list.{u} α),
m @unit,λ {m : (∀ (a_0 : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type u}
  {β : Type 0} (f : (∀ (a_0 : α), m β)) (a : @list.{u} α),
@list.brec_on.{v+1 u} α (λ (a_0 : @list.{u} α), m @unit) a
  (λ (a_0 : @list.{u} α)
    (F : @list.below.{v+1 u} α (λ (a_1 : @list.{u} α), m @unit) a_0),
  (λ (a_1 : @list.{u} α)
      (F_0 : @list.below.{v+1 u} α (λ (a_2 : @list.{u} α), m @unit) a_1),
    @list.cases_on.{max 1 (v+1) u} α
      (λ (a_2 : @list.{u} α),
      ∀ (F_1 : @list.below.{v+1 u} α (λ (a_3 : @list.{u} α), m @unit) a_2),
      m @unit) a_1
      (λ (F_1 :
          @list.below.{v+1 u} α (λ (a_2 : @list.{u} α), m @unit)
            (@list.nil.{u} α)),
      @return.{0 v} m inst_1 @unit @unit.star)
      (λ (a_2 : α) (a_1_0 : @list.{u} α)
        (F_1 :
          @list.below.{v+1 u} α (λ (a_3 : @list.{u} α), m @unit)
            (@list.cons.{u} α a_2 a_1_0)),
      @has_bind.and_then.{0 v} β @unit m (@monad.to_has_bind.{0 v} m inst_1)
        (f a_2)
        (@pprod.fst.{v+1 max 1 (v+1)} ((λ (a_3 : @list.{u} α), m @unit) a_1_0)
          (@list.rec.{(max 1 (v+1))+1 u} α
            (λ (n : @list.{u} α), Sort (max 1 (v+1))) @punit.{max 1 (v+1)}
            (λ (a_3 : α) (a_4 : @list.{u} α) (ih_1 : Sort (max 1 (v+1))),
            @pprod.{max 1 (v+1) max 1 (v+1)}
              (@pprod.{v+1 max 1 (v+1)} ((λ (a_5 : @list.{u} α), m @unit) a_4)
                ih_1) @punit.{max 1 (v+1)}) a_1_0)
          (@pprod.fst.{max 1 (v+1) max 1 (v+1)}
            (@pprod.{v+1 max 1 (v+1)} ((λ (a_3 : @list.{u} α), m @unit) a_1_0)
              (@list.rec.{(max 1 (v+1))+1 u} α
                (λ (n : @list.{u} α), Sort (max 1 (v+1))) @punit.{max 1 (v+1)}
                (λ (a_3 : α) (a_4 : @list.{u} α) (ih_1 : Sort (max 1 (v+1))),
                @pprod.{max 1 (v+1) max 1 (v+1)}
                  (@pprod.{v+1 max 1 (v+1)}
                    ((λ (a_5 : @list.{u} α), m @unit) a_4) ih_1)
                  @punit.{max 1 (v+1)}) a_1_0)) @punit.{max 1 (v+1)} F_1))) F_0)
    a_0 F),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 v}"

mod: "DefMod(Definition(list.mmap',Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type u}
  {β : Type 0} (f : (∀ (a_0 : α), m β)) (a : @list.{u} α),
m @unit,λ {m : (∀ (a : Type 0), Type v)} [inst_1 : @monad.{0 v} m] {α : Type u}
  {β : Type 0} (f : (∀ (a : α), m β)),
@list.mmap'._main.{u v} m inst_1 α β f,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{0 v}"

mod: "DefMod(Definition(subrelation.accessible.equations._eqn_1,Vector(Param(u)),∀ {α : Sort u} {r Q : (∀ (a_0 a_1 : α), Prop)} (h : @subrelation.{u} α Q r)
  {a : α} (ac : @acc.{u} α r a),
@eq.{0} (@acc.{u} α Q a) (@subrelation.accessible.{u} α r Q h a ac)
  (@acc.rec_on.{0 u} α r (λ (x : α), @acc.{u} α Q x) a ac
    (λ (x : α) (ax : (∀ (y : α) (a_0 : r y x), @acc.{u} α r y))
      (ih : (∀ (y : α) (a_0 : r y x), @acc.{u} α Q y)),
    @acc.intro.{u} α Q x (λ (y : α) (lt : Q y x), ih y (h y x lt)))),λ {α : Sort u} {r Q : (∀ (a_0 a_1 : α), Prop)} (h : @subrelation.{u} α Q r)
  {a : α} (ac : @acc.{u} α r a),
@eq.refl.{0} (@acc.{u} α Q a) (@subrelation.accessible.{u} α r Q h a ac),0))"
err: "provingground.interface.UnParsedException: could not parse expression @subrelation.accessible.{u}"

mod: "IndMod(InductiveType(comm_group,Vector(Param(u)),∀ (α : Type u), Type u),1,Vector((comm_group.mk,∀ {α : Type u} (mul : (∀ (a a_0 : α), α))
  (mul_assoc :
    (∀ (a b c : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
      (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
  (one_mul :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
        (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
  (mul_one :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
        (@has_one.one.{u} α (@has_one.mk.{u} α one))) a)) (inv : (∀ (a : α), α))
  (mul_left_inv :
    (∀ (a : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α
          (@monoid.to_semigroup.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
        (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
      (@has_one.one.{u} α
        (@monoid.to_has_one.{u} α
          (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))))
  (mul_comm :
    (∀ (a b : α),
    @eq.{u+1} α
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a b)
      (@has_mul.mul.{u} α
        (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
        a))),
@comm_group.{u} α)))"
err: "provingground.interface.UnParsedException: could not parse expression @monoid.to_semigroup.{u}"

mod: "DefMod(Definition(comm_group.cases_on,Vector(Param(l), Param(u)),∀ {α : Type u} {C : (∀ (n_0 : @comm_group.{u} α), Sort l)}
  (n : @comm_group.{u} α)
  (e_1 :
    (∀ (mul : (∀ (a a_0 : α), α))
      (mul_assoc :
        (∀ (a b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
      (one_mul :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
      (mul_one :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
            (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
      (inv : (∀ (a : α), α))
      (mul_left_inv :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))))
      (mul_comm :
        (∀ (a b : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
            b)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
            a))),
    C
      (@comm_group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv
        mul_comm))),
C n,λ {α : Type u} {C : (∀ (n_0 : @comm_group.{u} α), Sort l)}
  (n : @comm_group.{u} α)
  (e_1 :
    (∀ (mul : (∀ (a a_0 : α), α))
      (mul_assoc :
        (∀ (a b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
      (one_mul :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
      (mul_one :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
            (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
      (inv : (∀ (a : α), α))
      (mul_left_inv :
        (∀ (a : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))))
      (mul_comm :
        (∀ (a b : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
            b)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
            a))),
    C
      (@comm_group.mk.{u} α mul mul_assoc one one_mul mul_one inv mul_left_inv
        mul_comm))),
@comm_group.rec.{l u} α C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @comm_group.{u}"

mod: "DefMod(Definition(comm_group.no_confusion_type,Vector(Param(l), Param(u)),∀ {α : Type u} (P : Sort l) (v1 v2 : @comm_group.{u} α), Sort l,λ {α : Type u} (P : Sort l) (v1 v2 : @comm_group.{u} α),
@comm_group.cases_on.{l+1 u} α (λ (v1_0 : @comm_group.{u} α), Sort l) v1
  (λ (mul : (∀ (a a_0 : α), α))
    (mul_assoc :
      (∀ (a b c : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a b) c)
        (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
    (one_mul :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
          (@has_one.one.{u} α (@has_one.mk.{u} α one)) a) a))
    (mul_one :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a
          (@has_one.one.{u} α (@has_one.mk.{u} α one))) a))
    (inv : (∀ (a : α), α))
    (mul_left_inv :
      (∀ (a : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α
            (@monoid.to_semigroup.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
          (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a) a)
        (@has_one.one.{u} α
          (@monoid.to_has_one.{u} α
            (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))))
    (mul_comm :
      (∀ (a b : α),
      @eq.{u+1} α
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) a b)
        (@has_mul.mul.{u} α
          (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
          a))),
  @comm_group.cases_on.{l+1 u} α (λ (v1_0 : @comm_group.{u} α), Sort l) v2
    (λ (mul_0 : (∀ (a_0 a_1 : α), α))
      (mul_assoc_0 :
        (∀ (a_0 b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0 b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) a_0
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul_0) b c)))) (one_0 : α)
      (one_mul_0 :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@semigroup.mk.{u} α mul_0 mul_assoc_0))
            (@has_one.one.{u} α (@has_one.mk.{u} α one_0)) a_0) a_0))
      (mul_one_0 :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@semigroup.mk.{u} α mul_0 mul_assoc_0)) a_0
            (@has_one.one.{u} α (@has_one.mk.{u} α one_0))) a_0))
      (inv_0 : (∀ (a_0 : α), α))
      (mul_left_inv_0 :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv_0) a_0) a_0)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul_0 mul_assoc_0 one_0 one_mul_0 mul_one_0)))))
      (mul_comm_0 :
        (∀ (a_0 b : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@semigroup.mk.{u} α mul_0 mul_assoc_0)) a_0 b)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@semigroup.mk.{u} α mul_0 mul_assoc_0)) b a_0))),
    ∀ (a :
        (∀ (mul_eq : @eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul_0)
          (one_eq : @eq.{u+1} α one one_0)
          (inv_eq : @eq.{u+1} (∀ (a_0 : α), α) inv inv_0),
        P)),
    P)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @comm_group.{u}"

mod: "DefMod(Definition(comm_group.no_confusion,Vector(Param(l), Param(u)),∀ {α : Type u} {P : Sort l} {v1 v2 : @comm_group.{u} α}
  (H12 : @eq.{u+1} (@comm_group.{u} α) v1 v2),
@comm_group.no_confusion_type.{l u} α P v1 v2,λ {α : Type u} {P : Sort l} {v1 v2 : @comm_group.{u} α}
  (H12 : @eq.{u+1} (@comm_group.{u} α) v1 v2),
@eq.rec.{l u+1} (@comm_group.{u} α) v1
  (λ (a : @comm_group.{u} α),
  ∀ (H1a : @eq.{u+1} (@comm_group.{u} α) v1 a),
  @comm_group.no_confusion_type.{l u} α P v1 a)
  (λ (H11 : @eq.{u+1} (@comm_group.{u} α) v1 v1),
  @comm_group.cases_on.{l u} α
    (λ {v1_0 : @comm_group.{u} α},
    @comm_group.no_confusion_type.{l u} α P v1_0 v1_0) v1
    (λ (mul : (∀ (a_0 a_1 : α), α))
      (mul_assoc :
        (∀ (a_0 b c : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul)
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0 b) c)
          (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) a_0
            (@has_mul.mul.{u} α (@has_mul.mk.{u} α mul) b c)))) (one : α)
      (one_mul :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            (@has_one.one.{u} α (@has_one.mk.{u} α one)) a_0) a_0))
      (mul_one :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            a_0 (@has_one.one.{u} α (@has_one.mk.{u} α one))) a_0))
      (inv : (∀ (a_0 : α), α))
      (mul_left_inv :
        (∀ (a_0 : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α
              (@monoid.to_semigroup.{u} α
                (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))
            (@has_inv.inv.{u} α (@has_inv.mk.{u} α inv) a_0) a_0)
          (@has_one.one.{u} α
            (@monoid.to_has_one.{u} α
              (@monoid.mk.{u} α mul mul_assoc one one_mul mul_one)))))
      (mul_comm :
        (∀ (a_0 b : α),
        @eq.{u+1} α
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc))
            a_0 b)
          (@has_mul.mul.{u} α
            (@semigroup.to_has_mul.{u} α (@semigroup.mk.{u} α mul mul_assoc)) b
            a_0)))
      (a :
        (∀ (mul_eq : @eq.{u+1} (∀ (a_0 a_1 : α), α) mul mul)
          (one_eq : @eq.{u+1} α one one)
          (inv_eq : @eq.{u+1} (∀ (a_0 : α), α) inv inv),
        P)),
    a (@eq.refl.{u+1} (∀ (a_0 a_1 : α), α) mul) (@eq.refl.{u+1} α one)
      (@eq.refl.{u+1} (∀ (a_0 : α), α) inv))) v2 H12 H12,0))"
err: "provingground.interface.UnParsedException: could not parse expression @comm_group.{u}"

mod: "DefMod(Definition(option_t_bind.equations._eqn_1,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (a : @option_t.{u v} m inst_1 α)
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)),
@eq.{v+1} (@option_t.{u v} m inst_1 β) (@option_t_bind.{u v} m inst_1 α β a b)
  ((λ (this : m (@option.{u} β)), this)
    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α)
      (@option.{u} β) a
      (λ (o : @option.{u} α), @option_t_bind._match_1.{u v} m inst_1 α β b o))),λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (a : @option_t.{u v} m inst_1 α)
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)),
@eq.refl.{v+1} (@option_t.{u v} m inst_1 β)
  (@option_t_bind.{u v} m inst_1 α β a b),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t_bind._match_1.equations._eqn_1,Vector(Param(v), Param(u)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (b : (∀ (a : α), @option_t.{u v} m inst_1 β)),
@eq.{v+1} (m (@option.{u} β))
  (@option_t_bind._match_1.{u v} m inst_1 α β b (@option.none.{u} α))
  (@return.{u v} m inst_1 (@option.{u} β) (@option.none.{u} β)),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (b : (∀ (a : α), @option_t.{u v} m inst_1 β)),
@eq.refl.{v+1} ((λ (a : @option.{u} α), m (@option.{u} β)) (@option.none.{u} α))
  (@option.cases_on.{v+1 u} α (λ (a : @option.{u} α), m (@option.{u} β))
    (@option.none.{u} α)
    (@id_rhs.{v+1} (m (@option.{u} β))
      (@return.{u v} m inst_1 (@option.{u} β) (@option.none.{u} β)))
    (λ (a_1 : α), @id_rhs.{v+1} (@option_t.{u v} m inst_1 β) (b a_1))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t_return.equations._eqn_1,Vector(Param(u), Param(v)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u}
  (a : α),
@eq.{v+1} (@option_t.{u v} m inst_1 α) (@option_t_return.{u v} m inst_1 α a)
  ((λ (this : m (@option.{u} α)), this)
    (@return.{u v} m inst_1 (@option.{u} α) (@option.some.{u} α a))),λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α : Type u}
  (a : α),
@eq.refl.{v+1} (@option_t.{u v} m inst_1 α)
  (@option_t_return.{u v} m inst_1 α a),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t_bind._match_1.equations._eqn_2,Vector(Param(v), Param(u)),∀ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)) (a : α),
@eq.{v+1} (m (@option.{u} β))
  (@option_t_bind._match_1.{u v} m inst_1 α β b (@option.some.{u} α a)) (b a),λ {m : (∀ (a_0 : Type u), Type v)} [inst_1 : @monad.{u v} m] {α β : Type u}
  (b : (∀ (a_0 : α), @option_t.{u v} m inst_1 β)) (a : α),
@eq.refl.{v+1}
  ((λ (a_0 : @option.{u} α), m (@option.{u} β)) (@option.some.{u} α a))
  (@option.cases_on.{v+1 u} α (λ (a_0 : @option.{u} α), m (@option.{u} β))
    (@option.some.{u} α a)
    (@id_rhs.{v+1} (m (@option.{u} β))
      (@return.{u v} m inst_1 (@option.{u} β) (@option.none.{u} β)))
    (λ (a_1 : α), @id_rhs.{v+1} (@option_t.{u v} m inst_1 β) (b a_1))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(option_t.monad._proof_9,Vector(Param(u), Param(v)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] (α β γ : Type u)
  (x : @option_t.{u v} m inst_1 α) (g : @option_t.{u v} m inst_1 (∀ (a : α), β))
  (h : @option_t.{u v} m inst_1 (∀ (a : β), γ)),
@eq.{v+1} (@option_t.{u v} m inst_1 γ)
  ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @option_t.{u v} m inst_1 α_0),
    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ h
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      g x))
  ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @option_t.{u v} m inst_1 α_0),
    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] (α β γ : Type u)
  (x : @option_t.{u v} m inst_1 α) (g : @option_t.{u v} m inst_1 (∀ (a : α), β))
  (h : @option_t.{u v} m inst_1 (∀ (a : β), γ)),
@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
  ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @option_t.{u v} m inst_1 α_0),
    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ h
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α β
      g x))
  ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @option_t.{u v} m inst_1 α_0),
    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
    (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
      (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h)
      (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
        (∀ (a : α), γ) x_0 g)) x)
  ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
      (x_0 : @option_t.{u v} m inst_1 α_0),
    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
      (λ (x_1 : (∀ (a : α_0), β_0)),
      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
          (x_2 : @option_t.{u v} m inst_1 α_1),
        @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
          (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g) x)
  (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β γ
      h
      ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @option_t.{u v} m inst_1 α_1),
            @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 v+1} α_1 β_1
                (@option_t.{u v} m inst_1 β_1)
                (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        β g x))
    (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
      (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (∀ (a : α), γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
          (∀ (a : α), γ) x_0 g))
      (λ (x_0 : (∀ (a : α), γ)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α γ
      (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (∀ (a : α), γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
          (∀ (a : α), γ) x_0 g)) x)
    (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @option_t.{u v} m inst_1 α_1),
            @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 v+1} α_1 β_1
                (@option_t.{u v} m inst_1 β_1)
                (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) β
        γ h
        ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @option_t.{u v} m inst_1 α_1),
              @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 v+1} α_1 β_1
                  (@option_t.{u v} m inst_1 β_1)
                  (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          α β g x))
      (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
        (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
            (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
              (@option_t.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@option_t_return.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@function.comp.{u+1 u+1 u+1} α β γ)))
          (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_0 g))
        (λ (x_0 : (∀ (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
      (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
        (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)
          (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_0 g))
        (λ (x_0 : (∀ (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
      (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
        ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
            (λ (x_1 : (∀ (a : α_0), β_0)),
            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @option_t.{u v} m inst_1 α_1),
              @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 v+1} α_1 β_1
                  (@option_t.{u v} m inst_1 β_1)
                  (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
          β γ h
          ((λ (α_0 β_0 : Type u)
              (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @option_t.{u v} m inst_1 α_1),
                @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 v+1} α_1 β_1
                    (@option_t.{u v} m inst_1 β_1)
                    (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) α β g x))
        (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
          (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
            (λ (h_0 : (∀ (a : β), γ)),
            @option_t_bind.{u v} m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@option_t_return.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@function.comp.{u+1 u+1 u+1} α β γ h_0))
              (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_0 g)))
          (λ (x_0 : (∀ (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
        (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
          (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (∀ (a : α), γ)
            (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
              (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@option_t.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@option_t_return.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@function.comp.{u+1 u+1 u+1} α β γ)))
            (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) x_0 g))
          (λ (x_0 : (∀ (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
        (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
          ((λ (α_0 β_0 : Type u)
              (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
              (x_0 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
              (λ (x_1 : (∀ (a : α_0), β_0)),
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                  (x_2 : @option_t.{u v} m inst_1 α_1),
                @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                  (@function.comp.{u+1 u+1 v+1} α_1 β_1
                    (@option_t.{u v} m inst_1 β_1)
                    (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1
                x_0)) β γ h
            ((λ (α_0 β_0 : Type u)
                (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @option_t.{u v} m inst_1 α_1),
                  @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 v+1} α_1 β_1
                      (@option_t.{u v} m inst_1 β_1)
                      (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) α β g x))
          (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) γ h
            (λ (h_0 : (∀ (a : β), γ)),
            @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
              (@option_t_bind.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@option_t_return.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x)))
          (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
            (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
              (λ (h_0 : (∀ (a : β), γ)),
              @option_t_bind.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@option_t_return.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g)))
            (λ (x_0 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
          (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
            ((λ (α_0 β_0 : Type u)
                (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                (x_0 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                (λ (x_1 : (∀ (a : α_0), β_0)),
                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                    (x_2 : @option_t.{u v} m inst_1 α_1),
                  @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                    (@function.comp.{u+1 u+1 v+1} α_1 β_1
                      (@option_t.{u v} m inst_1 β_1)
                      (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1
                  x_0)) β γ h
              ((λ (α_0 β_0 : Type u)
                  (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @option_t.{u v} m inst_1 α_1),
                    @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 v+1} α_1 β_1
                        (@option_t.{u v} m inst_1 β_1)
                        (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) α β g x))
            (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) γ h
              (λ (x_0 : (∀ (a : β), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) β γ x_0
                ((λ (α_0 β_0 : Type u)
                    (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_2 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_3 : @option_t.{u v} m inst_1 α_1),
                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                          (@option_t.{u v} m inst_1 β_1)
                          (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0
                      x_2 x_1)) α β g x)))
            (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) γ h
              (λ (h_0 : (∀ (a : β), γ)),
              @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                (@option_t_bind.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@option_t_return.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                        (@option_t.{u v} m inst_1 β_0)
                        (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                    (∀ (a : α), γ) x_0 g))
                (λ (x_0 : (∀ (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x)))
            (@eq.symm.{v+1} (@option_t.{u v} m inst_1 γ)
              (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) γ h
                (λ (x_0 : (∀ (a : β), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) β γ x_0
                  ((λ (α_0 β_0 : Type u)
                      (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                      (λ (x_2 : (∀ (a : α_0), β_0)),
                      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                          (x_3 : @option_t.{u v} m inst_1 α_1),
                        @option_t_bind.{u v} m inst_1 α_1 β_1 x_3
                          (@function.comp.{u+1 u+1 v+1} α_1 β_1
                            (@option_t.{u v} m inst_1 β_1)
                            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0
                        x_2 x_1)) α β g x)))
              ((λ (α_0 β_0 : Type u)
                  (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                  (λ (x_1 : (∀ (a : α_0), β_0)),
                  (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                      (x_2 : @option_t.{u v} m inst_1 α_1),
                    @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                      (@function.comp.{u+1 u+1 v+1} α_1 β_1
                        (@option_t.{u v} m inst_1 β_1)
                        (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1
                    x_0)) β γ h
                ((λ (α_0 β_0 : Type u)
                    (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                    (x_0 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_2 : @option_t.{u v} m inst_1 α_1),
                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                          (@option_t.{u v} m inst_1 β_1)
                          (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0
                      x_1 x_0)) α β g x))
              ((λ (α_0 β_0 : Type u)
                  (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                  (x_0 : @option_t.{u v} m inst_1 α_0),
                @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
                  (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    @has_map.map.{u v} (@option_t.{u v} m inst_1)
                      (@has_map.mk.{u v} (@option_t.{u v} m inst_1)
                        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                          (x_2 : @option_t.{u v} m inst_1 α_1),
                        @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                          (@function.comp.{u+1 u+1 v+1} α_1 β_1
                            (@option_t.{u v} m inst_1 β_1)
                            (@option_t_return.{u v} m inst_1 β_1) f_0))
                        (λ (α_1 β_1 : Type u),
                        @function.comp.{u+1 u+1 v+1} α_1 (∀ (a : β_1), α_1)
                          (∀ (a : @option_t.{u v} m inst_1 β_1),
                          @option_t.{u v} m inst_1 α_1)
                          ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                              (x_2 : @option_t.{u v} m inst_1 α_2),
                            @option_t_bind.{u v} m inst_1 α_2 β_2 x_2
                              (@function.comp.{u+1 u+1 v+1} α_2 β_2
                                (@option_t.{u v} m inst_1 β_2)
                                (@option_t_return.{u v} m inst_1 β_2) f_0)) β_1
                            α_1) (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0
                      x_1 x_0))) β γ h
                ((λ (α_0 β_0 : Type u)
                    (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                    (x_0 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_1 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_2 : @option_t.{u v} m inst_1 α_1),
                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                          (@option_t.{u v} m inst_1 β_1)
                          (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0
                      x_1 x_0)) α β g x)))
            (@congr_arg.{max (u+1) (v+1) v+1}
              (∀ (x_0 : (∀ (a : β), γ)), @option_t.{u v} m inst_1 γ)
              (@option_t.{u v} m inst_1 γ)
              (λ (x_0 : (∀ (a : β), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) β γ x_0
                ((λ (α_0 β_0 : Type u)
                    (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                    (λ (x_2 : (∀ (a : α_0), β_0)),
                    (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                        (x_3 : @option_t.{u v} m inst_1 α_1),
                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_3
                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                          (@option_t.{u v} m inst_1 β_1)
                          (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0
                      x_2 x_1)) α β g x))
              (λ (h_0 : (∀ (a : β), γ)),
              @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                (@option_t_bind.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@option_t_return.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                        (@option_t.{u v} m inst_1 β_0)
                        (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                    (∀ (a : α), γ) x_0 g))
                (λ (x_0 : (∀ (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
              (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) γ h)
              (@funext.{u+1 v+1} (∀ (a : β), γ)
                (λ (x_0 : (∀ (a : β), γ)), @option_t.{u v} m inst_1 γ)
                (λ (x_0 : (∀ (a : β), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) β γ x_0
                  ((λ (α_0 β_0 : Type u)
                      (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                      (λ (x_2 : (∀ (a : α_0), β_0)),
                      (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                          (x_3 : @option_t.{u v} m inst_1 α_1),
                        @option_t_bind.{u v} m inst_1 α_1 β_1 x_3
                          (@function.comp.{u+1 u+1 v+1} α_1 β_1
                            (@option_t.{u v} m inst_1 β_1)
                            (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0
                        x_2 x_1)) α β g x))
                (λ (h_0 : (∀ (a : β), γ)),
                @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                  (@option_t_bind.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                    (@option_t_return.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                      (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                    (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_1 : @option_t.{u v} m inst_1 α_0),
                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                          (@option_t.{u v} m inst_1 β_0)
                          (@option_t_return.{u v} m inst_1 β_0) f))
                      (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                  (λ (x_0 : (∀ (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                        (@option_t.{u v} m inst_1 β_0)
                        (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
                (λ (h_0 : (∀ (a : β), γ)),
                @eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                  ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_0 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                        (@option_t.{u v} m inst_1 β_0)
                        (@option_t_return.{u v} m inst_1 β_0) f)) β γ h_0
                    ((λ (α_0 β_0 : Type u)
                        (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                        (x_0 : @option_t.{u v} m inst_1 α_0),
                      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                        (λ (x_1 : (∀ (a : α_0), β_0)),
                        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                            (x_2 : @option_t.{u v} m inst_1 α_1),
                          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                            (@function.comp.{u+1 u+1 v+1} α_1 β_1
                              (@option_t.{u v} m inst_1 β_1)
                              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0
                          β_0 x_1 x_0)) α β g x))
                  (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_0 : @option_t.{u v} m inst_1 α_0),
                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                          (@option_t.{u v} m inst_1 β_0)
                          (@option_t_return.{u v} m inst_1 β_0) f))
                      (∀ (a : α), β) (∀ (a : α), γ)
                      (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                    (λ (x_0 : (∀ (a : α), γ)),
                    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_1 : @option_t.{u v} m inst_1 α_0),
                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                          (@option_t.{u v} m inst_1 β_0)
                          (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
                  (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                    (@option_t_bind.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                      (@option_t_return.{u v} m inst_1
                        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                      (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                    (λ (x_0 : (∀ (a : α), γ)),
                    (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_1 : @option_t.{u v} m inst_1 α_0),
                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                          (@option_t.{u v} m inst_1 β_0)
                          (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
                  (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                    ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                        (x_0 : @option_t.{u v} m inst_1 α_0),
                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                          (@option_t.{u v} m inst_1 β_0)
                          (@option_t_return.{u v} m inst_1 β_0) f)) β γ h_0
                      ((λ (α_0 β_0 : Type u)
                          (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                          (x_0 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                          (λ (x_1 : (∀ (a : α_0), β_0)),
                          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                              (x_2 : @option_t.{u v} m inst_1 α_1),
                            @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                              (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                (@option_t.{u v} m inst_1 β_1)
                                (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0
                            β_0 x_1 x_0)) α β g x))
                    (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                        (∀ (a : α), γ) g
                        (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                          (∀ (a : α), γ)
                          (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                          (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                      (λ (x_0 : (∀ (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0
                        x))
                    (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                      (λ (x_0 : (∀ (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0
                        x))
                    (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f)) β γ h_0
                        ((λ (α_0 β_0 : Type u)
                            (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                            (x_0 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
                            (λ (x_1 : (∀ (a : α_0), β_0)),
                            (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                                (x_2 : @option_t.{u v} m inst_1 α_1),
                              @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                  (@option_t.{u v} m inst_1 β_1)
                                  (@option_t_return.{u v} m inst_1 β_1) f_0))
                              α_0 β_0 x_1 x_0)) α β g x))
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) γ g
                        (λ (g_0 : (∀ (a : α), β)),
                        @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                          (@option_t_return.{u v} m inst_1 (∀ (a : α), γ)
                            (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                            x_0 x)))
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                          (∀ (a : α), γ) g
                          (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                            (∀ (a : α), γ)
                            (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                            (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                            (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                        (λ (x_0 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0
                          x))
                      (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_0 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f)) β γ h_0
                          ((λ (α_0 β_0 : Type u)
                              (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                              (x_0 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0
                              f
                              (λ (x_1 : (∀ (a : α_0), β_0)),
                              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                                  (x_2 : @option_t.{u v} m inst_1 α_1),
                                @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                  (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                    (@option_t.{u v} m inst_1 β_1)
                                    (@option_t_return.{u v} m inst_1 β_1) f_0))
                                α_0 β_0 x_1 x_0)) α β g x))
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) γ g
                          (λ (g_0 : (∀ (a : α), β)),
                          @option_t_bind.{u v} m inst_1 β γ
                            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_0 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) α β
                              g_0 x)
                            (@function.comp.{u+1 u+1 v+1} β γ
                              (@option_t.{u v} m inst_1 γ)
                              (@option_t_return.{u v} m inst_1 γ) h_0)))
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) γ g
                          (λ (g_0 : (∀ (a : α), β)),
                          @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                            (@option_t_return.{u v} m inst_1 (∀ (a : α), γ)
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                            (λ (x_0 : (∀ (a : α), γ)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                              x_0 x)))
                        (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_0 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) β γ
                            h_0
                            ((λ (α_0 β_0 : Type u)
                                (f :
                                  @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                                (x_0 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0)
                                β_0 f
                                (λ (x_1 : (∀ (a : α_0), β_0)),
                                (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                                    (x_2 : @option_t.{u v} m inst_1 α_1),
                                  @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                    (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                      (@option_t.{u v} m inst_1 β_1)
                                      (@option_t_return.{u v} m inst_1 β_1)
                                      f_0)) α_0 β_0 x_1 x_0)) α β g x))
                          (@option_t_bind.{u v} m inst_1 β γ
                            (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) β g
                              (λ (x_0 : (∀ (a : α), β)),
                              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_1 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_return.{u v} m inst_1 β_0) f)) α
                                β x_0 x))
                            (@function.comp.{u+1 u+1 v+1} β γ
                              (@option_t.{u v} m inst_1 γ)
                              (@option_t_return.{u v} m inst_1 γ) h_0))
                          (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) γ g
                            (λ (g_0 : (∀ (a : α), β)),
                            @option_t_bind.{u v} m inst_1 β γ
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_return.{u v} m inst_1 β_0) f)) α
                                β g_0 x)
                              (@function.comp.{u+1 u+1 v+1} β γ
                                (@option_t.{u v} m inst_1 γ)
                                (@option_t_return.{u v} m inst_1 γ) h_0)))
                          (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_0 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) β γ
                              h_0
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0)
                                  β_0 f
                                  (λ (x_1 : (∀ (a : α_0), β_0)),
                                  (λ (α_1 β_1 : Type u)
                                      (f_0 : (∀ (a : α_1), β_1))
                                      (x_2 : @option_t.{u v} m inst_1 α_1),
                                    @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                        (@option_t.{u v} m inst_1 β_1)
                                        (@option_t_return.{u v} m inst_1 β_1)
                                        f_0)) α_0 β_0 x_1 x_0)) α β g x))
                            (@option_t_bind.{u v} m inst_1 β γ
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0)
                                  β_0 f
                                  (λ (x_1 : (∀ (a : α_0), β_0)),
                                  (λ (α_1 β_1 : Type u)
                                      (f_0 : (∀ (a : α_1), β_1))
                                      (x_2 : @option_t.{u v} m inst_1 α_1),
                                    @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                        (@option_t.{u v} m inst_1 β_1)
                                        (@option_t_return.{u v} m inst_1 β_1)
                                        f_0)) α_0 β_0 x_1 x_0)) α β g x)
                              (@function.comp.{u+1 u+1 v+1} β γ
                                (@option_t.{u v} m inst_1 γ)
                                (@option_t_return.{u v} m inst_1 γ) h_0))
                            (@option_t_bind.{u v} m inst_1 β γ
                              (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) β g
                                (λ (x_0 : (∀ (a : α), β)),
                                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_1 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@option_t_return.{u v} m inst_1 β_0) f))
                                  α β x_0 x))
                              (@function.comp.{u+1 u+1 v+1} β γ
                                (@option_t.{u v} m inst_1 γ)
                                (@option_t_return.{u v} m inst_1 γ) h_0))
                            (@eq.symm.{v+1} (@option_t.{u v} m inst_1 γ)
                              (@option_t_bind.{u v} m inst_1 β γ
                                ((λ (α_0 β_0 : Type u)
                                    (f :
                                      @option_t.{u v} m inst_1
                                        (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f_0 : (∀ (a : α_1), β_1))
                                        (x_2 : @option_t.{u v} m inst_1 α_1),
                                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                          (@option_t.{u v} m inst_1 β_1)
                                          (@option_t_return.{u v} m inst_1 β_1)
                                          f_0)) α_0 β_0 x_1 x_0)) α β g x)
                                (@function.comp.{u+1 u+1 v+1} β γ
                                  (@option_t.{u v} m inst_1 γ)
                                  (@option_t_return.{u v} m inst_1 γ) h_0))
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_return.{u v} m inst_1 β_0) f)) β
                                γ h_0
                                ((λ (α_0 β_0 : Type u)
                                    (f :
                                      @option_t.{u v} m inst_1
                                        (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f_0 : (∀ (a : α_1), β_1))
                                        (x_2 : @option_t.{u v} m inst_1 α_1),
                                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                          (@option_t.{u v} m inst_1 β_1)
                                          (@option_t_return.{u v} m inst_1 β_1)
                                          f_0)) α_0 β_0 x_1 x_0)) α β g x))
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                    x_0
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@has_pure.pure.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_pure.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_return.{u v} m inst_1))
                                        β_0) f))) β γ h_0
                                ((λ (α_0 β_0 : Type u)
                                    (f :
                                      @option_t.{u v} m inst_1
                                        (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    (λ (α_1 β_1 : Type u)
                                        (f_0 : (∀ (a : α_1), β_1))
                                        (x_2 : @option_t.{u v} m inst_1 α_1),
                                      @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                        (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                          (@option_t.{u v} m inst_1 β_1)
                                          (@option_t_return.{u v} m inst_1 β_1)
                                          f_0)) α_0 β_0 x_1 x_0)) α β g x)))
                            (@eq.rec.{0 v+1} (@option_t.{u v} m inst_1 β)
                              (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) β g
                                (λ (x_0 : (∀ (a : α), β)),
                                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_1 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@option_t_return.{u v} m inst_1 β_0) f))
                                  α β x_0 x))
                              (λ (x_0 : @option_t.{u v} m inst_1 β),
                              @eq.{v+1} (@option_t.{u v} m inst_1 γ)
                                (@option_t_bind.{u v} m inst_1 β γ x_0
                                  (@function.comp.{u+1 u+1 v+1} β γ
                                    (@option_t.{u v} m inst_1 γ)
                                    (@option_t_return.{u v} m inst_1 γ) h_0))
                                (@option_t_bind.{u v} m inst_1 β γ
                                  (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                                    β g
                                    (λ (x_1 : (∀ (a : α), β)),
                                    (λ (α_0 β_0 : Type u)
                                        (f : (∀ (a : α_0), β_0))
                                        (x_2 : @option_t.{u v} m inst_1 α_0),
                                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                          (@option_t.{u v} m inst_1 β_0)
                                          (@option_t_return.{u v} m inst_1 β_0)
                                          f)) α β x_1 x))
                                  (@function.comp.{u+1 u+1 v+1} β γ
                                    (@option_t.{u v} m inst_1 γ)
                                    (@option_t_return.{u v} m inst_1 γ) h_0)))
                              (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
                                (@option_t_bind.{u v} m inst_1 β γ
                                  (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                                    β g
                                    (λ (x_0 : (∀ (a : α), β)),
                                    (λ (α_0 β_0 : Type u)
                                        (f : (∀ (a : α_0), β_0))
                                        (x_1 : @option_t.{u v} m inst_1 α_0),
                                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                          (@option_t.{u v} m inst_1 β_0)
                                          (@option_t_return.{u v} m inst_1 β_0)
                                          f)) α β x_0 x))
                                  (@function.comp.{u+1 u+1 v+1} β γ
                                    (@option_t.{u v} m inst_1 γ)
                                    (@option_t_return.{u v} m inst_1 γ) h_0)))
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0)
                                  β_0 f
                                  (λ (x_1 : (∀ (a : α_0), β_0)),
                                  (λ (α_1 β_1 : Type u)
                                      (f_0 : (∀ (a : α_1), β_1))
                                      (x_2 : @option_t.{u v} m inst_1 α_1),
                                    @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                                      (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                        (@option_t.{u v} m inst_1 β_1)
                                        (@option_t_return.{u v} m inst_1 β_1)
                                        f_0)) α_0 β_0 x_1 x_0)) α β g x)
                              ((λ (α_0 β_0 : Type u)
                                  (f :
                                    @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1))
                                    (∀ (a : α_0), β_0) β_0 f
                                    (λ (x_1 : (∀ (a : α_0), β_0)),
                                    @has_map.map.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_map.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (λ (α_1 β_1 : Type u)
                                          (f_0 : (∀ (a : α_1), β_1))
                                          (x_2 : @option_t.{u v} m inst_1 α_1),
                                        @option_t_bind.{u v} m inst_1 α_1 β_1
                                          x_2
                                          (@function.comp.{u+1 u+1 v+1} α_1 β_1
                                            (@option_t.{u v} m inst_1 β_1)
                                            (@option_t_return.{u v} m inst_1
                                              β_1) f_0))
                                        (λ (α_1 β_1 : Type u),
                                        @function.comp.{u+1 u+1 v+1} α_1
                                          (∀ (a : β_1), α_1)
                                          (∀ (a : @option_t.{u v} m inst_1 β_1),
                                          @option_t.{u v} m inst_1 α_1)
                                          ((λ (α_2 β_2 : Type u)
                                              (f_0 : (∀ (a : α_2), β_2))
                                              (x_2 :
                                                @option_t.{u v} m inst_1 α_2),
                                            @option_t_bind.{u v} m inst_1 α_2
                                              β_2 x_2
                                              (@function.comp.{u+1 u+1 v+1} α_2
                                                β_2
                                                (@option_t.{u v} m inst_1 β_2)
                                                (@option_t_return.{u v} m inst_1
                                                  β_2) f_0)) β_1 α_1)
                                          (@function.const.{u+1 u+1} α_1 β_1)))
                                      α_0 β_0 x_1 x_0))) α β g x)))
                          ((λ (α_0 β_0 γ_0 : Type u)
                              (x_0 : @option_t.{u v} m inst_1 α_0)
                              (f : (∀ (a : α_0), @option_t.{u v} m inst_1 β_0))
                              (g_0 :
                                (∀ (a : β_0), @option_t.{u v} m inst_1 γ_0)),
                            @eq.mpr.{0}
                              (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                    x_0 f) g_0)
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                                  (λ (x_1 : α_0),
                                  @has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                    (f x_1) g_0)))
                              (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} α_0) (@option.{u} γ_0) x_0
                                  (λ (x_1 : @option.{u} α_0),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f x_1)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} α_0) (@option.{u} γ_0) x_0
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    γ_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))))
                              (@id_locked.{0}
                                (@eq.{1} Prop
                                  (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                    (@has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                      (@has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) α_0
                                        β_0 x_0 f) g_0)
                                    (@has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) α_0 γ_0
                                      x_0
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) β_0
                                        γ_0 (f x_1) g_0)))
                                  (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                                      (λ (x_1 : @option.{u} α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0)))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 γ_0
                                        (λ (x_1 : α_0),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (f x_1)
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 β_0 γ_0 g_0))))))
                                ((λ (a a_0 : @option_t.{u v} m inst_1 γ_0)
                                    (e_1 :
                                      @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a
                                        a_0)
                                    (a_1 a_2 : @option_t.{u v} m inst_1 γ_0)
                                    (e_2 :
                                      @eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                        a_1 a_2),
                                  @congr.{v+1 1} (@option_t.{u v} m inst_1 γ_0)
                                    Prop
                                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a)
                                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                      a_0) a_1 a_2
                                    (@congr_arg.{v+1 max (v+1) 1}
                                      (@option_t.{u v} m inst_1 γ_0)
                                      (∀ (a_3 : @option_t.{u v} m inst_1 γ_0),
                                      Prop) a a_0
                                      (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0))
                                      e_1) e_2)
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                    (@has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                      x_0 f) g_0)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                                    (λ (x_1 : @option.{u} α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  (@eq.trans.{v+1}
                                    (@option_t.{u v} m inst_1 γ_0)
                                    (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                      (@has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) α_0
                                        β_0 x_0 f) g_0)
                                    ((λ (this : m (@option.{u} γ_0)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} α_0) (@option.{u} β_0)
                                          x_0
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 β_0 f))
                                        (λ (o : @option.{u} β_0),
                                        @option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0 o)))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                                      (λ (x_1 : @option.{u} α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0)))
                                    (@eq.trans.{v+1}
                                      (@option_t.{u v} m inst_1 γ_0)
                                      (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                        (@has_bind.bind.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@has_bind.mk.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@option_t_bind.{u v} m inst_1)) α_0
                                          β_0 x_0 f) g_0)
                                      (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} α_0) (@option.{u} β_0)
                                          x_0
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 β_0 f)) g_0)
                                      ((λ (this : m (@option.{u} γ_0)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} α_0) (@option.{u} β_0)
                                            x_0
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 β_0 f))
                                          (λ (o : @option.{u} β_0),
                                          @option_t_bind._match_1.{u v} m inst_1
                                            β_0 γ_0 g_0 o)))
                                      ((λ (a a_0 : @option_t.{u v} m inst_1 β_0)
                                          (e_1 :
                                            @eq.{v+1}
                                              (@option_t.{u v} m inst_1 β_0) a
                                              a_0)
                                          (b b_0 :
                                            (∀ (a_1 : β_0),
                                            @option_t.{u v} m inst_1 γ_0))
                                          (e_2 :
                                            @eq.{max (u+1) (v+1)}
                                              (∀ (a_1 : β_0),
                                              @option_t.{u v} m inst_1 γ_0) b
                                              b_0),
                                        @congr.{max (u+1) (v+1) v+1}
                                          (∀ (a_1 : β_0),
                                          @option_t.{u v} m inst_1 γ_0)
                                          (@option_t.{u v} m inst_1 γ_0)
                                          (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                            a)
                                          (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                            a_0) b b_0
                                          (@congr_arg.{v+1 max (u+1) (v+1)}
                                            (@option_t.{u v} m inst_1 β_0)
                                            (∀ (b_1 :
                                                (∀ (a_1 : β_0),
                                                @option_t.{u v} m inst_1 γ_0)),
                                            @option_t.{u v} m inst_1 γ_0) a a_0
                                            (@option_t_bind.{u v} m inst_1 β_0
                                              γ_0) e_1) e_2)
                                        (@has_bind.bind.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@has_bind.mk.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@option_t_bind.{u v} m inst_1)) α_0
                                          β_0 x_0 f)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} α_0) (@option.{u} β_0)
                                          x_0
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 β_0 f))
                                        (@option_t_bind.equations._eqn_1.{u v} m
                                          inst_1 α_0 β_0 x_0 f) g_0 g_0
                                        (@eq.refl.{max (u+1) (v+1)}
                                          (∀ (a : β_0),
                                          @option_t.{u v} m inst_1 γ_0) g_0))
                                      (@option_t_bind.equations._eqn_1.{u v} m
                                        inst_1 β_0 γ_0
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} α_0) (@option.{u} β_0)
                                          x_0
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 β_0 f)) g_0))
                                    (@monad.bind_assoc.{u v} m inst_1
                                      (@option.{u} α_0) (@option.{u} β_0)
                                      (@option.{u} γ_0) x_0
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) α_0 γ_0
                                    x_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                      (f x_1) g_0))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      γ_0
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))))
                                  (@eq.trans.{v+1}
                                    (@option_t.{u v} m inst_1 γ_0)
                                    (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) β_0
                                        γ_0 (f x_1) g_0))
                                    (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0)))
                                    ((λ (this : m (@option.{u} γ_0)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} α_0) (@option.{u} γ_0) x_0
                                        (λ (o : @option.{u} α_0),
                                        @option_t_bind._match_1.{u v} m inst_1
                                          α_0 γ_0
                                          (λ (x_1 : α_0),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (f x_1)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0)) o)))
                                    ((λ (a a_0 : @option_t.{u v} m inst_1 α_0)
                                        (e_1 :
                                          @eq.{v+1}
                                            (@option_t.{u v} m inst_1 α_0) a
                                            a_0)
                                        (b b_0 :
                                          (∀ (a_1 : α_0),
                                          @option_t.{u v} m inst_1 γ_0))
                                        (e_2 :
                                          @eq.{max (u+1) (v+1)}
                                            (∀ (a_1 : α_0),
                                            @option_t.{u v} m inst_1 γ_0) b
                                            b_0),
                                      @congr.{max (u+1) (v+1) v+1}
                                        (∀ (a_1 : α_0),
                                        @option_t.{u v} m inst_1 γ_0)
                                        (@option_t.{u v} m inst_1 γ_0)
                                        (@option_t_bind.{u v} m inst_1 α_0 γ_0
                                          a)
                                        (@option_t_bind.{u v} m inst_1 α_0 γ_0
                                          a_0) b b_0
                                        (@congr_arg.{v+1 max (u+1) (v+1)}
                                          (@option_t.{u v} m inst_1 α_0)
                                          (∀ (b_1 :
                                              (∀ (a_1 : α_0),
                                              @option_t.{u v} m inst_1 γ_0)),
                                          @option_t.{u v} m inst_1 γ_0) a a_0
                                          (@option_t_bind.{u v} m inst_1 α_0
                                            γ_0) e_1) e_2) x_0 x_0
                                      (@eq.refl.{v+1}
                                        (@option_t.{u v} m inst_1 α_0) x_0)
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) β_0
                                        γ_0 (f x_1) g_0)
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))
                                      (@funext.{u+1 v+1} α_0
                                        (λ (x_1 : α_0),
                                        @option_t.{u v} m inst_1 γ_0)
                                        (λ (x_1 : α_0),
                                        @option_t_bind.{u v} m inst_1 β_0 γ_0
                                          (f x_1) g_0)
                                        (λ (x_1 : α_0),
                                        (λ (this : m (@option.{u} γ_0)), this)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (f x_1)
                                            (λ (o : @option.{u} β_0),
                                            @option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0 o)))
                                        (λ (x_1 : α_0),
                                        @option_t_bind.equations._eqn_1.{u v} m
                                          inst_1 β_0 γ_0 (f x_1) g_0)))
                                    (@option_t_bind.equations._eqn_1.{u v} m
                                      inst_1 α_0 γ_0 x_0
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))))))
                              (@congr_arg.{max (u+1) (v+1) v+1}
                                (∀ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                                (@option_t.{u v} m inst_1 γ_0)
                                (λ (x_1 : @option.{u} α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    β_0 f x_1)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0))
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                  (λ (x_1 : α_0),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} α_0) (@option.{u} γ_0) x_0)
                                (@funext.{u+1 v+1} (@option.{u} α_0)
                                  (λ (x_1 : @option.{u} α_0),
                                  m (@option.{u} γ_0))
                                  (λ (x_1 : @option.{u} α_0),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f x_1)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0))
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    γ_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  (λ (x_1 : @option.{u} α_0),
                                  @option.cases_on.{0 u} α_0
                                    (λ (x_2 : @option.{u} α_0),
                                    @eq.{v+1} (m (@option.{u} γ_0))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f x_2)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 γ_0
                                        (λ (x_3 : α_0),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (f x_3)
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 β_0 γ_0 g_0)) x_2)) x_1
                                    (@eq.mpr.{0}
                                      (@eq.{v+1} (m (@option.{u} γ_0))
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 β_0 f
                                            (@option.none.{u} α_0))
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 β_0 γ_0 g_0))
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 γ_0
                                          (λ (x_2 : α_0),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (f x_2)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0))
                                          (@option.none.{u} α_0))) @true
                                      (@id_locked.{0}
                                        (@eq.{1} Prop
                                          (@eq.{v+1} (m (@option.{u} γ_0))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f
                                                (@option.none.{u} α_0))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 γ_0
                                              (λ (x_2 : α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0) (f x_2)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))
                                              (@option.none.{u} α_0))) @true)
                                        (@eq.trans.{1} Prop
                                          (@eq.{v+1} (m (@option.{u} γ_0))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f
                                                (@option.none.{u} α_0))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 γ_0
                                              (λ (x_2 : α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0) (f x_2)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))
                                              (@option.none.{u} α_0)))
                                          (@eq.{v+1} (m (@option.{u} γ_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))) @true
                                          ((λ (a a_0 : m (@option.{u} γ_0))
                                              (e_1 :
                                                @eq.{v+1} (m (@option.{u} γ_0))
                                                  a a_0)
                                              (a_1 a_2 : m (@option.{u} γ_0))
                                              (e_2 :
                                                @eq.{v+1} (m (@option.{u} γ_0))
                                                  a_1 a_2),
                                            @congr.{v+1 1} (m (@option.{u} γ_0))
                                              Prop
                                              (@eq.{v+1} (m (@option.{u} γ_0))
                                                a)
                                              (@eq.{v+1} (m (@option.{u} γ_0))
                                                a_0) a_1 a_2
                                              (@congr_arg.{v+1 max (v+1) 1}
                                                (m (@option.{u} γ_0))
                                                (∀ (a_3 : m (@option.{u} γ_0)),
                                                Prop) a a_0
                                                (@eq.{v+1}
                                                  (m (@option.{u} γ_0))) e_1)
                                              e_2)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f
                                                (@option.none.{u} α_0))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))
                                            (@eq.trans.{v+1}
                                              (m (@option.{u} γ_0))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f
                                                  (@option.none.{u} α_0))
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0
                                                (@option.none.{u} β_0))
                                              (@return.{u v} m inst_1
                                                (@option.{u} γ_0)
                                                (@option.none.{u} γ_0))
                                              (@eq.trans.{v+1}
                                                (m (@option.{u} γ_0))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f
                                                    (@option.none.{u} α_0))
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_0))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@return.{u v} m inst_1
                                                    (@option.{u} β_0)
                                                    (@option.none.{u} β_0))
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_0))
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0
                                                  (@option.none.{u} β_0))
                                                ((λ [c : @has_bind.{u v} m]
                                                    {α_1 β_1 : Type u}
                                                    (a a_0 : m α_1)
                                                    (e_4 :
                                                      @eq.{v+1} (m α_1) a a_0)
                                                    (a_1 a_2 :
                                                      (∀ (a_3 : α_1), m β_1))
                                                    (e_5 :
                                                      @eq.{max (u+1) (v+1)}
                                                        (∀ (a_3 : α_1), m β_1)
                                                        a_1 a_2),
                                                  @congr.{max (u+1) (v+1) v+1}
                                                    (∀ (a_3 : α_1), m β_1)
                                                    (m β_1)
                                                    (@has_bind.bind.{u v} m c
                                                      α_1 β_1 a)
                                                    (@has_bind.bind.{u v} m c
                                                      α_1 β_1 a_0) a_1 a_2
                                                    (@congr_arg.{v+1
                                                      max (u+1)
                                                      (v+1)} (m α_1)
                                                      (∀ (a_3 :
                                                          (∀ (a_4 : α_1),
                                                          m β_1)),
                                                      m β_1) a a_0
                                                      (@has_bind.bind.{u v} m c
                                                        α_1 β_1) e_4) e_5)
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f
                                                    (@option.none.{u} α_0))
                                                  (@return.{u v} m inst_1
                                                    (@option.{u} β_0)
                                                    (@option.none.{u} β_0))
                                                  (@option_t_bind._match_1.equations._eqn_1.{v
                                                    u} m inst_1 α_0 β_0 f)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_0)
                                                  (@eq.refl.{max (u+1) (v+1)}
                                                    (∀ (a : @option.{u} β_0),
                                                    m (@option.{u} γ_0))
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 β_0 γ_0 g_0)))
                                                (@monad.pure_bind.{u v} m inst_1
                                                  (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option.none.{u} β_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_0)))
                                              (@option_t_bind._match_1.equations._eqn_1.{v
                                                u} m inst_1 β_0 γ_0 g_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 γ_0
                                              (λ (x_2 : α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0) (f x_2)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))
                                              (@option.none.{u} α_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))
                                            (@option_t_bind._match_1.equations._eqn_1.{v
                                              u} m inst_1 α_0 γ_0
                                              (λ (x_2 : α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0) (f x_2)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))))
                                          (@propext
                                            (@eq.{v+1} (m (@option.{u} γ_0))
                                              (@return.{u v} m inst_1
                                                (@option.{u} γ_0)
                                                (@option.none.{u} γ_0))
                                              (@return.{u v} m inst_1
                                                (@option.{u} γ_0)
                                                (@option.none.{u} γ_0))) @true
                                            (@eq_self_iff_true.{v+1}
                                              (m (@option.{u} γ_0))
                                              (@return.{u v} m inst_1
                                                (@option.{u} γ_0)
                                                (@option.none.{u} γ_0))))))
                                      @trivial)
                                    (λ (a : α_0),
                                    @eq.refl.{v+1} (m (@option.{u} γ_0))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f (@option.some.{u} α_0 a))
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))))))) (∀ (a : α), β) β γ
                            g
                            (λ (x_0 : (∀ (a : α), β)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) α β
                              x_0 x)
                            (@function.comp.{u+1 u+1 v+1} β γ
                              (@option_t.{u v} m inst_1 γ)
                              (@option_t_return.{u v} m inst_1 γ) h_0)))
                        (@congr_arg.{max (u+1) (v+1) v+1}
                          (∀ (g_0 : (∀ (a : α), β)), @option_t.{u v} m inst_1 γ)
                          (@option_t.{u v} m inst_1 γ)
                          (λ (g_0 : (∀ (a : α), β)),
                          @option_t_bind.{u v} m inst_1 β γ
                            ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_0 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) α β
                              g_0 x)
                            (@function.comp.{u+1 u+1 v+1} β γ
                              (@option_t.{u v} m inst_1 γ)
                              (@option_t_return.{u v} m inst_1 γ) h_0))
                          (λ (g_0 : (∀ (a : α), β)),
                          @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                            (@option_t_return.{u v} m inst_1 (∀ (a : α), γ)
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                            (λ (x_0 : (∀ (a : α), γ)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                              x_0 x))
                          (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) γ g)
                          (@funext.{u+1 v+1} (∀ (a : α), β)
                            (λ (x_0 : (∀ (a : α), β)),
                            @option_t.{u v} m inst_1 γ)
                            (λ (g_0 : (∀ (a : α), β)),
                            @option_t_bind.{u v} m inst_1 β γ
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_return.{u v} m inst_1 β_0) f)) α
                                β g_0 x)
                              (@function.comp.{u+1 u+1 v+1} β γ
                                (@option_t.{u v} m inst_1 γ)
                                (@option_t_return.{u v} m inst_1 γ) h_0))
                            (λ (g_0 : (∀ (a : α), β)),
                            @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                              (@option_t_return.{u v} m inst_1 (∀ (a : α), γ)
                                (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                              (λ (x_0 : (∀ (a : α), γ)),
                              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_1 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_return.{u v} m inst_1 β_0) f)) α
                                γ x_0 x))
                            (λ (g_0 : (∀ (a : α), β)),
                            @eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                              (@option_t_bind.{u v} m inst_1 β γ
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@option_t_return.{u v} m inst_1 β_0) f))
                                  α β g_0 x)
                                (@function.comp.{u+1 u+1 v+1} β γ
                                  (@option_t.{u v} m inst_1 γ)
                                  (@option_t_return.{u v} m inst_1 γ) h_0))
                              ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                  (x_0 : @option_t.{u v} m inst_1 α_0),
                                @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_return.{u v} m inst_1 β_0) f)) α
                                γ (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                x)
                              (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                                (@option_t_return.{u v} m inst_1 (∀ (a : α), γ)
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                                (λ (x_0 : (∀ (a : α), γ)),
                                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_1 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@option_t_return.{u v} m inst_1 β_0) f))
                                  α γ x_0 x))
                              (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                                (@option_t_bind.{u v} m inst_1 β γ
                                  ((λ (α_0 β_0 : Type u)
                                      (f : (∀ (a : α_0), β_0))
                                      (x_0 : @option_t.{u v} m inst_1 α_0),
                                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                        (@option_t.{u v} m inst_1 β_0)
                                        (@option_t_return.{u v} m inst_1 β_0)
                                        f)) α β g_0 x)
                                  (@function.comp.{u+1 u+1 v+1} β γ
                                    (@option_t.{u v} m inst_1 γ)
                                    (@option_t_return.{u v} m inst_1 γ) h_0))
                                (@option_t_bind.{u v} m inst_1 α γ x
                                  (λ (x_0 : α),
                                  @option_t_return.{u v} m inst_1 γ
                                    (h_0 (g_0 x_0))))
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@option_t_return.{u v} m inst_1 β_0) f))
                                  α γ
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                  x)
                                (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                                  (@option_t_bind.{u v} m inst_1 β γ
                                    ((λ (α_0 β_0 : Type u)
                                        (f : (∀ (a : α_0), β_0))
                                        (x_0 : @option_t.{u v} m inst_1 α_0),
                                      @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                        (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                          (@option_t.{u v} m inst_1 β_0)
                                          (@option_t_return.{u v} m inst_1 β_0)
                                          f)) α β g_0 x)
                                    (@function.comp.{u+1 u+1 v+1} β γ
                                      (@option_t.{u v} m inst_1 γ)
                                      (@option_t_return.{u v} m inst_1 γ) h_0))
                                  (@option_t_bind.{u v} m inst_1 α γ x
                                    (λ (x_0 : α),
                                    @option_t_bind.{u v} m inst_1 β γ
                                      (@option_t_return.{u v} m inst_1 β
                                        (g_0 x_0))
                                      (@function.comp.{u+1 u+1 v+1} β γ
                                        (@option_t.{u v} m inst_1 γ)
                                        (@option_t_return.{u v} m inst_1 γ)
                                        h_0)))
                                  (@option_t_bind.{u v} m inst_1 α γ x
                                    (λ (x_0 : α),
                                    @option_t_return.{u v} m inst_1 γ
                                      (h_0 (g_0 x_0))))
                                  (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ)
                                    (@option_t_bind.{u v} m inst_1 β γ
                                      ((λ (α_0 β_0 : Type u)
                                          (f : (∀ (a : α_0), β_0))
                                          (x_0 : @option_t.{u v} m inst_1 α_0),
                                        @option_t_bind.{u v} m inst_1 α_0 β_0
                                          x_0
                                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                            (@option_t.{u v} m inst_1 β_0)
                                            (@option_t_return.{u v} m inst_1
                                              β_0) f)) α β g_0 x)
                                      (@function.comp.{u+1 u+1 v+1} β γ
                                        (@option_t.{u v} m inst_1 γ)
                                        (@option_t_return.{u v} m inst_1 γ)
                                        h_0))
                                    (@option_t_bind.{u v} m inst_1 β γ
                                      (@option_t_bind.{u v} m inst_1 α β x
                                        (@function.comp.{u+1 u+1 v+1} α β
                                          (@option_t.{u v} m inst_1 β)
                                          (@option_t_return.{u v} m inst_1 β)
                                          g_0))
                                      (@function.comp.{u+1 u+1 v+1} β γ
                                        (@option_t.{u v} m inst_1 γ)
                                        (@option_t_return.{u v} m inst_1 γ)
                                        h_0))
                                    (@option_t_bind.{u v} m inst_1 α γ x
                                      (λ (x_0 : α),
                                      @option_t_bind.{u v} m inst_1 β γ
                                        (@option_t_return.{u v} m inst_1 β
                                          (g_0 x_0))
                                        (@function.comp.{u+1 u+1 v+1} β γ
                                          (@option_t.{u v} m inst_1 γ)
                                          (@option_t_return.{u v} m inst_1 γ)
                                          h_0)))
                                    (@eq.rec.{0 v+1}
                                      (@option_t.{u v} m inst_1 β)
                                      (@option_t_bind.{u v} m inst_1 α β x
                                        (@function.comp.{u+1 u+1 v+1} α β
                                          (@option_t.{u v} m inst_1 β)
                                          (@option_t_return.{u v} m inst_1 β)
                                          g_0))
                                      (λ (x_0 : @option_t.{u v} m inst_1 β),
                                      @eq.{v+1} (@option_t.{u v} m inst_1 γ)
                                        (@option_t_bind.{u v} m inst_1 β γ x_0
                                          (@function.comp.{u+1 u+1 v+1} β γ
                                            (@option_t.{u v} m inst_1 γ)
                                            (@option_t_return.{u v} m inst_1 γ)
                                            h_0))
                                        (@option_t_bind.{u v} m inst_1 β γ
                                          (@option_t_bind.{u v} m inst_1 α β x
                                            (@function.comp.{u+1 u+1 v+1} α β
                                              (@option_t.{u v} m inst_1 β)
                                              (@option_t_return.{u v} m inst_1
                                                β) g_0))
                                          (@function.comp.{u+1 u+1 v+1} β γ
                                            (@option_t.{u v} m inst_1 γ)
                                            (@option_t_return.{u v} m inst_1 γ)
                                            h_0)))
                                      (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
                                        (@option_t_bind.{u v} m inst_1 β γ
                                          (@option_t_bind.{u v} m inst_1 α β x
                                            (@function.comp.{u+1 u+1 v+1} α β
                                              (@option_t.{u v} m inst_1 β)
                                              (@option_t_return.{u v} m inst_1
                                                β) g_0))
                                          (@function.comp.{u+1 u+1 v+1} β γ
                                            (@option_t.{u v} m inst_1 γ)
                                            (@option_t_return.{u v} m inst_1 γ)
                                            h_0)))
                                      ((λ (α_0 β_0 : Type u)
                                          (f : (∀ (a : α_0), β_0))
                                          (x_0 : @option_t.{u v} m inst_1 α_0),
                                        @option_t_bind.{u v} m inst_1 α_0 β_0
                                          x_0
                                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                            (@option_t.{u v} m inst_1 β_0)
                                            (@option_t_return.{u v} m inst_1
                                              β_0) f)) α β g_0 x)
                                      ((λ (α_0 β_0 : Type u)
                                          (f : (∀ (a : α_0), β_0))
                                          (x_0 : @option_t.{u v} m inst_1 α_0),
                                        @rfl.{v+1}
                                          (@option_t.{u v} m inst_1 β_0)
                                          (@has_bind.bind.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@has_bind.mk.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@option_t_bind.{u v} m inst_1))
                                            α_0 β_0 x_0
                                            (@function.comp.{u+1 u+1 v+1} α_0
                                              β_0 (@option_t.{u v} m inst_1 β_0)
                                              (@has_pure.pure.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_pure.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_return.{u v} m
                                                    inst_1)) β_0) f))) α β g_0
                                        x))
                                    ((λ (α_0 β_0 γ_0 : Type u)
                                        (x_0 : @option_t.{u v} m inst_1 α_0)
                                        (f :
                                          (∀ (a : α_0),
                                          @option_t.{u v} m inst_1 β_0))
                                        (g_1 :
                                          (∀ (a : β_0),
                                          @option_t.{u v} m inst_1 γ_0)),
                                      @eq.mpr.{0}
                                        (@eq.{v+1}
                                          (@option_t.{u v} m inst_1 γ_0)
                                          (@has_bind.bind.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@has_bind.mk.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@option_t_bind.{u v} m inst_1))
                                            β_0 γ_0
                                            (@has_bind.bind.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_bind.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_bind.{u v} m inst_1))
                                              α_0 β_0 x_0 f) g_1)
                                          (@has_bind.bind.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@has_bind.mk.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@option_t_bind.{u v} m inst_1))
                                            α_0 γ_0 x_0
                                            (λ (x_1 : α_0),
                                            @has_bind.bind.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_bind.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_bind.{u v} m inst_1))
                                              β_0 γ_0 (f x_1) g_1)))
                                        (@eq.{v+1}
                                          (@option_t.{u v} m inst_1 γ_0)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} α_0) (@option.{u} γ_0)
                                            x_0
                                            (λ (x_1 : @option.{u} α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f x_1)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_1)))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} α_0) (@option.{u} γ_0)
                                            x_0
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 γ_0
                                              (λ (x_1 : α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0) (f x_1)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_1)))))
                                        (@id_locked.{0}
                                          (@eq.{1} Prop
                                            (@eq.{v+1}
                                              (@option_t.{u v} m inst_1 γ_0)
                                              (@has_bind.bind.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_bind.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_bind.{u v} m
                                                    inst_1)) β_0 γ_0
                                                (@has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) α_0 β_0 x_0 f)
                                                g_1)
                                              (@has_bind.bind.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_bind.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_bind.{u v} m
                                                    inst_1)) α_0 γ_0 x_0
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) β_0 γ_0 (f x_1)
                                                  g_1)))
                                            (@eq.{v+1}
                                              (@option_t.{u v} m inst_1 γ_0)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} α_0)
                                                (@option.{u} γ_0) x_0
                                                (λ (x_1 : @option.{u} α_0),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f x_1)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1)))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} α_0)
                                                (@option.{u} γ_0) x_0
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 γ_0
                                                  (λ (x_1 : α_0),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} β_0)
                                                    (@option.{u} γ_0) (f x_1)
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 β_0 γ_0
                                                      g_1))))))
                                          ((λ (a a_0 :
                                                @option_t.{u v} m inst_1 γ_0)
                                              (e_1 :
                                                @eq.{v+1}
                                                  (@option_t.{u v} m inst_1 γ_0)
                                                  a a_0)
                                              (a_1 a_2 :
                                                @option_t.{u v} m inst_1 γ_0)
                                              (e_2 :
                                                @eq.{v+1}
                                                  (@option_t.{u v} m inst_1 γ_0)
                                                  a_1 a_2),
                                            @congr.{v+1 1}
                                              (@option_t.{u v} m inst_1 γ_0)
                                              Prop
                                              (@eq.{v+1}
                                                (@option_t.{u v} m inst_1 γ_0)
                                                a)
                                              (@eq.{v+1}
                                                (@option_t.{u v} m inst_1 γ_0)
                                                a_0) a_1 a_2
                                              (@congr_arg.{v+1 max (v+1) 1}
                                                (@option_t.{u v} m inst_1 γ_0)
                                                (∀ (a_3 :
                                                    @option_t.{u v} m inst_1
                                                      γ_0),
                                                Prop) a a_0
                                                (@eq.{v+1}
                                                  (@option_t.{u v} m inst_1
                                                    γ_0)) e_1) e_2)
                                            (@has_bind.bind.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_bind.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_bind.{u v} m inst_1))
                                              β_0 γ_0
                                              (@has_bind.bind.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_bind.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_bind.{u v} m
                                                    inst_1)) α_0 β_0 x_0 f) g_1)
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} α_0)
                                              (@option.{u} γ_0) x_0
                                              (λ (x_1 : @option.{u} α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f x_1)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_1)))
                                            (@eq.trans.{v+1}
                                              (@option_t.{u v} m inst_1 γ_0)
                                              (@option_t_bind.{u v} m inst_1 β_0
                                                γ_0
                                                (@has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) α_0 β_0 x_0 f)
                                                g_1)
                                              ((λ (this : m (@option.{u} γ_0)),
                                                this)
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} α_0)
                                                    (@option.{u} β_0) x_0
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 α_0 β_0 f))
                                                  (λ (o : @option.{u} β_0),
                                                  @option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1 o)))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} α_0)
                                                (@option.{u} γ_0) x_0
                                                (λ (x_1 : @option.{u} α_0),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f x_1)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1)))
                                              (@eq.trans.{v+1}
                                                (@option_t.{u v} m inst_1 γ_0)
                                                (@option_t_bind.{u v} m inst_1
                                                  β_0 γ_0
                                                  (@has_bind.bind.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@has_bind.mk.{u v}
                                                      (@option_t.{u v} m inst_1)
                                                      (@option_t_bind.{u v} m
                                                        inst_1)) α_0 β_0 x_0 f)
                                                  g_1)
                                                (@option_t_bind.{u v} m inst_1
                                                  β_0 γ_0
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} α_0)
                                                    (@option.{u} β_0) x_0
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 α_0 β_0 f))
                                                  g_1)
                                                ((λ (this :
                                                      m (@option.{u} γ_0)),
                                                  this)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} β_0)
                                                    (@option.{u} γ_0)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@option.{u} α_0)
                                                      (@option.{u} β_0) x_0
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 β_0 f))
                                                    (λ (o : @option.{u} β_0),
                                                    @option_t_bind._match_1.{u
                                                      v} m inst_1 β_0 γ_0 g_1
                                                      o)))
                                                ((λ (a a_0 :
                                                      @option_t.{u v} m inst_1
                                                        β_0)
                                                    (e_1 :
                                                      @eq.{v+1}
                                                        (@option_t.{u v} m
                                                          inst_1 β_0) a a_0)
                                                    (b b_0 :
                                                      (∀ (a_1 : β_0),
                                                      @option_t.{u v} m inst_1
                                                        γ_0))
                                                    (e_2 :
                                                      @eq.{max (u+1) (v+1)}
                                                        (∀ (a_1 : β_0),
                                                        @option_t.{u v} m inst_1
                                                          γ_0) b b_0),
                                                  @congr.{max (u+1) (v+1) v+1}
                                                    (∀ (a_1 : β_0),
                                                    @option_t.{u v} m inst_1
                                                      γ_0)
                                                    (@option_t.{u v} m inst_1
                                                      γ_0)
                                                    (@option_t_bind.{u v} m
                                                      inst_1 β_0 γ_0 a)
                                                    (@option_t_bind.{u v} m
                                                      inst_1 β_0 γ_0 a_0) b b_0
                                                    (@congr_arg.{v+1
                                                      max (u+1)
                                                      (v+1)}
                                                      (@option_t.{u v} m inst_1
                                                        β_0)
                                                      (∀ (b_1 :
                                                          (∀ (a_1 : β_0),
                                                          @option_t.{u v} m
                                                            inst_1 γ_0)),
                                                      @option_t.{u v} m inst_1
                                                        γ_0) a a_0
                                                      (@option_t_bind.{u v} m
                                                        inst_1 β_0 γ_0) e_1)
                                                    e_2)
                                                  (@has_bind.bind.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@has_bind.mk.{u v}
                                                      (@option_t.{u v} m inst_1)
                                                      (@option_t_bind.{u v} m
                                                        inst_1)) α_0 β_0 x_0 f)
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} α_0)
                                                    (@option.{u} β_0) x_0
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 α_0 β_0 f))
                                                  (@option_t_bind.equations._eqn_1.{u
                                                    v} m inst_1 α_0 β_0 x_0 f)
                                                  g_1 g_1
                                                  (@eq.refl.{max (u+1) (v+1)}
                                                    (∀ (a : β_0),
                                                    @option_t.{u v} m inst_1
                                                      γ_0) g_1))
                                                (@option_t_bind.equations._eqn_1.{u
                                                  v} m inst_1 β_0 γ_0
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} α_0)
                                                    (@option.{u} β_0) x_0
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 α_0 β_0 f))
                                                  g_1))
                                              (@monad.bind_assoc.{u v} m inst_1
                                                (@option.{u} α_0)
                                                (@option.{u} β_0)
                                                (@option.{u} γ_0) x_0
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_1)))
                                            (@has_bind.bind.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_bind.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_bind.{u v} m inst_1))
                                              α_0 γ_0 x_0
                                              (λ (x_1 : α_0),
                                              @has_bind.bind.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_bind.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_bind.{u v} m
                                                    inst_1)) β_0 γ_0 (f x_1)
                                                g_1))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} α_0)
                                              (@option.{u} γ_0) x_0
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 γ_0
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0) (f x_1)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1))))
                                            (@eq.trans.{v+1}
                                              (@option_t.{u v} m inst_1 γ_0)
                                              (@option_t_bind.{u v} m inst_1 α_0
                                                γ_0 x_0
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) β_0 γ_0 (f x_1)
                                                  g_1))
                                              (@option_t_bind.{u v} m inst_1 α_0
                                                γ_0 x_0
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0) (f x_1)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1)))
                                              ((λ (this : m (@option.{u} γ_0)),
                                                this)
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} α_0)
                                                  (@option.{u} γ_0) x_0
                                                  (λ (o : @option.{u} α_0),
                                                  @option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 γ_0
                                                    (λ (x_1 : α_0),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@option.{u} β_0)
                                                      (@option.{u} γ_0) (f x_1)
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 β_0 γ_0
                                                        g_1)) o)))
                                              ((λ (a a_0 :
                                                    @option_t.{u v} m inst_1
                                                      α_0)
                                                  (e_1 :
                                                    @eq.{v+1}
                                                      (@option_t.{u v} m inst_1
                                                        α_0) a a_0)
                                                  (b b_0 :
                                                    (∀ (a_1 : α_0),
                                                    @option_t.{u v} m inst_1
                                                      γ_0))
                                                  (e_2 :
                                                    @eq.{max (u+1) (v+1)}
                                                      (∀ (a_1 : α_0),
                                                      @option_t.{u v} m inst_1
                                                        γ_0) b b_0),
                                                @congr.{max (u+1) (v+1) v+1}
                                                  (∀ (a_1 : α_0),
                                                  @option_t.{u v} m inst_1 γ_0)
                                                  (@option_t.{u v} m inst_1 γ_0)
                                                  (@option_t_bind.{u v} m inst_1
                                                    α_0 γ_0 a)
                                                  (@option_t_bind.{u v} m inst_1
                                                    α_0 γ_0 a_0) b b_0
                                                  (@congr_arg.{v+1
                                                    max (u+1)
                                                    (v+1)}
                                                    (@option_t.{u v} m inst_1
                                                      α_0)
                                                    (∀ (b_1 :
                                                        (∀ (a_1 : α_0),
                                                        @option_t.{u v} m inst_1
                                                          γ_0)),
                                                    @option_t.{u v} m inst_1
                                                      γ_0) a a_0
                                                    (@option_t_bind.{u v} m
                                                      inst_1 α_0 γ_0) e_1) e_2)
                                                x_0 x_0
                                                (@eq.refl.{v+1}
                                                  (@option_t.{u v} m inst_1 α_0)
                                                  x_0)
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) β_0 γ_0 (f x_1)
                                                  g_1)
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0) (f x_1)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1))
                                                (@funext.{u+1 v+1} α_0
                                                  (λ (x_1 : α_0),
                                                  @option_t.{u v} m inst_1 γ_0)
                                                  (λ (x_1 : α_0),
                                                  @option_t_bind.{u v} m inst_1
                                                    β_0 γ_0 (f x_1) g_1)
                                                  (λ (x_1 : α_0),
                                                  (λ (this :
                                                        m (@option.{u} γ_0)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@option.{u} β_0)
                                                      (@option.{u} γ_0) (f x_1)
                                                      (λ (o : @option.{u} β_0),
                                                      @option_t_bind._match_1.{u
                                                        v} m inst_1 β_0 γ_0 g_1
                                                        o)))
                                                  (λ (x_1 : α_0),
                                                  @option_t_bind.equations._eqn_1.{u
                                                    v} m inst_1 β_0 γ_0 (f x_1)
                                                    g_1)))
                                              (@option_t_bind.equations._eqn_1.{u
                                                v} m inst_1 α_0 γ_0 x_0
                                                (λ (x_1 : α_0),
                                                @has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0) (f x_1)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1))))))
                                        (@congr_arg.{max (u+1) (v+1) v+1}
                                          (∀ (x_1 : @option.{u} α_0),
                                          m (@option.{u} γ_0))
                                          (@option_t.{u v} m inst_1 γ_0)
                                          (λ (x_1 : @option.{u} α_0),
                                          @has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 β_0 f x_1)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_1))
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 γ_0
                                            (λ (x_1 : α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0) (f x_1)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_1)))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} α_0) (@option.{u} γ_0)
                                            x_0)
                                          (@funext.{u+1 v+1} (@option.{u} α_0)
                                            (λ (x_1 : @option.{u} α_0),
                                            m (@option.{u} γ_0))
                                            (λ (x_1 : @option.{u} α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f x_1)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_1))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 γ_0
                                              (λ (x_1 : α_0),
                                              @has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0) (f x_1)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_1)))
                                            (λ (x_1 : @option.{u} α_0),
                                            @option.cases_on.{0 u} α_0
                                              (λ (x_2 : @option.{u} α_0),
                                              @eq.{v+1} (m (@option.{u} γ_0))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f x_2)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1))
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 γ_0
                                                  (λ (x_3 : α_0),
                                                  @has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} β_0)
                                                    (@option.{u} γ_0) (f x_3)
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 β_0 γ_0 g_1))
                                                  x_2)) x_1
                                              (@eq.mpr.{0}
                                                (@eq.{v+1} (m (@option.{u} γ_0))
                                                  (@has_bind.bind.{u v} m
                                                    (@monad.to_has_bind.{u v} m
                                                      inst_1) (@option.{u} β_0)
                                                    (@option.{u} γ_0)
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 α_0 β_0 f
                                                      (@option.none.{u} α_0))
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 β_0 γ_0 g_1))
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 γ_0
                                                    (λ (x_2 : α_0),
                                                    @has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@option.{u} β_0)
                                                      (@option.{u} γ_0) (f x_2)
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 β_0 γ_0
                                                        g_1))
                                                    (@option.none.{u} α_0)))
                                                @true
                                                (@id_locked.{0}
                                                  (@eq.{1} Prop
                                                    (@eq.{v+1}
                                                      (m (@option.{u} γ_0))
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@option.{u} β_0)
                                                        (@option.{u} γ_0)
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 α_0 β_0 f
                                                          (@option.none.{u}
                                                            α_0))
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 β_0 γ_0
                                                          g_1))
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 γ_0
                                                        (λ (x_2 : α_0),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@option.{u} β_0)
                                                          (@option.{u} γ_0)
                                                          (f x_2)
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 β_0 γ_0
                                                            g_1))
                                                        (@option.none.{u} α_0)))
                                                    @true)
                                                  (@eq.trans.{1} Prop
                                                    (@eq.{v+1}
                                                      (m (@option.{u} γ_0))
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@option.{u} β_0)
                                                        (@option.{u} γ_0)
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 α_0 β_0 f
                                                          (@option.none.{u}
                                                            α_0))
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 β_0 γ_0
                                                          g_1))
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 γ_0
                                                        (λ (x_2 : α_0),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@option.{u} β_0)
                                                          (@option.{u} γ_0)
                                                          (f x_2)
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 β_0 γ_0
                                                            g_1))
                                                        (@option.none.{u} α_0)))
                                                    (@eq.{v+1}
                                                      (m (@option.{u} γ_0))
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} γ_0)
                                                        (@option.none.{u} γ_0))
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} γ_0)
                                                        (@option.none.{u} γ_0)))
                                                    @true
                                                    ((λ (a a_0 :
                                                          m (@option.{u} γ_0))
                                                        (e_1 :
                                                          @eq.{v+1}
                                                            (m
                                                              (@option.{u} γ_0))
                                                            a a_0)
                                                        (a_1 a_2 :
                                                          m (@option.{u} γ_0))
                                                        (e_2 :
                                                          @eq.{v+1}
                                                            (m
                                                              (@option.{u} γ_0))
                                                            a_1 a_2),
                                                      @congr.{v+1 1}
                                                        (m (@option.{u} γ_0))
                                                        Prop
                                                        (@eq.{v+1}
                                                          (m (@option.{u} γ_0))
                                                          a)
                                                        (@eq.{v+1}
                                                          (m (@option.{u} γ_0))
                                                          a_0) a_1 a_2
                                                        (@congr_arg.{v+1
                                                          max (v+1)
                                                          1}
                                                          (m (@option.{u} γ_0))
                                                          (∀ (a_3 :
                                                              m
                                                                (@option.{u}
                                                                  γ_0)),
                                                          Prop) a a_0
                                                          (@eq.{v+1}
                                                            (m
                                                              (@option.{u}
                                                                γ_0))) e_1) e_2)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@option.{u} β_0)
                                                        (@option.{u} γ_0)
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 α_0 β_0 f
                                                          (@option.none.{u}
                                                            α_0))
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 β_0 γ_0
                                                          g_1))
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} γ_0)
                                                        (@option.none.{u} γ_0))
                                                      (@eq.trans.{v+1}
                                                        (m (@option.{u} γ_0))
                                                        (@has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@option.{u} β_0)
                                                          (@option.{u} γ_0)
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 α_0 β_0
                                                            f
                                                            (@option.none.{u}
                                                              α_0))
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 β_0 γ_0
                                                            g_1))
                                                        (@option_t_bind._match_1.{u
                                                          v} m inst_1 β_0 γ_0
                                                          g_1
                                                          (@option.none.{u}
                                                            β_0))
                                                        (@return.{u v} m inst_1
                                                          (@option.{u} γ_0)
                                                          (@option.none.{u}
                                                            γ_0))
                                                        (@eq.trans.{v+1}
                                                          (m (@option.{u} γ_0))
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@option.{u} β_0)
                                                            (@option.{u} γ_0)
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 α_0
                                                              β_0 f
                                                              (@option.none.{u}
                                                                α_0))
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 β_0
                                                              γ_0 g_1))
                                                          (@has_bind.bind.{u v}
                                                            m
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@option.{u} β_0)
                                                            (@option.{u} γ_0)
                                                            (@return.{u v} m
                                                              inst_1
                                                              (@option.{u} β_0)
                                                              (@option.none.{u}
                                                                β_0))
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 β_0
                                                              γ_0 g_1))
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 β_0 γ_0
                                                            g_1
                                                            (@option.none.{u}
                                                              β_0))
                                                          ((λ [c :
                                                                @has_bind.{u v}
                                                                  m]
                                                              {α_1 β_1 : Type u}
                                                              (a a_0 : m α_1)
                                                              (e_4 :
                                                                @eq.{v+1}
                                                                  (m α_1) a a_0)
                                                              (a_1 a_2 :
                                                                (∀ (a_3 : α_1),
                                                                m β_1))
                                                              (e_5 :
                                                                @eq.{max (u+1)
                                                                  (v+1)}
                                                                  (∀ (a_3 :
                                                                      α_1),
                                                                  m β_1) a_1
                                                                  a_2),
                                                            @congr.{max (u+1)
                                                              (v+1) v+1}
                                                              (∀ (a_3 : α_1),
                                                              m β_1) (m β_1)
                                                              (@has_bind.bind.{u
                                                                v} m c α_1 β_1
                                                                a)
                                                              (@has_bind.bind.{u
                                                                v} m c α_1 β_1
                                                                a_0) a_1 a_2
                                                              (@congr_arg.{v+1
                                                                max (u+1)
                                                                (v+1)} (m α_1)
                                                                (∀ (a_3 :
                                                                    (∀ (a_4 :
                                                                        α_1),
                                                                    m β_1)),
                                                                m β_1) a a_0
                                                                (@has_bind.bind.{u
                                                                  v} m c α_1
                                                                  β_1) e_4) e_5)
                                                            (@monad.to_has_bind.{u
                                                              v} m inst_1)
                                                            (@option.{u} β_0)
                                                            (@option.{u} γ_0)
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 α_0
                                                              β_0 f
                                                              (@option.none.{u}
                                                                α_0))
                                                            (@return.{u v} m
                                                              inst_1
                                                              (@option.{u} β_0)
                                                              (@option.none.{u}
                                                                β_0))
                                                            (@option_t_bind._match_1.equations._eqn_1.{v
                                                              u} m inst_1 α_0
                                                              β_0 f)
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 β_0
                                                              γ_0 g_1)
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 β_0
                                                              γ_0 g_1)
                                                            (@eq.refl.{max (u+1)
                                                              (v+1)}
                                                              (∀ (a :
                                                                  @option.{u}
                                                                    β_0),
                                                              m
                                                                (@option.{u}
                                                                  γ_0))
                                                              (@option_t_bind._match_1.{u
                                                                v} m inst_1 β_0
                                                                γ_0 g_1)))
                                                          (@monad.pure_bind.{u
                                                            v} m inst_1
                                                            (@option.{u} β_0)
                                                            (@option.{u} γ_0)
                                                            (@option.none.{u}
                                                              β_0)
                                                            (@option_t_bind._match_1.{u
                                                              v} m inst_1 β_0
                                                              γ_0 g_1)))
                                                        (@option_t_bind._match_1.equations._eqn_1.{v
                                                          u} m inst_1 β_0 γ_0
                                                          g_1))
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 γ_0
                                                        (λ (x_2 : α_0),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@option.{u} β_0)
                                                          (@option.{u} γ_0)
                                                          (f x_2)
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 β_0 γ_0
                                                            g_1))
                                                        (@option.none.{u} α_0))
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} γ_0)
                                                        (@option.none.{u} γ_0))
                                                      (@option_t_bind._match_1.equations._eqn_1.{v
                                                        u} m inst_1 α_0 γ_0
                                                        (λ (x_2 : α_0),
                                                        @has_bind.bind.{u v} m
                                                          (@monad.to_has_bind.{u
                                                            v} m inst_1)
                                                          (@option.{u} β_0)
                                                          (@option.{u} γ_0)
                                                          (f x_2)
                                                          (@option_t_bind._match_1.{u
                                                            v} m inst_1 β_0 γ_0
                                                            g_1))))
                                                    (@propext
                                                      (@eq.{v+1}
                                                        (m (@option.{u} γ_0))
                                                        (@return.{u v} m inst_1
                                                          (@option.{u} γ_0)
                                                          (@option.none.{u}
                                                            γ_0))
                                                        (@return.{u v} m inst_1
                                                          (@option.{u} γ_0)
                                                          (@option.none.{u}
                                                            γ_0))) @true
                                                      (@eq_self_iff_true.{v+1}
                                                        (m (@option.{u} γ_0))
                                                        (@return.{u v} m inst_1
                                                          (@option.{u} γ_0)
                                                          (@option.none.{u}
                                                            γ_0)))))) @trivial)
                                              (λ (a : α_0),
                                              @eq.refl.{v+1}
                                                (m (@option.{u} γ_0))
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} β_0)
                                                  (@option.{u} γ_0)
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f
                                                    (@option.some.{u} α_0 a))
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_1)))))))
                                      α β γ x
                                      (@function.comp.{u+1 u+1 v+1} α β
                                        (@option_t.{u v} m inst_1 β)
                                        (@option_t_return.{u v} m inst_1 β) g_0)
                                      (@function.comp.{u+1 u+1 v+1} β γ
                                        (@option_t.{u v} m inst_1 γ)
                                        (@option_t_return.{u v} m inst_1 γ)
                                        h_0)))
                                  (@congr_arg.{max (u+1) (v+1) v+1}
                                    (∀ (x_0 : α), @option_t.{u v} m inst_1 γ)
                                    (@option_t.{u v} m inst_1 γ)
                                    (λ (x_0 : α),
                                    @option_t_bind.{u v} m inst_1 β γ
                                      (@option_t_return.{u v} m inst_1 β
                                        (g_0 x_0))
                                      (@function.comp.{u+1 u+1 v+1} β γ
                                        (@option_t.{u v} m inst_1 γ)
                                        (@option_t_return.{u v} m inst_1 γ)
                                        h_0))
                                    (λ (x_0 : α),
                                    @option_t_return.{u v} m inst_1 γ
                                      (h_0 (g_0 x_0)))
                                    (@option_t_bind.{u v} m inst_1 α γ x)
                                    (@funext.{u+1 v+1} α
                                      (λ (x_0 : α), @option_t.{u v} m inst_1 γ)
                                      (λ (x_0 : α),
                                      @option_t_bind.{u v} m inst_1 β γ
                                        (@option_t_return.{u v} m inst_1 β
                                          (g_0 x_0))
                                        (@function.comp.{u+1 u+1 v+1} β γ
                                          (@option_t.{u v} m inst_1 γ)
                                          (@option_t_return.{u v} m inst_1 γ)
                                          h_0))
                                      (λ (x_0 : α),
                                      @option_t_return.{u v} m inst_1 γ
                                        (h_0 (g_0 x_0)))
                                      (λ (x_0 : α),
                                      (λ (α_0 β_0 : Type u) (x_1 : α_0)
                                          (f :
                                            (∀ (a : α_0),
                                            @option_t.{u v} m inst_1 β_0)),
                                        @eq.mpr.{0}
                                          (@eq.{v+1}
                                            (@option_t.{u v} m inst_1 β_0)
                                            (@has_bind.bind.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_bind.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_bind.{u v} m inst_1))
                                              α_0 β_0
                                              (@has_pure.pure.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_pure.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_return.{u v} m
                                                    inst_1)) α_0 x_1) f)
                                            (f x_1)) @true
                                          (@id_locked.{0}
                                            (@eq.{1} Prop
                                              (@eq.{v+1}
                                                (@option_t.{u v} m inst_1 β_0)
                                                (@has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) α_0 β_0
                                                  (@has_pure.pure.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@has_pure.mk.{u v}
                                                      (@option_t.{u v} m inst_1)
                                                      (@option_t_return.{u v} m
                                                        inst_1)) α_0 x_1) f)
                                                (f x_1)) @true)
                                            (@eq.trans.{1} Prop
                                              (@eq.{v+1}
                                                (@option_t.{u v} m inst_1 β_0)
                                                (@has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) α_0 β_0
                                                  (@has_pure.pure.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@has_pure.mk.{u v}
                                                      (@option_t.{u v} m inst_1)
                                                      (@option_t_return.{u v} m
                                                        inst_1)) α_0 x_1) f)
                                                (f x_1))
                                              (@eq.{v+1}
                                                (@option_t.{u v} m inst_1 β_0)
                                                (f x_1) (f x_1)) @true
                                              ((λ (a a_0 :
                                                    @option_t.{u v} m inst_1
                                                      β_0)
                                                  (e_1 :
                                                    @eq.{v+1}
                                                      (@option_t.{u v} m inst_1
                                                        β_0) a a_0)
                                                  (a_1 a_2 :
                                                    @option_t.{u v} m inst_1
                                                      β_0)
                                                  (e_2 :
                                                    @eq.{v+1}
                                                      (@option_t.{u v} m inst_1
                                                        β_0) a_1 a_2),
                                                @congr.{v+1 1}
                                                  (@option_t.{u v} m inst_1 β_0)
                                                  Prop
                                                  (@eq.{v+1}
                                                    (@option_t.{u v} m inst_1
                                                      β_0) a)
                                                  (@eq.{v+1}
                                                    (@option_t.{u v} m inst_1
                                                      β_0) a_0) a_1 a_2
                                                  (@congr_arg.{v+1 max (v+1) 1}
                                                    (@option_t.{u v} m inst_1
                                                      β_0)
                                                    (∀ (a_3 :
                                                        @option_t.{u v} m inst_1
                                                          β_0),
                                                    Prop) a a_0
                                                    (@eq.{v+1}
                                                      (@option_t.{u v} m inst_1
                                                        β_0)) e_1) e_2)
                                                (@has_bind.bind.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_bind.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_bind.{u v} m
                                                      inst_1)) α_0 β_0
                                                  (@has_pure.pure.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@has_pure.mk.{u v}
                                                      (@option_t.{u v} m inst_1)
                                                      (@option_t_return.{u v} m
                                                        inst_1)) α_0 x_1) f)
                                                (f x_1)
                                                (@eq.trans.{v+1}
                                                  (@option_t.{u v} m inst_1 β_0)
                                                  (@option_t_bind.{u v} m inst_1
                                                    α_0 β_0
                                                    (@has_pure.pure.{u v}
                                                      (@option_t.{u v} m inst_1)
                                                      (@has_pure.mk.{u v}
                                                        (@option_t.{u v} m
                                                          inst_1)
                                                        (@option_t_return.{u v}
                                                          m inst_1)) α_0 x_1) f)
                                                  ((λ (this :
                                                        m (@option.{u} β_0)),
                                                    this)
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@option.{u} α_0)
                                                      (@option.{u} β_0)
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} α_0)
                                                        (@option.some.{u} α_0
                                                          x_1))
                                                      (λ (o : @option.{u} α_0),
                                                      @option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 β_0 f
                                                        o))) (f x_1)
                                                  (@eq.trans.{v+1}
                                                    (@option_t.{u v} m inst_1
                                                      β_0)
                                                    (@option_t_bind.{u v} m
                                                      inst_1 α_0 β_0
                                                      (@has_pure.pure.{u v}
                                                        (@option_t.{u v} m
                                                          inst_1)
                                                        (@has_pure.mk.{u v}
                                                          (@option_t.{u v} m
                                                            inst_1)
                                                          (@option_t_return.{u
                                                            v} m inst_1)) α_0
                                                        x_1) f)
                                                    (@option_t_bind.{u v} m
                                                      inst_1 α_0 β_0
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} α_0)
                                                        (@option.some.{u} α_0
                                                          x_1)) f)
                                                    ((λ (this :
                                                          m (@option.{u} β_0)),
                                                      this)
                                                      (@has_bind.bind.{u v} m
                                                        (@monad.to_has_bind.{u
                                                          v} m inst_1)
                                                        (@option.{u} α_0)
                                                        (@option.{u} β_0)
                                                        (@return.{u v} m inst_1
                                                          (@option.{u} α_0)
                                                          (@option.some.{u} α_0
                                                            x_1))
                                                        (λ (o :
                                                            @option.{u} α_0),
                                                        @option_t_bind._match_1.{u
                                                          v} m inst_1 α_0 β_0 f
                                                          o)))
                                                    ((λ (a a_0 :
                                                          @option_t.{u v} m
                                                            inst_1 α_0)
                                                        (e_1 :
                                                          @eq.{v+1}
                                                            (@option_t.{u v} m
                                                              inst_1 α_0) a a_0)
                                                        (b b_0 :
                                                          (∀ (a_1 : α_0),
                                                          @option_t.{u v} m
                                                            inst_1 β_0))
                                                        (e_2 :
                                                          @eq.{max (u+1) (v+1)}
                                                            (∀ (a_1 : α_0),
                                                            @option_t.{u v} m
                                                              inst_1 β_0) b
                                                            b_0),
                                                      @congr.{max (u+1)
                                                        (v+1) v+1}
                                                        (∀ (a_1 : α_0),
                                                        @option_t.{u v} m inst_1
                                                          β_0)
                                                        (@option_t.{u v} m
                                                          inst_1 β_0)
                                                        (@option_t_bind.{u v} m
                                                          inst_1 α_0 β_0 a)
                                                        (@option_t_bind.{u v} m
                                                          inst_1 α_0 β_0 a_0) b
                                                        b_0
                                                        (@congr_arg.{v+1
                                                          max (u+1)
                                                          (v+1)}
                                                          (@option_t.{u v} m
                                                            inst_1 α_0)
                                                          (∀ (b_1 :
                                                              (∀ (a_1 : α_0),
                                                              @option_t.{u v} m
                                                                inst_1 β_0)),
                                                          @option_t.{u v} m
                                                            inst_1 β_0) a a_0
                                                          (@option_t_bind.{u v}
                                                            m inst_1 α_0 β_0)
                                                          e_1) e_2)
                                                      (@has_pure.pure.{u v}
                                                        (@option_t.{u v} m
                                                          inst_1)
                                                        (@has_pure.mk.{u v}
                                                          (@option_t.{u v} m
                                                            inst_1)
                                                          (@option_t_return.{u
                                                            v} m inst_1)) α_0
                                                        x_1)
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} α_0)
                                                        (@option.some.{u} α_0
                                                          x_1))
                                                      (@option_t_return.equations._eqn_1.{u
                                                        v} m inst_1 α_0 x_1) f f
                                                      (@eq.refl.{max (u+1)
                                                        (v+1)}
                                                        (∀ (a : α_0),
                                                        @option_t.{u v} m inst_1
                                                          β_0) f))
                                                    (@option_t_bind.equations._eqn_1.{u
                                                      v} m inst_1 α_0 β_0
                                                      (@return.{u v} m inst_1
                                                        (@option.{u} α_0)
                                                        (@option.some.{u} α_0
                                                          x_1)) f))
                                                  (@eq.trans.{v+1}
                                                    (m (@option.{u} β_0))
                                                    (@has_bind.bind.{u v} m
                                                      (@monad.to_has_bind.{u v}
                                                        m inst_1)
                                                      (@option.{u} α_0)
                                                      (@option.{u} β_0)
                                                      (@has_pure.pure.{u v} m
                                                        (@applicative.to_has_pure.{u
                                                          v} m
                                                          (@monad.to_applicative.{u
                                                            v} m inst_1))
                                                        (@option.{u} α_0)
                                                        (@option.some.{u} α_0
                                                          x_1))
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 β_0 f))
                                                    (@option_t_bind._match_1.{u
                                                      v} m inst_1 α_0 β_0 f
                                                      (@option.some.{u} α_0
                                                        x_1)) (f x_1)
                                                    (@monad.pure_bind.{u v} m
                                                      inst_1 (@option.{u} α_0)
                                                      (@option.{u} β_0)
                                                      (@option.some.{u} α_0 x_1)
                                                      (@option_t_bind._match_1.{u
                                                        v} m inst_1 α_0 β_0 f))
                                                    (@option_t_bind._match_1.equations._eqn_2.{v
                                                      u} m inst_1 α_0 β_0 f
                                                      x_1))) (f x_1) (f x_1)
                                                (@eq.refl.{v+1}
                                                  (@option_t.{u v} m inst_1 β_0)
                                                  (f x_1)))
                                              (@propext
                                                (@eq.{v+1}
                                                  (@option_t.{u v} m inst_1 β_0)
                                                  (f x_1) (f x_1)) @true
                                                (@eq_self_iff_true.{v+1}
                                                  (@option_t.{u v} m inst_1 β_0)
                                                  (f x_1))))) @trivial) β γ
                                        (g_0 x_0)
                                        (@function.comp.{u+1 u+1 v+1} β γ
                                          (@option_t.{u v} m inst_1 γ)
                                          (@option_t_return.{u v} m inst_1 γ)
                                          h_0)))))
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
                                    (@has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                      x_0
                                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                        (@option_t.{u v} m inst_1 β_0)
                                        (@has_pure.pure.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@has_pure.mk.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@option_t_return.{u v} m inst_1))
                                          β_0) f))) α γ
                                  (λ (x_0 : α), h_0 (g_0 x_0)) x))
                              (@eq.symm.{v+1} (@option_t.{u v} m inst_1 γ)
                                (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                                  (@option_t_return.{u v} m inst_1
                                    (∀ (a : α), γ)
                                    (@function.comp.{u+1 u+1 u+1} α β γ h_0
                                      g_0))
                                  (λ (x_0 : (∀ (a : α), γ)),
                                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                      (x_1 : @option_t.{u v} m inst_1 α_0),
                                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                        (@option_t.{u v} m inst_1 β_0)
                                        (@option_t_return.{u v} m inst_1 β_0)
                                        f)) α γ x_0 x))
                                ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                    (x_0 : @option_t.{u v} m inst_1 α_0),
                                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                      (@option_t.{u v} m inst_1 β_0)
                                      (@option_t_return.{u v} m inst_1 β_0) f))
                                  α γ
                                  (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                  x)
                                ((λ (α_0 β_0 : Type u) (x_0 : α_0)
                                    (f :
                                      (∀ (a : α_0),
                                      @option_t.{u v} m inst_1 β_0)),
                                  @eq.mpr.{0}
                                    (@eq.{v+1} (@option_t.{u v} m inst_1 β_0)
                                      (@has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) α_0
                                        β_0
                                        (@has_pure.pure.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@has_pure.mk.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@option_t_return.{u v} m inst_1))
                                          α_0 x_0) f) (f x_0)) @true
                                    (@id_locked.{0}
                                      (@eq.{1} Prop
                                        (@eq.{v+1}
                                          (@option_t.{u v} m inst_1 β_0)
                                          (@has_bind.bind.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@has_bind.mk.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@option_t_bind.{u v} m inst_1))
                                            α_0 β_0
                                            (@has_pure.pure.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_pure.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_return.{u v} m
                                                  inst_1)) α_0 x_0) f) (f x_0))
                                        @true)
                                      (@eq.trans.{1} Prop
                                        (@eq.{v+1}
                                          (@option_t.{u v} m inst_1 β_0)
                                          (@has_bind.bind.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@has_bind.mk.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@option_t_bind.{u v} m inst_1))
                                            α_0 β_0
                                            (@has_pure.pure.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_pure.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_return.{u v} m
                                                  inst_1)) α_0 x_0) f) (f x_0))
                                        (@eq.{v+1}
                                          (@option_t.{u v} m inst_1 β_0) (f x_0)
                                          (f x_0)) @true
                                        ((λ (a a_0 :
                                              @option_t.{u v} m inst_1 β_0)
                                            (e_1 :
                                              @eq.{v+1}
                                                (@option_t.{u v} m inst_1 β_0) a
                                                a_0)
                                            (a_1 a_2 :
                                              @option_t.{u v} m inst_1 β_0)
                                            (e_2 :
                                              @eq.{v+1}
                                                (@option_t.{u v} m inst_1 β_0)
                                                a_1 a_2),
                                          @congr.{v+1 1}
                                            (@option_t.{u v} m inst_1 β_0) Prop
                                            (@eq.{v+1}
                                              (@option_t.{u v} m inst_1 β_0) a)
                                            (@eq.{v+1}
                                              (@option_t.{u v} m inst_1 β_0)
                                              a_0) a_1 a_2
                                            (@congr_arg.{v+1 max (v+1) 1}
                                              (@option_t.{u v} m inst_1 β_0)
                                              (∀ (a_3 :
                                                  @option_t.{u v} m inst_1 β_0),
                                              Prop) a a_0
                                              (@eq.{v+1}
                                                (@option_t.{u v} m inst_1 β_0))
                                              e_1) e_2)
                                          (@has_bind.bind.{u v}
                                            (@option_t.{u v} m inst_1)
                                            (@has_bind.mk.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@option_t_bind.{u v} m inst_1))
                                            α_0 β_0
                                            (@has_pure.pure.{u v}
                                              (@option_t.{u v} m inst_1)
                                              (@has_pure.mk.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@option_t_return.{u v} m
                                                  inst_1)) α_0 x_0) f) (f x_0)
                                          (@eq.trans.{v+1}
                                            (@option_t.{u v} m inst_1 β_0)
                                            (@option_t_bind.{u v} m inst_1 α_0
                                              β_0
                                              (@has_pure.pure.{u v}
                                                (@option_t.{u v} m inst_1)
                                                (@has_pure.mk.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@option_t_return.{u v} m
                                                    inst_1)) α_0 x_0) f)
                                            ((λ (this : m (@option.{u} β_0)),
                                              this)
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} α_0)
                                                (@option.{u} β_0)
                                                (@return.{u v} m inst_1
                                                  (@option.{u} α_0)
                                                  (@option.some.{u} α_0 x_0))
                                                (λ (o : @option.{u} α_0),
                                                @option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f o))) (f x_0)
                                            (@eq.trans.{v+1}
                                              (@option_t.{u v} m inst_1 β_0)
                                              (@option_t_bind.{u v} m inst_1 α_0
                                                β_0
                                                (@has_pure.pure.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_pure.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_return.{u v} m
                                                      inst_1)) α_0 x_0) f)
                                              (@option_t_bind.{u v} m inst_1 α_0
                                                β_0
                                                (@return.{u v} m inst_1
                                                  (@option.{u} α_0)
                                                  (@option.some.{u} α_0 x_0)) f)
                                              ((λ (this : m (@option.{u} β_0)),
                                                this)
                                                (@has_bind.bind.{u v} m
                                                  (@monad.to_has_bind.{u v} m
                                                    inst_1) (@option.{u} α_0)
                                                  (@option.{u} β_0)
                                                  (@return.{u v} m inst_1
                                                    (@option.{u} α_0)
                                                    (@option.some.{u} α_0 x_0))
                                                  (λ (o : @option.{u} α_0),
                                                  @option_t_bind._match_1.{u v}
                                                    m inst_1 α_0 β_0 f o)))
                                              ((λ (a a_0 :
                                                    @option_t.{u v} m inst_1
                                                      α_0)
                                                  (e_1 :
                                                    @eq.{v+1}
                                                      (@option_t.{u v} m inst_1
                                                        α_0) a a_0)
                                                  (b b_0 :
                                                    (∀ (a_1 : α_0),
                                                    @option_t.{u v} m inst_1
                                                      β_0))
                                                  (e_2 :
                                                    @eq.{max (u+1) (v+1)}
                                                      (∀ (a_1 : α_0),
                                                      @option_t.{u v} m inst_1
                                                        β_0) b b_0),
                                                @congr.{max (u+1) (v+1) v+1}
                                                  (∀ (a_1 : α_0),
                                                  @option_t.{u v} m inst_1 β_0)
                                                  (@option_t.{u v} m inst_1 β_0)
                                                  (@option_t_bind.{u v} m inst_1
                                                    α_0 β_0 a)
                                                  (@option_t_bind.{u v} m inst_1
                                                    α_0 β_0 a_0) b b_0
                                                  (@congr_arg.{v+1
                                                    max (u+1)
                                                    (v+1)}
                                                    (@option_t.{u v} m inst_1
                                                      α_0)
                                                    (∀ (b_1 :
                                                        (∀ (a_1 : α_0),
                                                        @option_t.{u v} m inst_1
                                                          β_0)),
                                                    @option_t.{u v} m inst_1
                                                      β_0) a a_0
                                                    (@option_t_bind.{u v} m
                                                      inst_1 α_0 β_0) e_1) e_2)
                                                (@has_pure.pure.{u v}
                                                  (@option_t.{u v} m inst_1)
                                                  (@has_pure.mk.{u v}
                                                    (@option_t.{u v} m inst_1)
                                                    (@option_t_return.{u v} m
                                                      inst_1)) α_0 x_0)
                                                (@return.{u v} m inst_1
                                                  (@option.{u} α_0)
                                                  (@option.some.{u} α_0 x_0))
                                                (@option_t_return.equations._eqn_1.{u
                                                  v} m inst_1 α_0 x_0) f f
                                                (@eq.refl.{max (u+1) (v+1)}
                                                  (∀ (a : α_0),
                                                  @option_t.{u v} m inst_1 β_0)
                                                  f))
                                              (@option_t_bind.equations._eqn_1.{u
                                                v} m inst_1 α_0 β_0
                                                (@return.{u v} m inst_1
                                                  (@option.{u} α_0)
                                                  (@option.some.{u} α_0 x_0))
                                                f))
                                            (@eq.trans.{v+1}
                                              (m (@option.{u} β_0))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} α_0)
                                                (@option.{u} β_0)
                                                (@has_pure.pure.{u v} m
                                                  (@applicative.to_has_pure.{u
                                                    v} m
                                                    (@monad.to_applicative.{u v}
                                                      m inst_1))
                                                  (@option.{u} α_0)
                                                  (@option.some.{u} α_0 x_0))
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f
                                                (@option.some.{u} α_0 x_0))
                                              (f x_0)
                                              (@monad.pure_bind.{u v} m inst_1
                                                (@option.{u} α_0)
                                                (@option.{u} β_0)
                                                (@option.some.{u} α_0 x_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f))
                                              (@option_t_bind._match_1.equations._eqn_2.{v
                                                u} m inst_1 α_0 β_0 f x_0)))
                                          (f x_0) (f x_0)
                                          (@eq.refl.{v+1}
                                            (@option_t.{u v} m inst_1 β_0)
                                            (f x_0)))
                                        (@propext
                                          (@eq.{v+1}
                                            (@option_t.{u v} m inst_1 β_0)
                                            (f x_0) (f x_0)) @true
                                          (@eq_self_iff_true.{v+1}
                                            (@option_t.{u v} m inst_1 β_0)
                                            (f x_0))))) @trivial) (∀ (a : α), γ)
                                  γ (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0)
                                  (λ (x_0 : (∀ (a : α), γ)),
                                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                      (x_1 : @option_t.{u v} m inst_1 α_0),
                                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                        (@option_t.{u v} m inst_1 β_0)
                                        (@option_t_return.{u v} m inst_1 β_0)
                                        f)) α γ x_0 x)))))))
                      (@eq.symm.{v+1} (@option_t.{u v} m inst_1 γ)
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                          (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                            (∀ (a : α), γ) g
                            (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                              (∀ (a : α), γ)
                              (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                              (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                            x_0 x))
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), β) γ g
                          (λ (g_0 : (∀ (a : α), β)),
                          @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                            (@option_t_return.{u v} m inst_1 (∀ (a : α), γ)
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0 g_0))
                            (λ (x_0 : (∀ (a : α), γ)),
                            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                                (x_1 : @option_t.{u v} m inst_1 α_0),
                              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                  (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                              x_0 x)))
                        ((λ (α_0 β_0 γ_0 : Type u)
                            (x_0 : @option_t.{u v} m inst_1 α_0)
                            (f : (∀ (a : α_0), @option_t.{u v} m inst_1 β_0))
                            (g_0 : (∀ (a : β_0), @option_t.{u v} m inst_1 γ_0)),
                          @eq.mpr.{0}
                            (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                              (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                  (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0
                                  f) g_0)
                              (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                  (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                                (λ (x_1 : α_0),
                                @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                  (f x_1) g_0)))
                            (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} α_0) (@option.{u} γ_0) x_0
                                (λ (x_1 : @option.{u} α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    β_0 f x_1)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} α_0) (@option.{u} γ_0) x_0
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                  (λ (x_1 : α_0),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))))
                            (@id_locked.{0}
                              (@eq.{1} Prop
                                (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                    (@has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                      x_0 f) g_0)
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) α_0 γ_0
                                    x_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                      (f x_1) g_0)))
                                (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                                    (λ (x_1 : @option.{u} α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      γ_0
                                      (λ (x_1 : α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (f x_1)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))))))
                              ((λ (a a_0 : @option_t.{u v} m inst_1 γ_0)
                                  (e_1 :
                                    @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a
                                      a_0)
                                  (a_1 a_2 : @option_t.{u v} m inst_1 γ_0)
                                  (e_2 :
                                    @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a_1
                                      a_2),
                                @congr.{v+1 1} (@option_t.{u v} m inst_1 γ_0)
                                  Prop
                                  (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a)
                                  (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a_0)
                                  a_1 a_2
                                  (@congr_arg.{v+1 max (v+1) 1}
                                    (@option_t.{u v} m inst_1 γ_0)
                                    (∀ (a_3 : @option_t.{u v} m inst_1 γ_0),
                                    Prop) a a_0
                                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0))
                                    e_1) e_2)
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                  (@has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                    x_0 f) g_0)
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} α_0) (@option.{u} γ_0) x_0
                                  (λ (x_1 : @option.{u} α_0),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f x_1)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                  (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                    (@has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                      x_0 f) g_0)
                                  ((λ (this : m (@option.{u} γ_0)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} α_0) (@option.{u} β_0) x_0
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f))
                                      (λ (o : @option.{u} β_0),
                                      @option_t_bind._match_1.{u v} m inst_1 β_0
                                        γ_0 g_0 o)))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                                    (λ (x_1 : @option.{u} α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  (@eq.trans.{v+1}
                                    (@option_t.{u v} m inst_1 γ_0)
                                    (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                      (@has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) α_0
                                        β_0 x_0 f) g_0)
                                    (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} α_0) (@option.{u} β_0) x_0
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f)) g_0)
                                    ((λ (this : m (@option.{u} γ_0)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} α_0) (@option.{u} β_0)
                                          x_0
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 β_0 f))
                                        (λ (o : @option.{u} β_0),
                                        @option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0 o)))
                                    ((λ (a a_0 : @option_t.{u v} m inst_1 β_0)
                                        (e_1 :
                                          @eq.{v+1}
                                            (@option_t.{u v} m inst_1 β_0) a
                                            a_0)
                                        (b b_0 :
                                          (∀ (a_1 : β_0),
                                          @option_t.{u v} m inst_1 γ_0))
                                        (e_2 :
                                          @eq.{max (u+1) (v+1)}
                                            (∀ (a_1 : β_0),
                                            @option_t.{u v} m inst_1 γ_0) b
                                            b_0),
                                      @congr.{max (u+1) (v+1) v+1}
                                        (∀ (a_1 : β_0),
                                        @option_t.{u v} m inst_1 γ_0)
                                        (@option_t.{u v} m inst_1 γ_0)
                                        (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                          a)
                                        (@option_t_bind.{u v} m inst_1 β_0 γ_0
                                          a_0) b b_0
                                        (@congr_arg.{v+1 max (u+1) (v+1)}
                                          (@option_t.{u v} m inst_1 β_0)
                                          (∀ (b_1 :
                                              (∀ (a_1 : β_0),
                                              @option_t.{u v} m inst_1 γ_0)),
                                          @option_t.{u v} m inst_1 γ_0) a a_0
                                          (@option_t_bind.{u v} m inst_1 β_0
                                            γ_0) e_1) e_2)
                                      (@has_bind.bind.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_bind.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_bind.{u v} m inst_1)) α_0
                                        β_0 x_0 f)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} α_0) (@option.{u} β_0) x_0
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f))
                                      (@option_t_bind.equations._eqn_1.{u v} m
                                        inst_1 α_0 β_0 x_0 f) g_0 g_0
                                      (@eq.refl.{max (u+1) (v+1)}
                                        (∀ (a : β_0),
                                        @option_t.{u v} m inst_1 γ_0) g_0))
                                    (@option_t_bind.equations._eqn_1.{u v} m
                                      inst_1 β_0 γ_0
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} α_0) (@option.{u} β_0) x_0
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f)) g_0))
                                  (@monad.bind_assoc.{u v} m inst_1
                                    (@option.{u} α_0) (@option.{u} β_0)
                                    (@option.{u} γ_0) x_0
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                                  (λ (x_1 : α_0),
                                  @has_bind.bind.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_bind.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                    (f x_1) g_0))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} α_0) (@option.{u} γ_0) x_0
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    γ_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0))))
                                (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                                  (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                      (f x_1) g_0))
                                  (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  ((λ (this : m (@option.{u} γ_0)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                                      (λ (o : @option.{u} α_0),
                                      @option_t_bind._match_1.{u v} m inst_1 α_0
                                        γ_0
                                        (λ (x_1 : α_0),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (f x_1)
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 β_0 γ_0 g_0)) o)))
                                  ((λ (a a_0 : @option_t.{u v} m inst_1 α_0)
                                      (e_1 :
                                        @eq.{v+1} (@option_t.{u v} m inst_1 α_0)
                                          a a_0)
                                      (b b_0 :
                                        (∀ (a_1 : α_0),
                                        @option_t.{u v} m inst_1 γ_0))
                                      (e_2 :
                                        @eq.{max (u+1) (v+1)}
                                          (∀ (a_1 : α_0),
                                          @option_t.{u v} m inst_1 γ_0) b b_0),
                                    @congr.{max (u+1) (v+1) v+1}
                                      (∀ (a_1 : α_0),
                                      @option_t.{u v} m inst_1 γ_0)
                                      (@option_t.{u v} m inst_1 γ_0)
                                      (@option_t_bind.{u v} m inst_1 α_0 γ_0 a)
                                      (@option_t_bind.{u v} m inst_1 α_0 γ_0
                                        a_0) b b_0
                                      (@congr_arg.{v+1 max (u+1) (v+1)}
                                        (@option_t.{u v} m inst_1 α_0)
                                        (∀ (b_1 :
                                            (∀ (a_1 : α_0),
                                            @option_t.{u v} m inst_1 γ_0)),
                                        @option_t.{u v} m inst_1 γ_0) a a_0
                                        (@option_t_bind.{u v} m inst_1 α_0 γ_0)
                                        e_1) e_2) x_0 x_0
                                    (@eq.refl.{v+1}
                                      (@option_t.{u v} m inst_1 α_0) x_0)
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_bind.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                                      (f x_1) g_0)
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0))
                                    (@funext.{u+1 v+1} α_0
                                      (λ (x_1 : α_0),
                                      @option_t.{u v} m inst_1 γ_0)
                                      (λ (x_1 : α_0),
                                      @option_t_bind.{u v} m inst_1 β_0 γ_0
                                        (f x_1) g_0)
                                      (λ (x_1 : α_0),
                                      (λ (this : m (@option.{u} γ_0)), this)
                                        (@has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (f x_1)
                                          (λ (o : @option.{u} β_0),
                                          @option_t_bind._match_1.{u v} m inst_1
                                            β_0 γ_0 g_0 o)))
                                      (λ (x_1 : α_0),
                                      @option_t_bind.equations._eqn_1.{u v} m
                                        inst_1 β_0 γ_0 (f x_1) g_0)))
                                  (@option_t_bind.equations._eqn_1.{u v} m
                                    inst_1 α_0 γ_0 x_0
                                    (λ (x_1 : α_0),
                                    @has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (f x_1)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0))))))
                            (@congr_arg.{max (u+1) (v+1) v+1}
                              (∀ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                              (@option_t.{u v} m inst_1 γ_0)
                              (λ (x_1 : @option.{u} α_0),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0)
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0
                                  f x_1)
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0))
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                (λ (x_1 : α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} α_0) (@option.{u} γ_0) x_0)
                              (@funext.{u+1 v+1} (@option.{u} α_0)
                                (λ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                                (λ (x_1 : @option.{u} α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    β_0 f x_1)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0))
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                  (λ (x_1 : α_0),
                                  @has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (λ (x_1 : @option.{u} α_0),
                                @option.cases_on.{0 u} α_0
                                  (λ (x_2 : @option.{u} α_0),
                                  @eq.{v+1} (m (@option.{u} γ_0))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f x_2)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0))
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      γ_0
                                      (λ (x_3 : α_0),
                                      @has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (f x_3)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0)) x_2)) x_1
                                  (@eq.mpr.{0}
                                    (@eq.{v+1} (m (@option.{u} γ_0))
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} β_0) (@option.{u} γ_0)
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f (@option.none.{u} α_0))
                                        (@option_t_bind._match_1.{u v} m inst_1
                                          β_0 γ_0 g_0))
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 γ_0
                                        (λ (x_2 : α_0),
                                        @has_bind.bind.{u v} m
                                          (@monad.to_has_bind.{u v} m inst_1)
                                          (@option.{u} β_0) (@option.{u} γ_0)
                                          (f x_2)
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 β_0 γ_0 g_0))
                                        (@option.none.{u} α_0))) @true
                                    (@id_locked.{0}
                                      (@eq.{1} Prop
                                        (@eq.{v+1} (m (@option.{u} γ_0))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 β_0 f
                                              (@option.none.{u} α_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0))
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 γ_0
                                            (λ (x_2 : α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0) (f x_2)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@option.none.{u} α_0))) @true)
                                      (@eq.trans.{1} Prop
                                        (@eq.{v+1} (m (@option.{u} γ_0))
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 β_0 f
                                              (@option.none.{u} α_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0))
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 γ_0
                                            (λ (x_2 : α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0) (f x_2)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@option.none.{u} α_0)))
                                        (@eq.{v+1} (m (@option.{u} γ_0))
                                          (@return.{u v} m inst_1
                                            (@option.{u} γ_0)
                                            (@option.none.{u} γ_0))
                                          (@return.{u v} m inst_1
                                            (@option.{u} γ_0)
                                            (@option.none.{u} γ_0))) @true
                                        ((λ (a a_0 : m (@option.{u} γ_0))
                                            (e_1 :
                                              @eq.{v+1} (m (@option.{u} γ_0)) a
                                                a_0)
                                            (a_1 a_2 : m (@option.{u} γ_0))
                                            (e_2 :
                                              @eq.{v+1} (m (@option.{u} γ_0))
                                                a_1 a_2),
                                          @congr.{v+1 1} (m (@option.{u} γ_0))
                                            Prop
                                            (@eq.{v+1} (m (@option.{u} γ_0)) a)
                                            (@eq.{v+1} (m (@option.{u} γ_0))
                                              a_0) a_1 a_2
                                            (@congr_arg.{v+1 max (v+1) 1}
                                              (m (@option.{u} γ_0))
                                              (∀ (a_3 : m (@option.{u} γ_0)),
                                              Prop) a a_0
                                              (@eq.{v+1} (m (@option.{u} γ_0)))
                                              e_1) e_2)
                                          (@has_bind.bind.{u v} m
                                            (@monad.to_has_bind.{u v} m inst_1)
                                            (@option.{u} β_0) (@option.{u} γ_0)
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 α_0 β_0 f
                                              (@option.none.{u} α_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0))
                                          (@return.{u v} m inst_1
                                            (@option.{u} γ_0)
                                            (@option.none.{u} γ_0))
                                          (@eq.trans.{v+1} (m (@option.{u} γ_0))
                                            (@has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 α_0 β_0 f
                                                (@option.none.{u} α_0))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@option_t_bind._match_1.{u v} m
                                              inst_1 β_0 γ_0 g_0
                                              (@option.none.{u} β_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))
                                            (@eq.trans.{v+1}
                                              (m (@option.{u} γ_0))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f
                                                  (@option.none.{u} α_0))
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))
                                              (@has_bind.bind.{u v} m
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0)
                                                (@return.{u v} m inst_1
                                                  (@option.{u} β_0)
                                                  (@option.none.{u} β_0))
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0))
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0
                                                (@option.none.{u} β_0))
                                              ((λ [c : @has_bind.{u v} m]
                                                  {α_1 β_1 : Type u}
                                                  (a a_0 : m α_1)
                                                  (e_4 :
                                                    @eq.{v+1} (m α_1) a a_0)
                                                  (a_1 a_2 :
                                                    (∀ (a_3 : α_1), m β_1))
                                                  (e_5 :
                                                    @eq.{max (u+1) (v+1)}
                                                      (∀ (a_3 : α_1), m β_1) a_1
                                                      a_2),
                                                @congr.{max (u+1) (v+1) v+1}
                                                  (∀ (a_3 : α_1), m β_1) (m β_1)
                                                  (@has_bind.bind.{u v} m c α_1
                                                    β_1 a)
                                                  (@has_bind.bind.{u v} m c α_1
                                                    β_1 a_0) a_1 a_2
                                                  (@congr_arg.{v+1
                                                    max (u+1)
                                                    (v+1)} (m α_1)
                                                    (∀ (a_3 :
                                                        (∀ (a_4 : α_1), m β_1)),
                                                    m β_1) a a_0
                                                    (@has_bind.bind.{u v} m c
                                                      α_1 β_1) e_4) e_5)
                                                (@monad.to_has_bind.{u v} m
                                                  inst_1) (@option.{u} β_0)
                                                (@option.{u} γ_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 α_0 β_0 f
                                                  (@option.none.{u} α_0))
                                                (@return.{u v} m inst_1
                                                  (@option.{u} β_0)
                                                  (@option.none.{u} β_0))
                                                (@option_t_bind._match_1.equations._eqn_1.{v
                                                  u} m inst_1 α_0 β_0 f)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0)
                                                (@eq.refl.{max (u+1) (v+1)}
                                                  (∀ (a : @option.{u} β_0),
                                                  m (@option.{u} γ_0))
                                                  (@option_t_bind._match_1.{u v}
                                                    m inst_1 β_0 γ_0 g_0)))
                                              (@monad.pure_bind.{u v} m inst_1
                                                (@option.{u} β_0)
                                                (@option.{u} γ_0)
                                                (@option.none.{u} β_0)
                                                (@option_t_bind._match_1.{u v} m
                                                  inst_1 β_0 γ_0 g_0)))
                                            (@option_t_bind._match_1.equations._eqn_1.{v
                                              u} m inst_1 β_0 γ_0 g_0))
                                          (@option_t_bind._match_1.{u v} m
                                            inst_1 α_0 γ_0
                                            (λ (x_2 : α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0) (f x_2)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))
                                            (@option.none.{u} α_0))
                                          (@return.{u v} m inst_1
                                            (@option.{u} γ_0)
                                            (@option.none.{u} γ_0))
                                          (@option_t_bind._match_1.equations._eqn_1.{v
                                            u} m inst_1 α_0 γ_0
                                            (λ (x_2 : α_0),
                                            @has_bind.bind.{u v} m
                                              (@monad.to_has_bind.{u v} m
                                                inst_1) (@option.{u} β_0)
                                              (@option.{u} γ_0) (f x_2)
                                              (@option_t_bind._match_1.{u v} m
                                                inst_1 β_0 γ_0 g_0))))
                                        (@propext
                                          (@eq.{v+1} (m (@option.{u} γ_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))) @true
                                          (@eq_self_iff_true.{v+1}
                                            (m (@option.{u} γ_0))
                                            (@return.{u v} m inst_1
                                              (@option.{u} γ_0)
                                              (@option.none.{u} γ_0))))))
                                    @trivial)
                                  (λ (a : α_0),
                                  @eq.refl.{v+1} (m (@option.{u} γ_0))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} β_0) (@option.{u} γ_0)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f (@option.some.{u} α_0 a))
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0))))))) (∀ (a : α), β)
                          (∀ (a : α), γ) γ g
                          (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                            (∀ (a : α), γ)
                            (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                            (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                            (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                            x_0 x))))
                    (@eq.rec.{0 v+1} (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                        (∀ (a : α), γ) g
                        (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                          (∀ (a : α), γ)
                          (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                          (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                      (λ (x_0 : @option_t.{u v} m inst_1 (∀ (a : α), γ)),
                      @eq.{v+1} (@option_t.{u v} m inst_1 γ)
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                          (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                            (∀ (a : α), γ) g
                            (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                              (∀ (a : α), γ)
                              (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                              (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                          (λ (x_1 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_2 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                            x_1 x))
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ x_0
                          (λ (x_1 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_2 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                            x_1 x)))
                      (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
                        (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                          (@option_t_bind.{u v} m inst_1 (∀ (a : α), β)
                            (∀ (a : α), γ) g
                            (@function.comp.{u+1 u+1 v+1} (∀ (a : α), β)
                              (∀ (a : α), γ)
                              (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                              (@option_t_return.{u v} m inst_1 (∀ (a : α), γ))
                              (@function.comp.{u+1 u+1 u+1} α β γ h_0)))
                          (λ (x_0 : (∀ (a : α), γ)),
                          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                              (x_1 : @option_t.{u v} m inst_1 α_0),
                            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                                (@option_t.{u v} m inst_1 β_0)
                                (@option_t_return.{u v} m inst_1 β_0) f)) α γ
                            x_0 x)))
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_0 : @option_t.{u v} m inst_1 α_0),
                        @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
                          (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                            (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                              (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@has_pure.pure.{u v} (@option_t.{u v} m inst_1)
                                (@has_pure.mk.{u v} (@option_t.{u v} m inst_1)
                                  (@option_t_return.{u v} m inst_1)) β_0) f)))
                        (∀ (a : α), β) (∀ (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)))
                  (@eq.rec.{0 v+1} (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                    ((λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ) x_0 g)
                      (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                    (λ (x_0 : @option_t.{u v} m inst_1 (∀ (a : α), γ)),
                    @eq.{v+1} (@option_t.{u v} m inst_1 γ)
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ)
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                        (λ (x_1 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_2 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_1
                          x))
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ x_0
                        (λ (x_1 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_2 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_1
                          x)))
                    (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
                      (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_0 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ)
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0) g)
                        (λ (x_0 : (∀ (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0
                          x)))
                    (@option_t_bind.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                      (@option_t_return.{u v} m inst_1
                        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                      (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                          (x_1 : @option_t.{u v} m inst_1 α_0),
                        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                          (@function.comp.{u+1 u+1 v+1} α_0 β_0
                            (@option_t.{u v} m inst_1 β_0)
                            (@option_t_return.{u v} m inst_1 β_0) f))
                        (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                    (@eq.symm.{v+1} (@option_t.{u v} m inst_1 (∀ (a : α), γ))
                      (@option_t_bind.{u v} m inst_1
                        (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                        (@option_t_return.{u v} m inst_1
                          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                          (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ) x_0 g))
                      ((λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ) x_0 g)
                        (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                      ((λ (α_0 β_0 : Type u) (x_0 : α_0)
                          (f : (∀ (a : α_0), @option_t.{u v} m inst_1 β_0)),
                        @eq.mpr.{0}
                          (@eq.{v+1} (@option_t.{u v} m inst_1 β_0)
                            (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                              (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                (@option_t_bind.{u v} m inst_1)) α_0 β_0
                              (@has_pure.pure.{u v} (@option_t.{u v} m inst_1)
                                (@has_pure.mk.{u v} (@option_t.{u v} m inst_1)
                                  (@option_t_return.{u v} m inst_1)) α_0 x_0) f)
                            (f x_0)) @true
                          (@id_locked.{0}
                            (@eq.{1} Prop
                              (@eq.{v+1} (@option_t.{u v} m inst_1 β_0)
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                  (@has_pure.pure.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_pure.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_return.{u v} m inst_1)) α_0
                                    x_0) f) (f x_0)) @true)
                            (@eq.trans.{1} Prop
                              (@eq.{v+1} (@option_t.{u v} m inst_1 β_0)
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                  (@has_pure.pure.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_pure.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_return.{u v} m inst_1)) α_0
                                    x_0) f) (f x_0))
                              (@eq.{v+1} (@option_t.{u v} m inst_1 β_0) (f x_0)
                                (f x_0)) @true
                              ((λ (a a_0 : @option_t.{u v} m inst_1 β_0)
                                  (e_1 :
                                    @eq.{v+1} (@option_t.{u v} m inst_1 β_0) a
                                      a_0)
                                  (a_1 a_2 : @option_t.{u v} m inst_1 β_0)
                                  (e_2 :
                                    @eq.{v+1} (@option_t.{u v} m inst_1 β_0) a_1
                                      a_2),
                                @congr.{v+1 1} (@option_t.{u v} m inst_1 β_0)
                                  Prop
                                  (@eq.{v+1} (@option_t.{u v} m inst_1 β_0) a)
                                  (@eq.{v+1} (@option_t.{u v} m inst_1 β_0) a_0)
                                  a_1 a_2
                                  (@congr_arg.{v+1 max (v+1) 1}
                                    (@option_t.{u v} m inst_1 β_0)
                                    (∀ (a_3 : @option_t.{u v} m inst_1 β_0),
                                    Prop) a a_0
                                    (@eq.{v+1} (@option_t.{u v} m inst_1 β_0))
                                    e_1) e_2)
                                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                                    (@option_t_bind.{u v} m inst_1)) α_0 β_0
                                  (@has_pure.pure.{u v}
                                    (@option_t.{u v} m inst_1)
                                    (@has_pure.mk.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@option_t_return.{u v} m inst_1)) α_0
                                    x_0) f) (f x_0)
                                (@eq.trans.{v+1} (@option_t.{u v} m inst_1 β_0)
                                  (@option_t_bind.{u v} m inst_1 α_0 β_0
                                    (@has_pure.pure.{u v}
                                      (@option_t.{u v} m inst_1)
                                      (@has_pure.mk.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@option_t_return.{u v} m inst_1)) α_0
                                      x_0) f)
                                  ((λ (this : m (@option.{u} β_0)), this)
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} α_0) (@option.{u} β_0)
                                      (@return.{u v} m inst_1 (@option.{u} α_0)
                                        (@option.some.{u} α_0 x_0))
                                      (λ (o : @option.{u} α_0),
                                      @option_t_bind._match_1.{u v} m inst_1 α_0
                                        β_0 f o))) (f x_0)
                                  (@eq.trans.{v+1}
                                    (@option_t.{u v} m inst_1 β_0)
                                    (@option_t_bind.{u v} m inst_1 α_0 β_0
                                      (@has_pure.pure.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_pure.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_return.{u v} m inst_1)) α_0
                                        x_0) f)
                                    (@option_t_bind.{u v} m inst_1 α_0 β_0
                                      (@return.{u v} m inst_1 (@option.{u} α_0)
                                        (@option.some.{u} α_0 x_0)) f)
                                    ((λ (this : m (@option.{u} β_0)), this)
                                      (@has_bind.bind.{u v} m
                                        (@monad.to_has_bind.{u v} m inst_1)
                                        (@option.{u} α_0) (@option.{u} β_0)
                                        (@return.{u v} m inst_1
                                          (@option.{u} α_0)
                                          (@option.some.{u} α_0 x_0))
                                        (λ (o : @option.{u} α_0),
                                        @option_t_bind._match_1.{u v} m inst_1
                                          α_0 β_0 f o)))
                                    ((λ (a a_0 : @option_t.{u v} m inst_1 α_0)
                                        (e_1 :
                                          @eq.{v+1}
                                            (@option_t.{u v} m inst_1 α_0) a
                                            a_0)
                                        (b b_0 :
                                          (∀ (a_1 : α_0),
                                          @option_t.{u v} m inst_1 β_0))
                                        (e_2 :
                                          @eq.{max (u+1) (v+1)}
                                            (∀ (a_1 : α_0),
                                            @option_t.{u v} m inst_1 β_0) b
                                            b_0),
                                      @congr.{max (u+1) (v+1) v+1}
                                        (∀ (a_1 : α_0),
                                        @option_t.{u v} m inst_1 β_0)
                                        (@option_t.{u v} m inst_1 β_0)
                                        (@option_t_bind.{u v} m inst_1 α_0 β_0
                                          a)
                                        (@option_t_bind.{u v} m inst_1 α_0 β_0
                                          a_0) b b_0
                                        (@congr_arg.{v+1 max (u+1) (v+1)}
                                          (@option_t.{u v} m inst_1 α_0)
                                          (∀ (b_1 :
                                              (∀ (a_1 : α_0),
                                              @option_t.{u v} m inst_1 β_0)),
                                          @option_t.{u v} m inst_1 β_0) a a_0
                                          (@option_t_bind.{u v} m inst_1 α_0
                                            β_0) e_1) e_2)
                                      (@has_pure.pure.{u v}
                                        (@option_t.{u v} m inst_1)
                                        (@has_pure.mk.{u v}
                                          (@option_t.{u v} m inst_1)
                                          (@option_t_return.{u v} m inst_1)) α_0
                                        x_0)
                                      (@return.{u v} m inst_1 (@option.{u} α_0)
                                        (@option.some.{u} α_0 x_0))
                                      (@option_t_return.equations._eqn_1.{u v} m
                                        inst_1 α_0 x_0) f f
                                      (@eq.refl.{max (u+1) (v+1)}
                                        (∀ (a : α_0),
                                        @option_t.{u v} m inst_1 β_0) f))
                                    (@option_t_bind.equations._eqn_1.{u v} m
                                      inst_1 α_0 β_0
                                      (@return.{u v} m inst_1 (@option.{u} α_0)
                                        (@option.some.{u} α_0 x_0)) f))
                                  (@eq.trans.{v+1} (m (@option.{u} β_0))
                                    (@has_bind.bind.{u v} m
                                      (@monad.to_has_bind.{u v} m inst_1)
                                      (@option.{u} α_0) (@option.{u} β_0)
                                      (@has_pure.pure.{u v} m
                                        (@applicative.to_has_pure.{u v} m
                                          (@monad.to_applicative.{u v} m
                                            inst_1)) (@option.{u} α_0)
                                        (@option.some.{u} α_0 x_0))
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f))
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f (@option.some.{u} α_0 x_0)) (f x_0)
                                    (@monad.pure_bind.{u v} m inst_1
                                      (@option.{u} α_0) (@option.{u} β_0)
                                      (@option.some.{u} α_0 x_0)
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        α_0 β_0 f))
                                    (@option_t_bind._match_1.equations._eqn_2.{v
                                      u} m inst_1 α_0 β_0 f x_0))) (f x_0)
                                (f x_0)
                                (@eq.refl.{v+1} (@option_t.{u v} m inst_1 β_0)
                                  (f x_0)))
                              (@propext
                                (@eq.{v+1} (@option_t.{u v} m inst_1 β_0)
                                  (f x_0) (f x_0)) @true
                                (@eq_self_iff_true.{v+1}
                                  (@option_t.{u v} m inst_1 β_0) (f x_0)))))
                          @trivial) (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                        (∀ (a : α), γ) (@function.comp.{u+1 u+1 u+1} α β γ h_0)
                        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                            (x_1 : @option_t.{u v} m inst_1 α_0),
                          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                            (@function.comp.{u+1 u+1 v+1} α_0 β_0
                              (@option_t.{u v} m inst_1 β_0)
                              (@option_t_return.{u v} m inst_1 β_0) f))
                          (∀ (a : α), β) (∀ (a : α), γ) x_0 g))))))))
          (@eq.symm.{v+1} (@option_t.{u v} m inst_1 γ)
            (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
              (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
                (λ (h_0 : (∀ (a : β), γ)),
                @option_t_bind.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@option_t_return.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                        (@option_t.{u v} m inst_1 β_0)
                        (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                    (∀ (a : α), γ) x_0 g)))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))
            (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) γ h
              (λ (h_0 : (∀ (a : β), γ)),
              @option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
                (@option_t_bind.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                  (@option_t_return.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                  (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                  (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                      (x_1 : @option_t.{u v} m inst_1 α_0),
                    @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                      (@function.comp.{u+1 u+1 v+1} α_0 β_0
                        (@option_t.{u v} m inst_1 β_0)
                        (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                    (∀ (a : α), γ) x_0 g))
                (λ (x_0 : (∀ (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x)))
            ((λ (α_0 β_0 γ_0 : Type u) (x_0 : @option_t.{u v} m inst_1 α_0)
                (f : (∀ (a : α_0), @option_t.{u v} m inst_1 β_0))
                (g_0 : (∀ (a : β_0), @option_t.{u v} m inst_1 γ_0)),
              @eq.mpr.{0}
                (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                  (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                    (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                  (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                    (λ (x_1 : α_0),
                    @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1) g_0)))
                (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                    (λ (x_1 : @option.{u} α_0),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} β_0) (@option.{u} γ_0)
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                    (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))))
                (@id_locked.{0}
                  (@eq.{1} Prop
                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                      (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                        (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                      (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1)
                          g_0)))
                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                        (@option.{u} γ_0) x_0
                        (λ (x_1 : @option.{u} α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                        (@option.{u} γ_0) x_0
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                          (λ (x_1 : α_0),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                            (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                              g_0))))))
                  ((λ (a a_0 : @option_t.{u v} m inst_1 γ_0)
                      (e_1 : @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a a_0)
                      (a_1 a_2 : @option_t.{u v} m inst_1 γ_0)
                      (e_2 : @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a_1 a_2),
                    @congr.{v+1 1} (@option_t.{u v} m inst_1 γ_0) Prop
                      (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a)
                      (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a_0) a_1 a_2
                      (@congr_arg.{v+1 max (v+1) 1}
                        (@option_t.{u v} m inst_1 γ_0)
                        (∀ (a_3 : @option_t.{u v} m inst_1 γ_0), Prop) a a_0
                        (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)) e_1) e_2)
                    (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                      (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                      (λ (x_1 : @option.{u} α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0)
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                    (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                      (@option_t_bind.{u v} m inst_1 β_0 γ_0
                        (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                      ((λ (this : m (@option.{u} γ_0)), this)
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} α_0) (@option.{u} β_0) x_0
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                          (λ (o : @option.{u} β_0),
                          @option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0
                            o)))
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                        (@option.{u} γ_0) x_0
                        (λ (x_1 : @option.{u} α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                      (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                        (@option_t_bind.{u v} m inst_1 β_0 γ_0
                          (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                            (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                              (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f)
                          g_0)
                        (@option_t_bind.{u v} m inst_1 β_0 γ_0
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} α_0) (@option.{u} β_0) x_0
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                          g_0)
                        ((λ (this : m (@option.{u} γ_0)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} α_0) (@option.{u} β_0) x_0
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0
                                f))
                            (λ (o : @option.{u} β_0),
                            @option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0
                              o)))
                        ((λ (a a_0 : @option_t.{u v} m inst_1 β_0)
                            (e_1 :
                              @eq.{v+1} (@option_t.{u v} m inst_1 β_0) a a_0)
                            (b b_0 :
                              (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0))
                            (e_2 :
                              @eq.{max (u+1) (v+1)}
                                (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0) b
                                b_0),
                          @congr.{max (u+1) (v+1) v+1}
                            (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0)
                            (@option_t.{u v} m inst_1 γ_0)
                            (@option_t_bind.{u v} m inst_1 β_0 γ_0 a)
                            (@option_t_bind.{u v} m inst_1 β_0 γ_0 a_0) b b_0
                            (@congr_arg.{v+1 max (u+1) (v+1)}
                              (@option_t.{u v} m inst_1 β_0)
                              (∀ (b_1 :
                                  (∀ (a_1 : β_0),
                                  @option_t.{u v} m inst_1 γ_0)),
                              @option_t.{u v} m inst_1 γ_0) a a_0
                              (@option_t_bind.{u v} m inst_1 β_0 γ_0) e_1) e_2)
                          (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                            (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                              (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} α_0) (@option.{u} β_0) x_0
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                          (@option_t_bind.equations._eqn_1.{u v} m inst_1 α_0
                            β_0 x_0 f) g_0 g_0
                          (@eq.refl.{max (u+1) (v+1)}
                            (∀ (a : β_0), @option_t.{u v} m inst_1 γ_0) g_0))
                        (@option_t_bind.equations._eqn_1.{u v} m inst_1 β_0 γ_0
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} α_0) (@option.{u} β_0) x_0
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                          g_0))
                      (@monad.bind_assoc.{u v} m inst_1 (@option.{u} α_0)
                        (@option.{u} β_0) (@option.{u} γ_0) x_0
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                    (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1) g_0))
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0) (f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                            g_0))))
                    (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                      (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1)
                          g_0))
                      (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0) (f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                      ((λ (this : m (@option.{u} γ_0)), this)
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                          (@option.{u} γ_0) x_0
                          (λ (o : @option.{u} α_0),
                          @option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                            (λ (x_1 : α_0),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                              (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                g_0)) o)))
                      ((λ (a a_0 : @option_t.{u v} m inst_1 α_0)
                          (e_1 : @eq.{v+1} (@option_t.{u v} m inst_1 α_0) a a_0)
                          (b b_0 :
                            (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0))
                          (e_2 :
                            @eq.{max (u+1) (v+1)}
                              (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0) b
                              b_0),
                        @congr.{max (u+1) (v+1) v+1}
                          (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0)
                          (@option_t.{u v} m inst_1 γ_0)
                          (@option_t_bind.{u v} m inst_1 α_0 γ_0 a)
                          (@option_t_bind.{u v} m inst_1 α_0 γ_0 a_0) b b_0
                          (@congr_arg.{v+1 max (u+1) (v+1)}
                            (@option_t.{u v} m inst_1 α_0)
                            (∀ (b_1 :
                                (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0)),
                            @option_t.{u v} m inst_1 γ_0) a a_0
                            (@option_t_bind.{u v} m inst_1 α_0 γ_0) e_1) e_2)
                        x_0 x_0
                        (@eq.refl.{v+1} (@option_t.{u v} m inst_1 α_0) x_0)
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1)
                          g_0)
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0) (f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                        (@funext.{u+1 v+1} α_0
                          (λ (x_1 : α_0), @option_t.{u v} m inst_1 γ_0)
                          (λ (x_1 : α_0),
                          @option_t_bind.{u v} m inst_1 β_0 γ_0 (f x_1) g_0)
                          (λ (x_1 : α_0),
                          (λ (this : m (@option.{u} γ_0)), this)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                              (λ (o : @option.{u} β_0),
                              @option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0
                                o)))
                          (λ (x_1 : α_0),
                          @option_t_bind.equations._eqn_1.{u v} m inst_1 β_0 γ_0
                            (f x_1) g_0)))
                      (@option_t_bind.equations._eqn_1.{u v} m inst_1 α_0 γ_0
                        x_0
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0) (f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                            g_0))))))
                (@congr_arg.{max (u+1) (v+1) v+1}
                  (∀ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                  (@option_t.{u v} m inst_1 γ_0)
                  (λ (x_1 : @option.{u} α_0),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} β_0) (@option.{u} γ_0)
                    (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                    (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                  (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                    (λ (x_1 : α_0),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} α_0) (@option.{u} γ_0) x_0)
                  (@funext.{u+1 v+1} (@option.{u} α_0)
                    (λ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                    (λ (x_1 : @option.{u} α_0),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} β_0) (@option.{u} γ_0)
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                    (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                    (λ (x_1 : @option.{u} α_0),
                    @option.cases_on.{0 u} α_0
                      (λ (x_2 : @option.{u} α_0),
                      @eq.{v+1} (m (@option.{u} γ_0))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_2)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                          (λ (x_3 : α_0),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0) (f x_3)
                            (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                              g_0)) x_2)) x_1
                      (@eq.mpr.{0}
                        (@eq.{v+1} (m (@option.{u} γ_0))
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0)
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                              (@option.none.{u} α_0))
                            (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                              g_0))
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                            (λ (x_2 : α_0),
                            @has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                              (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                g_0)) (@option.none.{u} α_0))) @true
                        (@id_locked.{0}
                          (@eq.{1} Prop
                            (@eq.{v+1} (m (@option.{u} γ_0))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0)
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0
                                  f (@option.none.{u} α_0))
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0))
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                (λ (x_2 : α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)) (@option.none.{u} α_0))) @true)
                          (@eq.trans.{1} Prop
                            (@eq.{v+1} (m (@option.{u} γ_0))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0)
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0
                                  f (@option.none.{u} α_0))
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0))
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                (λ (x_2 : α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)) (@option.none.{u} α_0)))
                            (@eq.{v+1} (m (@option.{u} γ_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))) @true
                            ((λ (a a_0 : m (@option.{u} γ_0))
                                (e_1 : @eq.{v+1} (m (@option.{u} γ_0)) a a_0)
                                (a_1 a_2 : m (@option.{u} γ_0))
                                (e_2 : @eq.{v+1} (m (@option.{u} γ_0)) a_1 a_2),
                              @congr.{v+1 1} (m (@option.{u} γ_0)) Prop
                                (@eq.{v+1} (m (@option.{u} γ_0)) a)
                                (@eq.{v+1} (m (@option.{u} γ_0)) a_0) a_1 a_2
                                (@congr_arg.{v+1 max (v+1) 1}
                                  (m (@option.{u} γ_0))
                                  (∀ (a_3 : m (@option.{u} γ_0)), Prop) a a_0
                                  (@eq.{v+1} (m (@option.{u} γ_0))) e_1) e_2)
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0)
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0
                                  f (@option.none.{u} α_0))
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))
                              (@eq.trans.{v+1} (m (@option.{u} γ_0))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    β_0 f (@option.none.{u} α_0))
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0))
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0 (@option.none.{u} β_0))
                                (@return.{u v} m inst_1 (@option.{u} γ_0)
                                  (@option.none.{u} γ_0))
                                (@eq.trans.{v+1} (m (@option.{u} γ_0))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f (@option.none.{u} α_0))
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0))
                                  (@has_bind.bind.{u v} m
                                    (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@return.{u v} m inst_1 (@option.{u} β_0)
                                      (@option.none.{u} β_0))
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0))
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0 (@option.none.{u} β_0))
                                  ((λ [c : @has_bind.{u v} m] {α_1 β_1 : Type u}
                                      (a a_0 : m α_1)
                                      (e_4 : @eq.{v+1} (m α_1) a a_0)
                                      (a_1 a_2 : (∀ (a_3 : α_1), m β_1))
                                      (e_5 :
                                        @eq.{max (u+1) (v+1)}
                                          (∀ (a_3 : α_1), m β_1) a_1 a_2),
                                    @congr.{max (u+1) (v+1) v+1}
                                      (∀ (a_3 : α_1), m β_1) (m β_1)
                                      (@has_bind.bind.{u v} m c α_1 β_1 a)
                                      (@has_bind.bind.{u v} m c α_1 β_1 a_0) a_1
                                      a_2
                                      (@congr_arg.{v+1 max (u+1) (v+1)} (m α_1)
                                        (∀ (a_3 : (∀ (a_4 : α_1), m β_1)),
                                        m β_1) a a_0
                                        (@has_bind.bind.{u v} m c α_1 β_1) e_4)
                                      e_5) (@monad.to_has_bind.{u v} m inst_1)
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 α_0
                                      β_0 f (@option.none.{u} α_0))
                                    (@return.{u v} m inst_1 (@option.{u} β_0)
                                      (@option.none.{u} β_0))
                                    (@option_t_bind._match_1.equations._eqn_1.{v
                                      u} m inst_1 α_0 β_0 f)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)
                                    (@eq.refl.{max (u+1) (v+1)}
                                      (∀ (a : @option.{u} β_0),
                                      m (@option.{u} γ_0))
                                      (@option_t_bind._match_1.{u v} m inst_1
                                        β_0 γ_0 g_0)))
                                  (@monad.pure_bind.{u v} m inst_1
                                    (@option.{u} β_0) (@option.{u} γ_0)
                                    (@option.none.{u} β_0)
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (@option_t_bind._match_1.equations._eqn_1.{v u}
                                  m inst_1 β_0 γ_0 g_0))
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                                (λ (x_2 : α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)) (@option.none.{u} α_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))
                              (@option_t_bind._match_1.equations._eqn_1.{v u} m
                                inst_1 α_0 γ_0
                                (λ (x_2 : α_0),
                                @has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0))))
                            (@propext
                              (@eq.{v+1} (m (@option.{u} γ_0))
                                (@return.{u v} m inst_1 (@option.{u} γ_0)
                                  (@option.none.{u} γ_0))
                                (@return.{u v} m inst_1 (@option.{u} γ_0)
                                  (@option.none.{u} γ_0))) @true
                              (@eq_self_iff_true.{v+1} (m (@option.{u} γ_0))
                                (@return.{u v} m inst_1 (@option.{u} γ_0)
                                  (@option.none.{u} γ_0)))))) @trivial)
                      (λ (a : α_0),
                      @eq.refl.{v+1} (m (@option.{u} γ_0))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                            (@option.some.{u} α_0 a))
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                            g_0))))))) (∀ (a : β), γ) (∀ (a : α), γ) γ h
              (λ (h_0 : (∀ (a : β), γ)),
              @option_t_bind.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@option_t_return.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@function.comp.{u+1 u+1 u+1} α β γ h_0))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x))))
        (@eq.rec.{0 v+1} (@option_t.{u v} m inst_1 (∀ (a : α), γ))
          (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (∀ (a : α), γ)
            (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
              (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@option_t.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@option_t_return.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@function.comp.{u+1 u+1 u+1} α β γ)))
            (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) x_0 g))
          (λ (x_0 : @option_t.{u v} m inst_1 (∀ (a : α), γ)),
          @eq.{v+1} (@option_t.{u v} m inst_1 γ)
            (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ x_0
              (λ (x_1 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_1 x))
            (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
              (@option_t_bind.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                  (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@option_t.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@option_t_return.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@function.comp.{u+1 u+1 u+1} α β γ)))
                (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_2 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_1 g))
              (λ (x_1 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_1 x)))
          (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
            (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
              (@option_t_bind.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
                (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                  (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                    (@option_t.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@option_t_return.{u v} m inst_1
                      (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                    (@function.comp.{u+1 u+1 u+1} α β γ)))
                (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
                (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                    (x_1 : @option_t.{u v} m inst_1 α_0),
                  @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                    (@function.comp.{u+1 u+1 v+1} α_0 β_0
                      (@option_t.{u v} m inst_1 β_0)
                      (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                  (∀ (a : α), γ) x_0 g))
              (λ (x_0 : (∀ (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x)))
          (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ) (∀ (a : α), γ) h
            (λ (x_0 : (∀ (a : β), γ)),
            @option_t_bind.{u v} m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                (@option_t.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@option_t_return.{u v} m inst_1
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                (@function.comp.{u+1 u+1 u+1} α β γ) x_0)
              (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_1 g)))
          ((λ (α_0 β_0 γ_0 : Type u) (x_0 : @option_t.{u v} m inst_1 α_0)
              (f : (∀ (a : α_0), @option_t.{u v} m inst_1 β_0))
              (g_0 : (∀ (a : β_0), @option_t.{u v} m inst_1 γ_0)),
            @eq.mpr.{0}
              (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                    (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                  (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                  (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                    (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                  (λ (x_1 : α_0),
                  @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1) g_0)))
              (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@option.{u} α_0) (@option.{u} γ_0) x_0
                  (λ (x_1 : @option.{u} α_0),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} β_0) (@option.{u} γ_0)
                    (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                    (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@option.{u} α_0) (@option.{u} γ_0) x_0
                  (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                    (λ (x_1 : α_0),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))))
              (@id_locked.{0}
                (@eq.{1} Prop
                  (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                    (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                      (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                    (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1)
                        g_0)))
                  (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                      (λ (x_1 : @option.{u} α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0)
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                        (λ (x_1 : α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0) (f x_1)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                            g_0))))))
                ((λ (a a_0 : @option_t.{u v} m inst_1 γ_0)
                    (e_1 : @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a a_0)
                    (a_1 a_2 : @option_t.{u v} m inst_1 γ_0)
                    (e_2 : @eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a_1 a_2),
                  @congr.{v+1 1} (@option_t.{u v} m inst_1 γ_0) Prop
                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a)
                    (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0) a_0) a_1 a_2
                    (@congr_arg.{v+1 max (v+1) 1} (@option_t.{u v} m inst_1 γ_0)
                      (∀ (a_3 : @option_t.{u v} m inst_1 γ_0), Prop) a a_0
                      (@eq.{v+1} (@option_t.{u v} m inst_1 γ_0)) e_1) e_2)
                  (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) β_0 γ_0
                    (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                    (λ (x_1 : @option.{u} α_0),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} β_0) (@option.{u} γ_0)
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                  (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                    (@option_t_bind.{u v} m inst_1 β_0 γ_0
                      (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                    ((λ (this : m (@option.{u} γ_0)), this)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                        (@option.{u} γ_0)
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                          (@option.{u} β_0) x_0
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                        (λ (o : @option.{u} β_0),
                        @option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0 o)))
                    (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} α_0) (@option.{u} γ_0) x_0
                      (λ (x_1 : @option.{u} α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0)
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                    (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                      (@option_t_bind.{u v} m inst_1 β_0 γ_0
                        (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f) g_0)
                      (@option_t_bind.{u v} m inst_1 β_0 γ_0
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                          (@option.{u} β_0) x_0
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                        g_0)
                      ((λ (this : m (@option.{u} γ_0)), this)
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} α_0) (@option.{u} β_0) x_0
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                          (λ (o : @option.{u} β_0),
                          @option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0
                            o)))
                      ((λ (a a_0 : @option_t.{u v} m inst_1 β_0)
                          (e_1 : @eq.{v+1} (@option_t.{u v} m inst_1 β_0) a a_0)
                          (b b_0 :
                            (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0))
                          (e_2 :
                            @eq.{max (u+1) (v+1)}
                              (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0) b
                              b_0),
                        @congr.{max (u+1) (v+1) v+1}
                          (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0)
                          (@option_t.{u v} m inst_1 γ_0)
                          (@option_t_bind.{u v} m inst_1 β_0 γ_0 a)
                          (@option_t_bind.{u v} m inst_1 β_0 γ_0 a_0) b b_0
                          (@congr_arg.{v+1 max (u+1) (v+1)}
                            (@option_t.{u v} m inst_1 β_0)
                            (∀ (b_1 :
                                (∀ (a_1 : β_0), @option_t.{u v} m inst_1 γ_0)),
                            @option_t.{u v} m inst_1 γ_0) a a_0
                            (@option_t_bind.{u v} m inst_1 β_0 γ_0) e_1) e_2)
                        (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                            (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0 f)
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                          (@option.{u} β_0) x_0
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                        (@option_t_bind.equations._eqn_1.{u v} m inst_1 α_0 β_0
                          x_0 f) g_0 g_0
                        (@eq.refl.{max (u+1) (v+1)}
                          (∀ (a : β_0), @option_t.{u v} m inst_1 γ_0) g_0))
                      (@option_t_bind.equations._eqn_1.{u v} m inst_1 β_0 γ_0
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                          (@option.{u} β_0) x_0
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f))
                        g_0))
                    (@monad.bind_assoc.{u v} m inst_1 (@option.{u} α_0)
                      (@option.{u} β_0) (@option.{u} γ_0) x_0
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                  (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                    (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                      (@option_t_bind.{u v} m inst_1)) α_0 γ_0 x_0
                    (λ (x_1 : α_0),
                    @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                      (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                        (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1) g_0))
                  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} α_0) (@option.{u} γ_0) x_0
                    (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))))
                  (@eq.trans.{v+1} (@option_t.{u v} m inst_1 γ_0)
                    (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1) g_0))
                    (@option_t_bind.{u v} m inst_1 α_0 γ_0 x_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                    ((λ (this : m (@option.{u} γ_0)), this)
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} α_0)
                        (@option.{u} γ_0) x_0
                        (λ (o : @option.{u} α_0),
                        @option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                          (λ (x_1 : α_0),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                            (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                              g_0)) o)))
                    ((λ (a a_0 : @option_t.{u v} m inst_1 α_0)
                        (e_1 : @eq.{v+1} (@option_t.{u v} m inst_1 α_0) a a_0)
                        (b b_0 : (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0))
                        (e_2 :
                          @eq.{max (u+1) (v+1)}
                            (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0) b
                            b_0),
                      @congr.{max (u+1) (v+1) v+1}
                        (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0)
                        (@option_t.{u v} m inst_1 γ_0)
                        (@option_t_bind.{u v} m inst_1 α_0 γ_0 a)
                        (@option_t_bind.{u v} m inst_1 α_0 γ_0 a_0) b b_0
                        (@congr_arg.{v+1 max (u+1) (v+1)}
                          (@option_t.{u v} m inst_1 α_0)
                          (∀ (b_1 :
                              (∀ (a_1 : α_0), @option_t.{u v} m inst_1 γ_0)),
                          @option_t.{u v} m inst_1 γ_0) a a_0
                          (@option_t_bind.{u v} m inst_1 α_0 γ_0) e_1) e_2) x_0
                      x_0 (@eq.refl.{v+1} (@option_t.{u v} m inst_1 α_0) x_0)
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} (@option_t.{u v} m inst_1)
                        (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                          (@option_t_bind.{u v} m inst_1)) β_0 γ_0 (f x_1) g_0)
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                      (@funext.{u+1 v+1} α_0
                        (λ (x_1 : α_0), @option_t.{u v} m inst_1 γ_0)
                        (λ (x_1 : α_0),
                        @option_t_bind.{u v} m inst_1 β_0 γ_0 (f x_1) g_0)
                        (λ (x_1 : α_0),
                        (λ (this : m (@option.{u} γ_0)), this)
                          (@has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                            (λ (o : @option.{u} β_0),
                            @option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0
                              o)))
                        (λ (x_1 : α_0),
                        @option_t_bind.equations._eqn_1.{u v} m inst_1 β_0 γ_0
                          (f x_1) g_0)))
                    (@option_t_bind.equations._eqn_1.{u v} m inst_1 α_0 γ_0 x_0
                      (λ (x_1 : α_0),
                      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                        (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                          g_0))))))
              (@congr_arg.{max (u+1) (v+1) v+1}
                (∀ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                (@option_t.{u v} m inst_1 γ_0)
                (λ (x_1 : @option.{u} α_0),
                @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@option.{u} β_0) (@option.{u} γ_0)
                  (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                  (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                  (λ (x_1 : α_0),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                    (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                  (@option.{u} α_0) (@option.{u} γ_0) x_0)
                (@funext.{u+1 v+1} (@option.{u} α_0)
                  (λ (x_1 : @option.{u} α_0), m (@option.{u} γ_0))
                  (λ (x_1 : @option.{u} α_0),
                  @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                    (@option.{u} β_0) (@option.{u} γ_0)
                    (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_1)
                    (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                  (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                    (λ (x_1 : α_0),
                    @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1)
                      (@option.{u} β_0) (@option.{u} γ_0) (f x_1)
                      (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0)))
                  (λ (x_1 : @option.{u} α_0),
                  @option.cases_on.{0 u} α_0
                    (λ (x_2 : @option.{u} α_0),
                    @eq.{v+1} (m (@option.{u} γ_0))
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                        (@option.{u} γ_0)
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f x_2)
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                      (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                        (λ (x_3 : α_0),
                        @has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0) (f x_3)
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                        x_2)) x_1
                    (@eq.mpr.{0}
                      (@eq.{v+1} (m (@option.{u} γ_0))
                        (@has_bind.bind.{u v} m
                          (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                          (@option.{u} γ_0)
                          (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                            (@option.none.{u} α_0))
                          (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0 g_0))
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                          (λ (x_2 : α_0),
                          @has_bind.bind.{u v} m
                            (@monad.to_has_bind.{u v} m inst_1)
                            (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                            (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                              g_0)) (@option.none.{u} α_0))) @true
                      (@id_locked.{0}
                        (@eq.{1} Prop
                          (@eq.{v+1} (m (@option.{u} γ_0))
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} β_0) (@option.{u} γ_0)
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                                (@option.none.{u} α_0))
                              (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                g_0))
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                              (λ (x_2 : α_0),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0)) (@option.none.{u} α_0))) @true)
                        (@eq.trans.{1} Prop
                          (@eq.{v+1} (m (@option.{u} γ_0))
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} β_0) (@option.{u} γ_0)
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                                (@option.none.{u} α_0))
                              (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                g_0))
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                              (λ (x_2 : α_0),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0)) (@option.none.{u} α_0)))
                          (@eq.{v+1} (m (@option.{u} γ_0))
                            (@return.{u v} m inst_1 (@option.{u} γ_0)
                              (@option.none.{u} γ_0))
                            (@return.{u v} m inst_1 (@option.{u} γ_0)
                              (@option.none.{u} γ_0))) @true
                          ((λ (a a_0 : m (@option.{u} γ_0))
                              (e_1 : @eq.{v+1} (m (@option.{u} γ_0)) a a_0)
                              (a_1 a_2 : m (@option.{u} γ_0))
                              (e_2 : @eq.{v+1} (m (@option.{u} γ_0)) a_1 a_2),
                            @congr.{v+1 1} (m (@option.{u} γ_0)) Prop
                              (@eq.{v+1} (m (@option.{u} γ_0)) a)
                              (@eq.{v+1} (m (@option.{u} γ_0)) a_0) a_1 a_2
                              (@congr_arg.{v+1 max (v+1) 1}
                                (m (@option.{u} γ_0))
                                (∀ (a_3 : m (@option.{u} γ_0)), Prop) a a_0
                                (@eq.{v+1} (m (@option.{u} γ_0))) e_1) e_2)
                            (@has_bind.bind.{u v} m
                              (@monad.to_has_bind.{u v} m inst_1)
                              (@option.{u} β_0) (@option.{u} γ_0)
                              (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                                (@option.none.{u} α_0))
                              (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                g_0))
                            (@return.{u v} m inst_1 (@option.{u} γ_0)
                              (@option.none.{u} γ_0))
                            (@eq.trans.{v+1} (m (@option.{u} γ_0))
                              (@has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0)
                                (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0
                                  f (@option.none.{u} α_0))
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0))
                              (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                g_0 (@option.none.{u} β_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))
                              (@eq.trans.{v+1} (m (@option.{u} γ_0))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    β_0 f (@option.none.{u} α_0))
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0))
                                (@has_bind.bind.{u v} m
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@return.{u v} m inst_1 (@option.{u} β_0)
                                    (@option.none.{u} β_0))
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0))
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0 (@option.none.{u} β_0))
                                ((λ [c : @has_bind.{u v} m] {α_1 β_1 : Type u}
                                    (a a_0 : m α_1)
                                    (e_4 : @eq.{v+1} (m α_1) a a_0)
                                    (a_1 a_2 : (∀ (a_3 : α_1), m β_1))
                                    (e_5 :
                                      @eq.{max (u+1) (v+1)}
                                        (∀ (a_3 : α_1), m β_1) a_1 a_2),
                                  @congr.{max (u+1) (v+1) v+1}
                                    (∀ (a_3 : α_1), m β_1) (m β_1)
                                    (@has_bind.bind.{u v} m c α_1 β_1 a)
                                    (@has_bind.bind.{u v} m c α_1 β_1 a_0) a_1
                                    a_2
                                    (@congr_arg.{v+1 max (u+1) (v+1)} (m α_1)
                                      (∀ (a_3 : (∀ (a_4 : α_1), m β_1)), m β_1)
                                      a a_0 (@has_bind.bind.{u v} m c α_1 β_1)
                                      e_4) e_5)
                                  (@monad.to_has_bind.{u v} m inst_1)
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 α_0
                                    β_0 f (@option.none.{u} α_0))
                                  (@return.{u v} m inst_1 (@option.{u} β_0)
                                    (@option.none.{u} β_0))
                                  (@option_t_bind._match_1.equations._eqn_1.{v
                                    u} m inst_1 α_0 β_0 f)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)
                                  (@eq.refl.{max (u+1) (v+1)}
                                    (∀ (a : @option.{u} β_0),
                                    m (@option.{u} γ_0))
                                    (@option_t_bind._match_1.{u v} m inst_1 β_0
                                      γ_0 g_0)))
                                (@monad.pure_bind.{u v} m inst_1
                                  (@option.{u} β_0) (@option.{u} γ_0)
                                  (@option.none.{u} β_0)
                                  (@option_t_bind._match_1.{u v} m inst_1 β_0
                                    γ_0 g_0)))
                              (@option_t_bind._match_1.equations._eqn_1.{v u} m
                                inst_1 β_0 γ_0 g_0))
                            (@option_t_bind._match_1.{u v} m inst_1 α_0 γ_0
                              (λ (x_2 : α_0),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0)) (@option.none.{u} α_0))
                            (@return.{u v} m inst_1 (@option.{u} γ_0)
                              (@option.none.{u} γ_0))
                            (@option_t_bind._match_1.equations._eqn_1.{v u} m
                              inst_1 α_0 γ_0
                              (λ (x_2 : α_0),
                              @has_bind.bind.{u v} m
                                (@monad.to_has_bind.{u v} m inst_1)
                                (@option.{u} β_0) (@option.{u} γ_0) (f x_2)
                                (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                                  g_0))))
                          (@propext
                            (@eq.{v+1} (m (@option.{u} γ_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0))) @true
                            (@eq_self_iff_true.{v+1} (m (@option.{u} γ_0))
                              (@return.{u v} m inst_1 (@option.{u} γ_0)
                                (@option.none.{u} γ_0)))))) @trivial)
                    (λ (a : α_0),
                    @eq.refl.{v+1} (m (@option.{u} γ_0))
                      (@has_bind.bind.{u v} m
                        (@monad.to_has_bind.{u v} m inst_1) (@option.{u} β_0)
                        (@option.{u} γ_0)
                        (@option_t_bind._match_1.{u v} m inst_1 α_0 β_0 f
                          (@option.some.{u} α_0 a))
                        (@option_t_bind._match_1.{u v} m inst_1 β_0 γ_0
                          g_0))))))) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ) h
            (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
              (@option_t.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@option_t_return.{u v} m inst_1
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
              (@function.comp.{u+1 u+1 u+1} α β γ))
            (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
              (∀ (a : α), γ) x_0 g))))
      (@eq.rec.{0 v+1}
        (@option_t.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
        (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
          (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@option_t.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
            (@option_t_return.{u v} m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
            (@function.comp.{u+1 u+1 u+1} α β γ)))
        (λ (x_0 :
            @option_t.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        @eq.{v+1} (@option_t.{u v} m inst_1 γ)
          (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
            (@option_t_bind.{u v} m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@option_t.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@option_t_return.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@function.comp.{u+1 u+1 u+1} α β γ)))
              (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_1 g))
            (λ (x_1 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_2 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_1 x))
          (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
            (@option_t_bind.{u v} m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ) x_0
              (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_2 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_1 g))
            (λ (x_1 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_2 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_1 x)))
        (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
          (@option_t_bind.{u v} m inst_1 (∀ (a : α), γ) γ
            (@option_t_bind.{u v} m inst_1
              (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) (∀ (a : α), γ)
              (@option_t_bind.{u v} m inst_1 (∀ (a : β), γ)
                (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ) h
                (@function.comp.{u+1 u+1 v+1} (∀ (a : β), γ)
                  (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
                  (@option_t.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@option_t_return.{u v} m inst_1
                    (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ))
                  (@function.comp.{u+1 u+1 u+1} α β γ)))
              (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
              (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                  (x_1 : @option_t.{u v} m inst_1 α_0),
                @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                  (@function.comp.{u+1 u+1 v+1} α_0 β_0
                    (@option_t.{u v} m inst_1 β_0)
                    (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
                (∀ (a : α), γ) x_0 g))
            (λ (x_0 : (∀ (a : α), γ)),
            (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
                (x_1 : @option_t.{u v} m inst_1 α_0),
              @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
                (@function.comp.{u+1 u+1 v+1} α_0 β_0
                  (@option_t.{u v} m inst_1 β_0)
                  (@option_t_return.{u v} m inst_1 β_0) f)) α γ x_0 x)))
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
            (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
              (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
                (@option_t_bind.{u v} m inst_1)) α_0 β_0 x_0
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@has_pure.pure.{u v} (@option_t.{u v} m inst_1)
                  (@has_pure.mk.{u v} (@option_t.{u v} m inst_1)
                    (@option_t_return.{u v} m inst_1)) β_0) f))) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)))
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
        (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
            (@option_t_bind.{u v} m inst_1)) (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          @has_map.map.{u v} (@option_t.{u v} m inst_1)
            (@has_map.mk.{u v} (@option_t.{u v} m inst_1)
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @option_t.{u v} m inst_1 α_1),
              @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 v+1} α_1 β_1
                  (@option_t.{u v} m inst_1 β_1)
                  (@option_t_return.{u v} m inst_1 β_1) f_0))
              (λ (α_1 β_1 : Type u),
              @function.comp.{u+1 u+1 v+1} α_1 (∀ (a : β_1), α_1)
                (∀ (a : @option_t.{u v} m inst_1 β_1),
                @option_t.{u v} m inst_1 α_1)
                ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_2 : @option_t.{u v} m inst_1 α_2),
                  @option_t_bind.{u v} m inst_1 α_2 β_2 x_2
                    (@function.comp.{u+1 u+1 v+1} α_2 β_2
                      (@option_t.{u v} m inst_1 β_2)
                      (@option_t_return.{u v} m inst_1 β_2) f_0)) β_1 α_1)
                (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0 x_1 x_0))) α γ
      (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
        (∀ (a : α), γ)
        ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_0 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
          (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (@function.comp.{u+1 u+1 u+1} α β γ) h)
        (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
        (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
            (x_1 : @option_t.{u v} m inst_1 α_0),
          @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
            (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
              (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
          (∀ (a : α), γ) x_0 g)) x))
  (@eq.rec.{0 v+1} (@option_t.{u v} m inst_1 (∀ (a : α), γ))
    (@option_t_bind.{u v} m inst_1 (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
      (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h)
      (λ (x_0 : (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)),
      (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_1 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
        (∀ (a : α), γ) x_0 g))
    (λ (x_0 : @option_t.{u v} m inst_1 (∀ (a : α), γ)),
    @eq.{v+1} (@option_t.{u v} m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
          (x_1 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_2 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_3 : @option_t.{u v} m inst_1 α_1),
            @option_t_bind.{u v} m inst_1 α_1 β_1 x_3
              (@function.comp.{u+1 u+1 v+1} α_1 β_1
                (@option_t.{u v} m inst_1 β_1)
                (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_2 x_1)) α
        γ
        (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)
          (λ (x_1 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_2 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_2
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_1 g)) x)
      ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
          (x_1 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_2 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_3 : @option_t.{u v} m inst_1 α_1),
            @option_t_bind.{u v} m inst_1 α_1 β_1 x_3
              (@function.comp.{u+1 u+1 v+1} α_1 β_1
                (@option_t.{u v} m inst_1 β_1)
                (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_2 x_1)) α
        γ x_0 x))
    (@rfl.{v+1} (@option_t.{u v} m inst_1 γ)
      ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
              (x_2 : @option_t.{u v} m inst_1 α_1),
            @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
              (@function.comp.{u+1 u+1 v+1} α_1 β_1
                (@option_t.{u v} m inst_1 β_1)
                (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0)) α
        γ
        (@option_t_bind.{u v} m inst_1 (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
          (∀ (a : α), γ)
          ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_0 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
            (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)
            (@function.comp.{u+1 u+1 u+1} α β γ) h)
          (λ (x_0 : (∀ (g_0 : (∀ (a_0 : α), β)) (a : α), γ)),
          (λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
              (x_1 : @option_t.{u v} m inst_1 α_0),
            @option_t_bind.{u v} m inst_1 α_0 β_0 x_1
              (@function.comp.{u+1 u+1 v+1} α_0 β_0
                (@option_t.{u v} m inst_1 β_0)
                (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : α), β)
            (∀ (a : α), γ) x_0 g)) x))
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @option_t_bind.{u v} m inst_1 (∀ (a : α_0), β_0) β_0 f
        (λ (x_1 : (∀ (a : α_0), β_0)),
        (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
            (x_2 : @option_t.{u v} m inst_1 α_1),
          @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
            (@function.comp.{u+1 u+1 v+1} α_1 β_1 (@option_t.{u v} m inst_1 β_1)
              (@option_t_return.{u v} m inst_1 β_1) f_0)) α_0 β_0 x_1 x_0))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g)
    ((λ (α_0 β_0 : Type u) (f : @option_t.{u v} m inst_1 (∀ (a : α_0), β_0))
        (x_0 : @option_t.{u v} m inst_1 α_0),
      @rfl.{v+1} (@option_t.{u v} m inst_1 β_0)
        (@has_bind.bind.{u v} (@option_t.{u v} m inst_1)
          (@has_bind.mk.{u v} (@option_t.{u v} m inst_1)
            (@option_t_bind.{u v} m inst_1)) (∀ (a : α_0), β_0) β_0 f
          (λ (x_1 : (∀ (a : α_0), β_0)),
          @has_map.map.{u v} (@option_t.{u v} m inst_1)
            (@has_map.mk.{u v} (@option_t.{u v} m inst_1)
              (λ (α_1 β_1 : Type u) (f_0 : (∀ (a : α_1), β_1))
                (x_2 : @option_t.{u v} m inst_1 α_1),
              @option_t_bind.{u v} m inst_1 α_1 β_1 x_2
                (@function.comp.{u+1 u+1 v+1} α_1 β_1
                  (@option_t.{u v} m inst_1 β_1)
                  (@option_t_return.{u v} m inst_1 β_1) f_0))
              (λ (α_1 β_1 : Type u),
              @function.comp.{u+1 u+1 v+1} α_1 (∀ (a : β_1), α_1)
                (∀ (a : @option_t.{u v} m inst_1 β_1),
                @option_t.{u v} m inst_1 α_1)
                ((λ (α_2 β_2 : Type u) (f_0 : (∀ (a : α_2), β_2))
                    (x_2 : @option_t.{u v} m inst_1 α_2),
                  @option_t_bind.{u v} m inst_1 α_2 β_2 x_2
                    (@function.comp.{u+1 u+1 v+1} α_2 β_2
                      (@option_t.{u v} m inst_1 β_2)
                      (@option_t_return.{u v} m inst_1 β_2) f_0)) β_1 α_1)
                (@function.const.{u+1 u+1} α_1 β_1))) α_0 β_0 x_1 x_0)))
      (∀ (a : α), β) (∀ (a : α), γ)
      ((λ (α_0 β_0 : Type u) (f : (∀ (a : α_0), β_0))
          (x_0 : @option_t.{u v} m inst_1 α_0),
        @option_t_bind.{u v} m inst_1 α_0 β_0 x_0
          (@function.comp.{u+1 u+1 v+1} α_0 β_0 (@option_t.{u v} m inst_1 β_0)
            (@option_t_return.{u v} m inst_1 β_0) f)) (∀ (a : β), γ)
        (∀ (a : (∀ (a_1 : α), β)) (a_0 : α), γ)
        (@function.comp.{u+1 u+1 u+1} α β γ) h) g)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(_private.461184807.utf8_length_aux,Vector(),∀ (a a_0 : @nat) (a_1 : @list.{0} @char), @nat,@_private.41216467.utf8_length_aux._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @_private.41216467.utf8_length_aux._main"

mod: "DefMod(Definition(psigma.sizeof,Vector(Param(u), Param(v)),∀ {α : Type u} {β : (∀ (a_0 : α), Type v)} [inst_1 : @has_sizeof.{u+1} α]
  [inst_2 : (∀ (a_0 : α), @has_sizeof.{v+1} (β a_0))]
  (a : @psigma.{u+1 v+1} α β),
@nat,λ {α : Type u} {β : (∀ (a : α), Type v)} [inst_1 : @has_sizeof.{u+1} α]
  [inst_2 : (∀ (a : α), @has_sizeof.{v+1} (β a))],
@psigma.sizeof._main.{u v} α β inst_1 inst_2,0))"
err: "provingground.interface.UnParsedException: could not parse expression @psigma.sizeof._main.{u v}"

mod: "DefMod(Definition(psigma.has_sizeof,Vector(Param(u), Param(v)),∀ (α : Type u) (β : (∀ (a : α), Type v)) [inst_1 : @has_sizeof.{u+1} α]
  [inst_2 : (∀ (a : α), @has_sizeof.{v+1} (β a))],
@has_sizeof.{max 1 (max (u+1) (v+1))} (@psigma.{u+1 v+1} α β),λ (α : Type u) (β : (∀ (a : α), Type v)) [inst_1 : @has_sizeof.{u+1} α]
  [inst_2 : (∀ (a : α), @has_sizeof.{v+1} (β a))],
@has_sizeof.mk.{max 1 (max (u+1) (v+1))} (@psigma.{u+1 v+1} α β)
  (@psigma.sizeof.{u v} α β inst_1 (λ (a : α), inst_2 a)),0))"
err: "provingground.interface.UnParsedException: could not parse expression @psigma.sizeof.{u v}"

mod: "DefMod(Definition(list.mfoldl._main,Vector(Param(w), Param(u), Param(v)),∀ {m : (∀ (a_2 : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (a : (∀ (a_2 : s) (a_3 : α), m s)) (a_0 : s) (a_1 : @list.{w} α),
m s,λ {m : (∀ (a_2 : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (a : (∀ (a_2 : s) (a_3 : α), m s)) (a_0 : s) (a_1 : @list.{w} α),
@list.brec_on.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
  (λ (a_2 : @list.{w} α), ∀ (a_3 : (∀ (a_5 : s) (a_6 : α), m s)) (a_4 : s), m s)
  a_1
  (λ (a_2 : @list.{w} α)
    (F :
      @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
        (λ (a_5 : @list.{w} α),
        ∀ (a_6 : (∀ (a_8 : s) (a_9 : α), m s)) (a_7 : s),
        m s) a_2) (a_3 : (∀ (a_5 : s) (a_6 : α), m s)) (a_4 : s),
  (λ (a_5 : (∀ (a_8 : s) (a_9 : α), m s)) (a_6 : s) (a_7 : @list.{w} α)
      (F_0 :
        @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
          (λ (a_8 : @list.{w} α),
          ∀ (a_9 : (∀ (a_11 : s) (a_12 : α), m s)) (a_10 : s),
          m s) a_7),
    @list.cases_on.{max (max 1
      (max (max (u+1)
      (max (w+1)
      (v+1)))
      (max (u+1)
      (v+1))))
      (v+1) w} α
      (λ (a_8 : @list.{w} α),
      ∀ (F_1 :
          @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
            (λ (a_9 : @list.{w} α),
            ∀ (a_10 : (∀ (a_12 : s) (a_13 : α), m s)) (a_11 : s),
            m s) a_8),
      m s) a_7
      (λ (F_1 :
          @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
            (λ (a_8 : @list.{w} α),
            ∀ (a_9 : (∀ (a_11 : s) (a_12 : α), m s)) (a_10 : s),
            m s) (@list.nil.{w} α)),
      @return.{u v} m inst_1 s a_6)
      (λ (a_1_0 : α) (a_2_0 : @list.{w} α)
        (F_1 :
          @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
            (λ (a_8 : @list.{w} α),
            ∀ (a_9 : (∀ (a_11 : s) (a_12 : α), m s)) (a_10 : s),
            m s) (@list.cons.{w} α a_1_0 a_2_0)),
      @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) s s
        (a_5 a_6 a_1_0)
        (λ (s_0 : s),
        @pprod.fst.{max (max (u+1)
          (max (w+1)
          (v+1)))
          (max (u+1)
          (v+1)) max 1 (max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)))}
          ((λ (a_8 : @list.{w} α),
            ∀ (a_9 : (∀ (a_11 : s) (a_12 : α), m s)) (a_10 : s),
            m s) a_2_0)
          (@list.rec.{(max 1
            (max (max (u+1)
            (max (w+1)
            (v+1)))
            (max (u+1)
            (v+1))))+1 w} α
            (λ (n : @list.{w} α),
            Sort (max 1
            (max (max (u+1)
            (max (w+1)
            (v+1)))
            (max (u+1)
            (v+1)))))
            @punit.{max 1 (max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)))}
            (λ (a_8 : α) (a_9 : @list.{w} α)
              (ih_1 :
                Sort (max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1))))),
            @pprod.{max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))
              max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))}
              (@pprod.{max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1))
                max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))}
                ((λ (a_10 : @list.{w} α),
                  ∀ (a_11 : (∀ (a_13 : s) (a_14 : α), m s)) (a_12 : s),
                  m s) a_9) ih_1)
              @punit.{max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))}) a_2_0)
          (@pprod.fst.{max 1
            (max (max (u+1)
            (max (w+1)
            (v+1)))
            (max (u+1)
            (v+1))) max 1 (max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)))}
            (@pprod.{max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1))
              max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))}
              ((λ (a_8 : @list.{w} α),
                ∀ (a_9 : (∀ (a_11 : s) (a_12 : α), m s)) (a_10 : s),
                m s) a_2_0)
              (@list.rec.{(max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1))))+1 w} α
                (λ (n : @list.{w} α),
                Sort (max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))))
                @punit.{max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))}
                (λ (a_8 : α) (a_9 : @list.{w} α)
                  (ih_1 :
                    Sort (max 1
                    (max (max (u+1)
                    (max (w+1)
                    (v+1)))
                    (max (u+1)
                    (v+1))))),
                @pprod.{max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1)))
                  max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1)))}
                  (@pprod.{max (max (u+1)
                    (max (w+1)
                    (v+1)))
                    (max (u+1)
                    (v+1))
                    max 1
                    (max (max (u+1)
                    (max (w+1)
                    (v+1)))
                    (max (u+1)
                    (v+1)))}
                    ((λ (a_10 : @list.{w} α),
                      ∀ (a_11 : (∀ (a_13 : s) (a_14 : α), m s)) (a_12 : s),
                      m s) a_9) ih_1)
                  @punit.{max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1)))}) a_2_0))
            @punit.{max 1 (max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)))}
            F_1) a_5 s_0)) F_0) a_3 a_4 a_2 F) a a_0,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(list.mfoldl,Vector(Param(u), Param(v), Param(w)),∀ {m : (∀ (a_2 : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (a : (∀ (a_2 : s) (a_3 : α), m s)) (a_0 : s) (a_1 : @list.{w} α),
m s,λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w},
@list.mfoldl._main.{w u v} m inst_1 s α,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(list.mfoldl._main.equations._eqn_2,Vector(Param(w), Param(v), Param(u)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (f : (∀ (a : s) (a_0 : α), m s)) (s_0 : s) (h : α)
  (r : @list.{w} α),
@eq.{v+1} (m s)
  (@list.mfoldl._main.{w u v} m inst_1 s α f s_0 (@list.cons.{w} α h r))
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) s s (f s_0 h)
    (λ (s_1 : s), @list.mfoldl._main.{w u v} m inst_1 s α f s_1 r)),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (f : (∀ (a : s) (a_0 : α), m s)) (s_0 : s) (h : α)
  (r : @list.{w} α),
@eq.refl.{v+1} (m s)
  (@list.brec_on.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
    (λ (a : @list.{w} α), ∀ (a_0 : (∀ (a_2 : s) (a_3 : α), m s)) (a_1 : s), m s)
    (@list.cons.{w} α h r)
    (λ (a : @list.{w} α)
      (F :
        @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
          (λ (a_2 : @list.{w} α),
          ∀ (a_3 : (∀ (a_5 : s) (a_6 : α), m s)) (a_4 : s),
          m s) a) (a_0 : (∀ (a_2 : s) (a_3 : α), m s)) (a_1 : s),
    (λ (a_2 : (∀ (a_5 : s) (a_6 : α), m s)) (a_3 : s) (a_4 : @list.{w} α)
        (F_0 :
          @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w} α
            (λ (a_5 : @list.{w} α),
            ∀ (a_6 : (∀ (a_8 : s) (a_9 : α), m s)) (a_7 : s),
            m s) a_4),
      @list.cases_on.{max (max 1
        (max (max (u+1)
        (max (w+1)
        (v+1)))
        (max (u+1)
        (v+1))))
        (v+1) w} α
        (λ (a_5 : @list.{w} α),
        ∀ (F_1 :
            @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w}
              α
              (λ (a_6 : @list.{w} α),
              ∀ (a_7 : (∀ (a_9 : s) (a_10 : α), m s)) (a_8 : s),
              m s) a_5),
        m s) a_4
        (λ (F_1 :
            @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w}
              α
              (λ (a_5 : @list.{w} α),
              ∀ (a_6 : (∀ (a_8 : s) (a_9 : α), m s)) (a_7 : s),
              m s) (@list.nil.{w} α)),
        @return.{u v} m inst_1 s a_3)
        (λ (a_1_0 : α) (a_2_0 : @list.{w} α)
          (F_1 :
            @list.below.{max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)) w}
              α
              (λ (a_5 : @list.{w} α),
              ∀ (a_6 : (∀ (a_8 : s) (a_9 : α), m s)) (a_7 : s),
              m s) (@list.cons.{w} α a_1_0 a_2_0)),
        @has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) s s
          (a_2 a_3 a_1_0)
          (λ (s_1 : s),
          @pprod.fst.{max (max (u+1)
            (max (w+1)
            (v+1)))
            (max (u+1)
            (v+1)) max 1 (max (max (u+1) (max (w+1) (v+1))) (max (u+1) (v+1)))}
            ((λ (a_5 : @list.{w} α),
              ∀ (a_6 : (∀ (a_8 : s) (a_9 : α), m s)) (a_7 : s),
              m s) a_2_0)
            (@list.rec.{(max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1))))+1 w} α
              (λ (n : @list.{w} α),
              Sort (max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))))
              @punit.{max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))}
              (λ (a_5 : α) (a_6 : @list.{w} α)
                (ih_1 :
                  Sort (max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1))))),
              @pprod.{max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))
                max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))}
                (@pprod.{max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1))
                  max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1)))}
                  ((λ (a_7 : @list.{w} α),
                    ∀ (a_8 : (∀ (a_10 : s) (a_11 : α), m s)) (a_9 : s),
                    m s) a_6) ih_1)
                @punit.{max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))}) a_2_0)
            (@pprod.fst.{max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))
              max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))}
              (@pprod.{max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1))
                max 1
                (max (max (u+1)
                (max (w+1)
                (v+1)))
                (max (u+1)
                (v+1)))}
                ((λ (a_5 : @list.{w} α),
                  ∀ (a_6 : (∀ (a_8 : s) (a_9 : α), m s)) (a_7 : s),
                  m s) a_2_0)
                (@list.rec.{(max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1))))+1 w} α
                  (λ (n : @list.{w} α),
                  Sort (max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1)))))
                  @punit.{max 1
                  (max (max (u+1)
                  (max (w+1)
                  (v+1)))
                  (max (u+1)
                  (v+1)))}
                  (λ (a_5 : α) (a_6 : @list.{w} α)
                    (ih_1 :
                      Sort (max 1
                      (max (max (u+1)
                      (max (w+1)
                      (v+1)))
                      (max (u+1)
                      (v+1))))),
                  @pprod.{max 1
                    (max (max (u+1)
                    (max (w+1)
                    (v+1)))
                    (max (u+1)
                    (v+1)))
                    max 1
                    (max (max (u+1)
                    (max (w+1)
                    (v+1)))
                    (max (u+1)
                    (v+1)))}
                    (@pprod.{max (max (u+1)
                      (max (w+1)
                      (v+1)))
                      (max (u+1)
                      (v+1))
                      max 1
                      (max (max (u+1)
                      (max (w+1)
                      (v+1)))
                      (max (u+1)
                      (v+1)))}
                      ((λ (a_7 : @list.{w} α),
                        ∀ (a_8 : (∀ (a_10 : s) (a_11 : α), m s)) (a_9 : s),
                        m s) a_6) ih_1)
                    @punit.{max 1
                    (max (max (u+1)
                    (max (w+1)
                    (v+1)))
                    (max (u+1)
                    (v+1)))}) a_2_0))
              @punit.{max 1
              (max (max (u+1)
              (max (w+1)
              (v+1)))
              (max (u+1)
              (v+1)))} F_1) a_2 s_1)) F_0) a_0 a_1 a F) f s_0),0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "DefMod(Definition(list.mfoldl.equations._eqn_2,Vector(Param(u), Param(v), Param(w)),∀ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w} (f : (∀ (a : s) (a_0 : α), m s)) (s_0 : s) (h : α)
  (r : @list.{w} α),
@eq.{v+1} (m s) (@list.mfoldl.{u v w} m inst_1 s α f s_0 (@list.cons.{w} α h r))
  (@has_bind.bind.{u v} m (@monad.to_has_bind.{u v} m inst_1) s s (f s_0 h)
    (λ (s_1 : s), @list.mfoldl.{u v w} m inst_1 s α f s_1 r)),λ {m : (∀ (a : Type u), Type v)} [inst_1 : @monad.{u v} m] {s : Type u}
  {α : Type w},
@list.mfoldl._main.equations._eqn_2.{w v u} m inst_1 s α,0))"
err: "provingground.interface.UnParsedException: could not parse expression @monad.{u v}"

mod: "IndMod(InductiveType(cc_config,Vector(),Type 0),0,Vector((cc_config.mk,∀ (ignore_instances ac : @bool) (ho_fns : @option.{0} (@list.{0} @name))
  (em : @bool),
@cc_config)))"
err: "provingground.interface.UnParsedException: could not parse expression @name"

mod: "IndMod(InductiveType(smt_pre_config,Vector(),Type 0),0,Vector((smt_pre_config.mk,∀ (simp_attr : @name) (max_steps : @nat) (zeta : @bool), @smt_pre_config)))"
err: "provingground.interface.UnParsedException: could not parse expression @name"

mod: "IndMod(InductiveType(smt_config,Vector(),Type 0),0,Vector((smt_config.mk,∀ (cc_cfg : @cc_config) (em_cfg : @ematch_config) (pre_cfg : @smt_pre_config)
  (em_attr : @name),
@smt_config)))"
err: "provingground.interface.UnParsedException: could not parse expression @cc_config"

mod: "DefMod(Definition(smt_config.rec_on,Vector(Param(l)),∀ {C : (∀ (n_0 : @smt_config), Sort l)} (n : @smt_config)
  (e_1 :
    (∀ (cc_cfg : @cc_config) (em_cfg : @ematch_config)
      (pre_cfg : @smt_pre_config) (em_attr : @name),
    C (@smt_config.mk cc_cfg em_cfg pre_cfg em_attr))),
C n,λ {C : (∀ (n_0 : @smt_config), Sort l)} (n : @smt_config)
  (e_1 :
    (∀ (cc_cfg : @cc_config) (em_cfg : @ematch_config)
      (pre_cfg : @smt_pre_config) (em_attr : @name),
    C (@smt_config.mk cc_cfg em_cfg pre_cfg em_attr))),
@smt_config.rec.{l} C e_1 n,0))"
err: "provingground.interface.UnParsedException: could not parse expression @smt_config"

mod: "DefMod(Definition(list.cmp._main,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_ordering.{u} α] (a a_0 : @list.{u} α), @ordering,λ {α : Type u} [inst_1 : @has_ordering.{u} α] (a a_0 : @list.{u} α),
@list.brec_on.{max (u+1) 1 u} α
  (λ (a_1 : @list.{u} α), ∀ (a_2 : @list.{u} α), @ordering) a
  (λ (a_1 : @list.{u} α)
    (F :
      @list.below.{max (u+1) 1 u} α
        (λ (a_3 : @list.{u} α), ∀ (a_4 : @list.{u} α), @ordering) a_1)
    (a_2 : @list.{u} α),
  (λ (a_3 a_4 : @list.{u} α)
      (F_0 :
        @list.below.{max (u+1) 1 u} α
          (λ (a_5 : @list.{u} α), ∀ (a_6 : @list.{u} α), @ordering) a_3),
    @list.cases_on.{max (u+1) 1 u} α
      (λ (a_5 : @list.{u} α),
      ∀ (F_1 :
          @list.below.{max (u+1) 1 u} α
            (λ (a_6 : @list.{u} α), ∀ (a_7 : @list.{u} α), @ordering) a_5),
      @ordering) a_3
      (λ (F_1 :
          @list.below.{max (u+1) 1 u} α
            (λ (a_5 : @list.{u} α), ∀ (a_6 : @list.{u} α), @ordering)
            (@list.nil.{u} α)),
      @list.cases_on.{1 u} α (λ (a_5 : @list.{u} α), @ordering) a_4 @ordering.eq
        (λ (a_5 : α) (a_1_0 : @list.{u} α), @ordering.lt))
      (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
        (F_1 :
          @list.below.{max (u+1) 1 u} α
            (λ (a_5 : @list.{u} α), ∀ (a_6 : @list.{u} α), @ordering)
            (@list.cons.{u} α a_1_0 a_2_0)),
      @list.cases_on.{1 u} α (λ (a_5 : @list.{u} α), @ordering) a_4 @ordering.gt
        (λ (a_5 : α) (a_3_0 : @list.{u} α),
        @ordering.or_else (@has_ordering.cmp.{u} α inst_1 a_1_0 a_5)
          (λ (a_6 : @unit),
          @pprod.fst.{max (u+1) 1 max (u+1) 1}
            ((λ (a_7 : @list.{u} α), ∀ (a_8 : @list.{u} α), @ordering) a_2_0)
            (@list.rec.{(max (u+1) 1)+1 u} α
              (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
              (λ (a_7 : α) (a_8 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
              @pprod.{max (u+1) 1 max (u+1) 1}
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  ((λ (a_9 : @list.{u} α), ∀ (a_10 : @list.{u} α), @ordering)
                    a_8) ih_1) @punit.{max (u+1) 1}) a_2_0)
            (@pprod.fst.{max (u+1) 1 max (u+1) 1}
              (@pprod.{max (u+1) 1 max (u+1) 1}
                ((λ (a_7 : @list.{u} α), ∀ (a_8 : @list.{u} α), @ordering)
                  a_2_0)
                (@list.rec.{(max (u+1) 1)+1 u} α
                  (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
                  (λ (a_7 : α) (a_8 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
                  @pprod.{max (u+1) 1 max (u+1) 1}
                    (@pprod.{max (u+1) 1 max (u+1) 1}
                      ((λ (a_9 : @list.{u} α),
                        ∀ (a_10 : @list.{u} α),
                        @ordering) a_8) ih_1) @punit.{max (u+1) 1}) a_2_0))
              @punit.{max (u+1) 1} F_1) a_3_0))) F_0) a_1 a_2 F) a_0,0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(list.cmp,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_ordering.{u} α] (a a_0 : @list.{u} α), @ordering,λ {α : Type u} [inst_1 : @has_ordering.{u} α], @list.cmp._main.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.cmp._main.{u}"

mod: "DefMod(Definition(list.cmp._main.equations._eqn_4,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_ordering.{u} α] (a : α) (l : @list.{u} α) (b : α)
  (l_0 : @list.{u} α),
@eq.{1} @ordering
  (@list.cmp._main.{u} α inst_1 (@list.cons.{u} α a l) (@list.cons.{u} α b l_0))
  (@ordering.or_else (@has_ordering.cmp.{u} α inst_1 a b)
    (λ (a_0 : @unit), @list.cmp._main.{u} α inst_1 l l_0)),λ {α : Type u} [inst_1 : @has_ordering.{u} α] (a : α) (l : @list.{u} α) (b : α)
  (l_0 : @list.{u} α),
@eq.refl.{1} @ordering
  (@list.brec_on.{max (u+1) 1 u} α
    (λ (a_0 : @list.{u} α), ∀ (a_1 : @list.{u} α), @ordering)
    (@list.cons.{u} α a l)
    (λ (a_0 : @list.{u} α)
      (F :
        @list.below.{max (u+1) 1 u} α
          (λ (a_2 : @list.{u} α), ∀ (a_3 : @list.{u} α), @ordering) a_0)
      (a_1 : @list.{u} α),
    (λ (a_2 a_3 : @list.{u} α)
        (F_0 :
          @list.below.{max (u+1) 1 u} α
            (λ (a_4 : @list.{u} α), ∀ (a_5 : @list.{u} α), @ordering) a_2),
      @list.cases_on.{max (u+1) 1 u} α
        (λ (a_4 : @list.{u} α),
        ∀ (F_1 :
            @list.below.{max (u+1) 1 u} α
              (λ (a_5 : @list.{u} α), ∀ (a_6 : @list.{u} α), @ordering) a_4),
        @ordering) a_2
        (λ (F_1 :
            @list.below.{max (u+1) 1 u} α
              (λ (a_4 : @list.{u} α), ∀ (a_5 : @list.{u} α), @ordering)
              (@list.nil.{u} α)),
        @list.cases_on.{1 u} α (λ (a_4 : @list.{u} α), @ordering) a_3
          @ordering.eq (λ (a_4 : α) (a_1_0 : @list.{u} α), @ordering.lt))
        (λ (a_1_0 : α) (a_2_0 : @list.{u} α)
          (F_1 :
            @list.below.{max (u+1) 1 u} α
              (λ (a_4 : @list.{u} α), ∀ (a_5 : @list.{u} α), @ordering)
              (@list.cons.{u} α a_1_0 a_2_0)),
        @list.cases_on.{1 u} α (λ (a_4 : @list.{u} α), @ordering) a_3
          @ordering.gt
          (λ (a_4 : α) (a_3_0 : @list.{u} α),
          @ordering.or_else (@has_ordering.cmp.{u} α inst_1 a_1_0 a_4)
            (λ (a_5 : @unit),
            @pprod.fst.{max (u+1) 1 max (u+1) 1}
              ((λ (a_6 : @list.{u} α), ∀ (a_7 : @list.{u} α), @ordering) a_2_0)
              (@list.rec.{(max (u+1) 1)+1 u} α
                (λ (n : @list.{u} α), Sort (max (u+1) 1)) @punit.{max (u+1) 1}
                (λ (a_6 : α) (a_7 : @list.{u} α) (ih_1 : Sort (max (u+1) 1)),
                @pprod.{max (u+1) 1 max (u+1) 1}
                  (@pprod.{max (u+1) 1 max (u+1) 1}
                    ((λ (a_8 : @list.{u} α), ∀ (a_9 : @list.{u} α), @ordering)
                      a_7) ih_1) @punit.{max (u+1) 1}) a_2_0)
              (@pprod.fst.{max (u+1) 1 max (u+1) 1}
                (@pprod.{max (u+1) 1 max (u+1) 1}
                  ((λ (a_6 : @list.{u} α), ∀ (a_7 : @list.{u} α), @ordering)
                    a_2_0)
                  (@list.rec.{(max (u+1) 1)+1 u} α
                    (λ (n : @list.{u} α), Sort (max (u+1) 1))
                    @punit.{max (u+1) 1}
                    (λ (a_6 : α) (a_7 : @list.{u} α)
                      (ih_1 : Sort (max (u+1) 1)),
                    @pprod.{max (u+1) 1 max (u+1) 1}
                      (@pprod.{max (u+1) 1 max (u+1) 1}
                        ((λ (a_8 : @list.{u} α),
                          ∀ (a_9 : @list.{u} α),
                          @ordering) a_7) ih_1) @punit.{max (u+1) 1}) a_2_0))
                @punit.{max (u+1) 1} F_1) a_3_0))) F_0) a_0 a_1 F)
    (@list.cons.{u} α b l_0)),0))"
err: "provingground.HoTT$ApplnFailException: function func  cannot act on given term"

mod: "DefMod(Definition(list.cmp.equations._eqn_4,Vector(Param(u)),∀ {α : Type u} [inst_1 : @has_ordering.{u} α] (a : α) (l : @list.{u} α) (b : α)
  (l_0 : @list.{u} α),
@eq.{1} @ordering
  (@list.cmp.{u} α inst_1 (@list.cons.{u} α a l) (@list.cons.{u} α b l_0))
  (@ordering.or_else (@has_ordering.cmp.{u} α inst_1 a b)
    (λ (a_0 : @unit), @list.cmp.{u} α inst_1 l l_0)),λ {α : Type u} [inst_1 : @has_ordering.{u} α],
@list.cmp._main.equations._eqn_4.{u} α inst_1,0))"
err: "provingground.interface.UnParsedException: could not parse expression @list.cmp._main.equations._eqn_4.{u}"

mod: "DefMod(Definition(nat.has_repr.equations._eqn_1,Vector(),@eq.{1} (@has_repr.{0} @nat) @nat.has_repr (@has_repr.mk.{0} @nat @nat.repr),@eq.refl.{1} (@has_repr.{0} @nat) @nat.has_repr,0))"
err: "provingground.interface.UnParsedException: could not parse expression @nat.has_repr"

mod: "IndMod(InductiveType(rsimp.config,Vector(),Type 0),0,Vector((rsimp.config.mk,∀ (attr_name : @name) (max_rounds : @nat), @rsimp.config)))"
err: "provingground.interface.UnParsedException: could not parse expression @name"

mod: "DefMod(Definition(string.length,Vector(),∀ (a : @string), @nat,@string.length._main,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string.length._main"

mod: "DefMod(Definition(string.has_sizeof,Vector(),@has_sizeof.{1} @string,@has_sizeof.mk.{1} @string @string.length,0))"
err: "provingground.interface.UnParsedException: could not parse expression @string.length"

mod: "DefMod(Definition(name.has_sizeof_inst,Vector(),@has_sizeof.{1} @name,@has_sizeof.mk.{1} @name @name.sizeof,0))"
err: "provingground.interface.UnParsedException: could not parse expression @name.sizeof"

mod: "DefMod(Definition(rsimp.config.has_sizeof_inst,Vector(),@has_sizeof.{1} @rsimp.config,@has_sizeof.mk.{1} @rsimp.config @rsimp.config.sizeof,0))"
err: "provingground.interface.UnParsedException: could not parse expression @rsimp.config.sizeof"

mod: "DefMod(Definition(neg_add_rev,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@eq.{u+1} α
  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))) a b))
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1)))
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)),λ {α : Type u} [inst_1 : @add_group.{u} α] (a b : α),
@neg_eq_of_add_eq_zero.{u} α inst_1
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1))) a b)
  (@has_add.add.{u} α
    (@add_semigroup.to_has_add.{u} α
      (@add_monoid.to_add_semigroup.{u} α
        (@add_group.to_add_monoid.{u} α inst_1)))
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
  (@eq.mpr.{0}
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a b)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
          (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))
    (@eq.{u+1} α
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) a
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) b
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
      (@has_zero.zero.{u} α
        (@add_monoid.to_has_zero.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))))
    (@id_locked.{0}
      (@eq.{1} Prop
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a b)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))))
      (@eq.rec.{0 u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a b)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
        (λ (a_0 : α),
        @eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))))
          (@eq.{u+1} α a_0
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))))
        (@eq.refl.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a b)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
        (@add_assoc.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1)) a b
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))))
    (@eq.mpr.{0}
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))))
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
        (@has_zero.zero.{u} α
          (@add_monoid.to_has_zero.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))))
      (@id_locked.{0}
        (@eq.{1} Prop
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))))
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))))
        (@eq.rec.{0 u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
          (λ (a_0 : α),
          @eq.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      a))))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))))
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a a_0)
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))))
          (@eq.refl.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) b
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      a))))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
          (@eq.symm.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
            (@add_assoc.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)) b
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))))
      (@eq.mpr.{0}
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
          (@has_zero.zero.{u} α
            (@add_monoid.to_has_zero.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))))
        (@id_locked.{0}
          (@eq.{1} Prop
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) b
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))))
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))))
          (@eq.rec.{0 u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
            (λ (a_0 : α),
            @eq.{1} Prop
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) b
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        b))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      a)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))))
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) a_0
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      a)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))))
            (@eq.refl.{1} Prop
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) b
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        b))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      a)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@add_right_neg.{u} α inst_1 b)))
        (@eq.mpr.{0}
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))))
          (@eq.{u+1} α
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
            (@has_zero.zero.{u} α
              (@add_monoid.to_has_zero.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))))
          (@id_locked.{0}
            (@eq.{1} Prop
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_zero.zero.{u} α
                      (@add_monoid.to_has_zero.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                      a)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))))
              (@eq.{u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))))
            (@eq.rec.{0 u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
              (λ (a_0 : α),
              @eq.{1} Prop
                (@eq.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) a
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1)))
                      (@has_zero.zero.{u} α
                        (@add_monoid.to_has_zero.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1)))
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        a)))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))))
                (@eq.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) a a_0)
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))))
              (@eq.refl.{1} Prop
                (@eq.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) a
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1)))
                      (@has_zero.zero.{u} α
                        (@add_monoid.to_has_zero.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1)))
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        a)))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a)
              (@zero_add.{u} α (@add_group.to_add_monoid.{u} α inst_1)
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))))
          (@eq.mpr.{0}
            (@eq.{u+1} α
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))))
            (@eq.{u+1} α
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))))
            (@id_locked.{0}
              (@eq.{1} Prop
                (@eq.{u+1} α
                  (@has_add.add.{u} α
                    (@add_semigroup.to_has_add.{u} α
                      (@add_monoid.to_add_semigroup.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))) a
                    (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))))
                (@eq.{u+1} α
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))
                  (@has_zero.zero.{u} α
                    (@add_monoid.to_has_zero.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1)))))
              (@eq.rec.{0 u+1} α
                (@has_add.add.{u} α
                  (@add_semigroup.to_has_add.{u} α
                    (@add_monoid.to_add_semigroup.{u} α
                      (@add_group.to_add_monoid.{u} α inst_1))) a
                  (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) a))
                (λ (a_0 : α),
                @eq.{1} Prop
                  (@eq.{u+1} α
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) a
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        a))
                    (@has_zero.zero.{u} α
                      (@add_monoid.to_has_zero.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1))))
                  (@eq.{u+1} α a_0
                    (@has_zero.zero.{u} α
                      (@add_monoid.to_has_zero.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))))
                (@eq.refl.{1} Prop
                  (@eq.{u+1} α
                    (@has_add.add.{u} α
                      (@add_semigroup.to_has_add.{u} α
                        (@add_monoid.to_add_semigroup.{u} α
                          (@add_group.to_add_monoid.{u} α inst_1))) a
                      (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
                        a))
                    (@has_zero.zero.{u} α
                      (@add_monoid.to_has_zero.{u} α
                        (@add_group.to_add_monoid.{u} α inst_1)))))
                (@has_zero.zero.{u} α
                  (@add_monoid.to_has_zero.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1)))
                (@add_right_neg.{u} α inst_1 a)))
            (@eq.refl.{u+1} α
              (@has_zero.zero.{u} α
                (@add_monoid.to_has_zero.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))))))))),0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(sub_add_eq_sub_sub_swap,Vector(Param(u)),∀ {α : Type u} [inst_1 : @add_group.{u} α] (a b c : α),
@eq.{u+1} α
  (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a
    (@has_add.add.{u} α
      (@add_semigroup.to_has_add.{u} α
        (@add_monoid.to_add_semigroup.{u} α
          (@add_group.to_add_monoid.{u} α inst_1))) b c))
  (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
    (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b),λ {α : Type u} [inst_1 : @add_group.{u} α] (a b c : α),
@eq.mpr.{0}
  (@eq.{u+1} α
    (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a
      (@has_add.add.{u} α
        (@add_semigroup.to_has_add.{u} α
          (@add_monoid.to_add_semigroup.{u} α
            (@add_group.to_add_monoid.{u} α inst_1))) b c))
    (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
      (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b)) @true
  (@id_locked.{0}
    (@eq.{1} Prop
      (@eq.{u+1} α
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b c))
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b)) @true)
    (@eq.trans.{1} Prop
      (@eq.{u+1} α
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b c))
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b))
      (@eq.{u+1} α
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))) @true
      ((λ (a_0 a_1 : α) (e_1 : @eq.{u+1} α a_0 a_1) (a_2 a_3 : α)
          (e_2 : @eq.{u+1} α a_2 a_3),
        @congr.{u+1 1} α Prop (@eq.{u+1} α a_0) (@eq.{u+1} α a_1) a_2 a_3
          (@congr_arg.{u+1 max (u+1) 1} α (∀ (a_4 : α), Prop) a_0 a_1
            (@eq.{u+1} α) e_1) e_2)
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) b c))
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
        (@eq.trans.{u+1} α
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b c))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b c)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
          (@sub_eq_add_neg.{u} α inst_1 a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) b c))
          ((λ [c_0 : @has_add.{u} α] (a_0 a_1 : α) (e_2 : @eq.{u+1} α a_0 a_1)
              (a_2 a_3 : α) (e_3 : @eq.{u+1} α a_2 a_3),
            @congr.{u+1 u+1} α α (@has_add.add.{u} α c_0 a_0)
              (@has_add.add.{u} α c_0 a_1) a_2 a_3
              (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                (@has_add.add.{u} α c_0) e_2) e_3)
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a a
            (@eq.refl.{u+1} α a)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) b c))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
            (@neg_add_rev.{u} α inst_1 b c)))
        (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b)
        (@has_add.add.{u} α
          (@add_semigroup.to_has_add.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1))) a
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
        (@eq.trans.{u+1} α
          (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b)
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1)))
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1))) a
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
          (@eq.trans.{u+1} α
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c) b)
            (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)) b)
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))
            ((λ [c_0 : @has_sub.{u} α] (a_0 a_1 : α) (e_2 : @eq.{u+1} α a_0 a_1)
                (a_2 a_3 : α) (e_3 : @eq.{u+1} α a_2 a_3),
              @congr.{u+1 u+1} α α (@has_sub.sub.{u} α c_0 a_0)
                (@has_sub.sub.{u} α c_0 a_1) a_2 a_3
                (@congr_arg.{u+1 u+1} α (∀ (a_4 : α), α) a_0 a_1
                  (@has_sub.sub.{u} α c_0) e_2) e_3)
              (@add_group_has_sub.{u} α inst_1)
              (@has_sub.sub.{u} α (@add_group_has_sub.{u} α inst_1) a c)
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c))
              (@sub_eq_add_neg.{u} α inst_1 a c) b b (@eq.refl.{u+1} α b))
            (@sub_eq_add_neg.{u} α inst_1
              (@has_add.add.{u} α
                (@add_semigroup.to_has_add.{u} α
                  (@add_monoid.to_add_semigroup.{u} α
                    (@add_group.to_add_monoid.{u} α inst_1))) a
                (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)) b))
          (@add_assoc.{u} α
            (@add_monoid.to_add_semigroup.{u} α
              (@add_group.to_add_monoid.{u} α inst_1)) a
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
            (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))))
      (@propext
        (@eq.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b))))
        @true
        (@eq_self_iff_true.{u+1} α
          (@has_add.add.{u} α
            (@add_semigroup.to_has_add.{u} α
              (@add_monoid.to_add_semigroup.{u} α
                (@add_group.to_add_monoid.{u} α inst_1))) a
            (@has_add.add.{u} α
              (@add_semigroup.to_has_add.{u} α
                (@add_monoid.to_add_semigroup.{u} α
                  (@add_group.to_add_monoid.{u} α inst_1)))
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) c)
              (@has_neg.neg.{u} α (@add_group.to_has_neg.{u} α inst_1) b)))))))
  @trivial,0))"
err: "provingground.interface.UnParsedException: could not parse expression @add_group.{u}"

mod: "DefMod(Definition(setoid.refl,Vector(Param(u)),∀ {α : Sort u} [s : @setoid.{u} α] (a : α), @setoid.r.{u} α s a a,λ {α : Sort u} [s : @setoid.{u} α] (a : α),
(λ (a_0 : @equivalence.{u} α (@setoid.r.{u} α s)),
  @and.dcases_on.{0} (@reflexive.{u} α (@setoid.r.{u} α s))
    (@and (@symmetric.{u} α (@setoid.r.{u} α s))
      (@transitive.{u} α (@setoid.r.{u} α s)))
    (λ (a_1 : @equivalence.{u} α (@setoid.r.{u} α s)), @setoid.r.{u} α s a a)
    a_0
    (λ (a_1 : @reflexive.{u} α (@setoid.r.{u} α s))
      (a_2 :
        @and (@symmetric.{u} α (@setoid.r.{u} α s))
          (@transitive.{u} α (@setoid.r.{u} α s))),
    @and.dcases_on.{0} (@symmetric.{u} α (@setoid.r.{u} α s))
      (@transitive.{u} α (@setoid.r.{u} α s))
      (λ (a_2_0 :
          @and (@symmetric.{u} α (@setoid.r.{u} α s))
            (@transitive.{u} α (@setoid.r.{u} α s))),
      @setoid.r.{u} α s a a) a_2
      (λ (a_2_0 : @symmetric.{u} α (@setoid.r.{u} α s))
        (a_3 : @transitive.{u} α (@setoid.r.{u} α s)),
      a_1 a))) (@setoid.iseqv.{u} α s),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

mod: "DefMod(Definition(list.ilast._main,Vector(Param(u)),∀ {α : Type u} [inst_1 : @inhabited.{u+1} α] (a : @list.{u} α), α,λ {α : Type u} [inst_1 : @inhabited.{u+1} α] (a : @list.{u} α),
@list.brec_on.{u+1 u} α (λ (a_0 : @list.{u} α), α) a
  (λ (a_0 : @list.{u} α)
    (F : @list.below.{u+1 u} α (λ (a_1 : @list.{u} α), α) a_0),
  (λ (a_1 : @list.{u} α)
      (F_0 : @list.below.{u+1 u} α (λ (a_2 : @list.{u} α), α) a_1),
    @list.cases_on.{max 1 (u+1) u} α
      (λ (a_2 : @list.{u} α),
      ∀ (F_1 : @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α) a_2),
      α) a_1
      (λ (F_1 :
          @list.below.{u+1 u} α (λ (a_2 : @list.{u} α), α) (@list.nil.{u} α)),
      @arbitrary.{u+1} α inst_1)
      (λ (a_2 : α) (a_1_0 : @list.{u} α)
        (F_1 :
          @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α)
            (@list.cons.{u} α a_2 a_1_0)),
      @list.cases_on.{max 1 (u+1) u} α
        (λ (a_1_1 : @list.{u} α),
        ∀ (F_2 :
            @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α)
              (@list.cons.{u} α a_2 a_1_1)),
        α) a_1_0
        (λ (F_2 :
            @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α)
              (@list.cons.{u} α a_2 (@list.nil.{u} α))),
        a_2)
        (λ (a_1_1 : α) (a_2_0 : @list.{u} α)
          (F_2 :
            @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α)
              (@list.cons.{u} α a_2 (@list.cons.{u} α a_1_1 a_2_0))),
        @list.cases_on.{max 1 (u+1) u} α
          (λ (a_2_1 : @list.{u} α),
          ∀ (F_3 :
              @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α)
                (@list.cons.{u} α a_2 (@list.cons.{u} α a_1_1 a_2_1))),
          α) a_2_0
          (λ (F_3 :
              @list.below.{u+1 u} α (λ (a_3 : @list.{u} α), α)
                (@list.cons.{u} α a_2
                  (@list.cons.{u} α a_1_1 (@list.nil.{u} α)))),
          a_1_1)
          (λ (a_2_1 : α) (a_3 : @list.{u} α)
            (F_3 :
              @list.below.{u+1 u} α (λ (a_4 : @list.{u} α), α)
                (@list.cons.{u} α a_2
                  (@list.cons.{u} α a_1_1 (@list.cons.{u} α a_2_1 a_3)))),
          @pprod.fst.{u+1 max 1 (u+1)}
            ((λ (a_4 : @list.{u} α), α) (@list.cons.{u} α a_2_1 a_3))
            (@list.rec.{(max 1 (u+1))+1 u} α
              (λ (n : @list.{u} α), Sort (max 1 (u+1))) @punit.{max 1 (u+1)}
              (λ (a_4 : α) (a_5 : @list.{u} α) (ih_1 : Sort (max 1 (u+1))),
              @pprod.{max 1 (u+1) max 1 (u+1)}
                (@pprod.{u+1 max 1 (u+1)} ((λ (a_6 : @list.{u} α), α) a_5) ih_1)
                @punit.{max 1 (u+1)}) (@list.cons.{u} α a_2_1 a_3))
            (@pprod.fst.{max 1 (u+1) max 1 (u+1)}
              (@pprod.{u+1 max 1 (u+1)}
                ((λ (a_4 : @list.{u} α), α) (@list.cons.{u} α a_2_1 a_3))
                (@list.rec.{(max 1 (u+1))+1 u} α
                  (λ (n : @list.{u} α), Sort (max 1 (u+1))) @punit.{max 1 (u+1)}
                  (λ (a_4 : α) (a_5 : @list.{u} α) (ih_1 : Sort (max 1 (u+1))),
                  @pprod.{max 1 (u+1) max 1 (u+1)}
                    (@pprod.{u+1 max 1 (u+1)} ((λ (a_6 : @list.{u} α), α) a_5)
                      ih_1) @punit.{max 1 (u+1)}) (@list.cons.{u} α a_2_1 a_3)))
              @punit.{max 1 (u+1)}
              (@pprod.snd.{u+1 max 1 (u+1)}
                ((λ (a_4 : @list.{u} α), α)
                  (@list.cons.{u} α a_1_1 (@list.cons.{u} α a_2_1 a_3)))
                (@list.rec.{(max 1 (u+1))+1 u} α
                  (λ (n : @list.{u} α), Sort (max 1 (u+1))) @punit.{max 1 (u+1)}
                  (λ (a_4 : α) (a_5 : @list.{u} α) (ih_1 : Sort (max 1 (u+1))),
                  @pprod.{max 1 (u+1) max 1 (u+1)}
                    (@pprod.{u+1 max 1 (u+1)} ((λ (a_6 : @list.{u} α), α) a_5)
                      ih_1) @punit.{max 1 (u+1)})
                  (@list.cons.{u} α a_1_1 (@list.cons.{u} α a_2_1 a_3)))
                (@pprod.fst.{max 1 (u+1) max 1 (u+1)}
                  (@pprod.{u+1 max 1 (u+1)}
                    ((λ (a_4 : @list.{u} α), α)
                      (@list.cons.{u} α a_1_1 (@list.cons.{u} α a_2_1 a_3)))
                    (@list.rec.{(max 1 (u+1))+1 u} α
                      (λ (n : @list.{u} α), Sort (max 1 (u+1)))
                      @punit.{max 1 (u+1)}
                      (λ (a_4 : α) (a_5 : @list.{u} α)
                        (ih_1 : Sort (max 1 (u+1))),
                      @pprod.{max 1 (u+1) max 1 (u+1)}
                        (@pprod.{u+1 max 1 (u+1)}
                          ((λ (a_6 : @list.{u} α), α) a_5) ih_1)
                        @punit.{max 1 (u+1)})
                      (@list.cons.{u} α a_1_1 (@list.cons.{u} α a_2_1 a_3))))
                  @punit.{max 1 (u+1)} F_3)))) F_2) F_1) F_0) a_0 F),0))"
err: "java.util.concurrent.TimeoutException: Task timed-out after 5 minutes of inactivity"

