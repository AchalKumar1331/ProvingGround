idimpliesimplies.trans	impliestrivial	true	true.intronot	falseabsurd	false.recnot.intro	notmt	not	absurd	falseimplies.resolve	notnot_false	not	falsenon_contradictory	not	notnon_contradictory_intro	not	not	absurd	falsefalse.elim	false.recrfl	eq	eq.reflproof_irrel	eq	rfleq.drec	eq.receq.drec_on	eq.dreceq.subst	eq.receq.trans	eq	eq.subst	eqeq.symm	eq	eq.rec	eq	eq.refleq.substr	eq.subst	eq.symmeq.mp	eq.rec_oneq.mpr	eq.rec_on	eq.symmcongr	eq	eq.subst	eq	eq.subst	eq	rflcongr_fun	eq	eq.subst	eq	eq.reflcongr_arg	eq	congr	rfltrans_rel_left	eq.substtrans_rel_right	eq.subst	eq.symmof_eq_true	eq.subst	true	eq.symm	true	trivialnot_of_eq_false	not	eq.subst	falsecast	eq.reccast_proof_irrel	eq	cast	cast	rfl	castcast_eq	eq	cast	rfl	castne	not	eqne.intro	nene.elim	falsene.irrefl	false	rflne.symm	ne	eq.symmfalse_of_ne	false	ne.irreflne_false_of_self	ne	false	eq.subst	falsene_true_of_not	ne	true	eq.subst	true	not	trivialtrue_ne_false	not	eq	true	false	ne_false_of_self	true	trivialeq_of_heq	eq	heq.rec	eq	eq.rec	eq.refl	eq.reflheq.elim	eq.rec_on	eq_of_heqheq.subst	heq.rec_onheq.symm	heq	heq.rec_on	heq	heq.reflheq_of_eq	heq	eq.subst	heq	heq.reflheq.trans	heq	heq.subst	heqheq_of_heq_of_eq	heq	heq.trans	heq_of_eqheq_of_eq_of_heq	heq	heq.trans	heq_of_eqtype_eq_of_heq	eq	heq.rec_on	eq	eq.refleq_rec_heq	heq	eq.rec	eq.drec_on	heq	eq.rec	heq.reflheq_of_eq_rec_left	heq	eq.cases_on	heq	eq.rec	heq	eq.rec_on	eq.rec	eq.refl	heq	heq.refl	eq.reflheq_of_eq_rec_right	heq	eq.cases_on	heq	eq.rec	heq	eq.rec_on	heq	eq.rec	eq.refl	heq.refl	eq.reflof_heq_true	of_eq_true	eq_of_heq	trueeq_rec_compose	eq	eq.rec	eq.rec	eq.rec	eq.trans	eq.cases_on	eq	eq.rec	eq.rec	eq.rec	eq.trans	eq.rec	eq	eq.rec	eq.rec	eq.rec	eq.trans	eq.cases_on	eq	eq.rec	eq.rec	eq.rec	eq.trans	eq.rec	eq	eq.rec	eq.rec	eq.rec	eq.trans	eq.trans	eq.rec	eq.rec	eq.refl	eq.refl	eq.rec	eq.refl	eq.rec	eq.trans	eq.refl	eq.refl	rfl	eq.rec	eq.rec	eq.refl	eq.refl	eq.subst	eq	eq.refl	eq.trans	eq.refl	eq.refl	eq	eq.rec	eq.rec	proof_irrel	eq	eq.refl	eq.trans	eq.refl	eq.refl	eq.refl	eq.rec	eq.refl	eq.refl	eq.refleq_rec_eq_eq_rec	eq	eq.rec	eq.symm	eq.drec_on	eq	eq.rec	eq.symm	eq.drec_on	eq.rec	eq.refl	eq	eq.rec	eq.symm	eq.refl	rfl	eq.rec	eq.rec	eq.refl	eq.symm	eq.refleq_rec_of_heq_left	eq	eq.rec	type_eq_of_heq	heq.cases_on	eq	eq.rec	type_eq_of_heq	eq.rec	eq	eq.rec	type_eq_of_heq	eq.rec	eq	eq.rec	type_eq_of_heq	rfl	eq.rec	type_eq_of_heq	heq.refl	eq_of_heq	eq.refl	heq.refleq_rec_of_heq_right	eq	eq.rec	eq.symm	type_eq_of_heq	eq_rec_eq_eq_rec	type_eq_of_heq	eq_rec_of_heq_leftcast_heq	heq	cast	eq.cases_on	heq	cast	eq.rec	heq	cast	heq.refl	cast	eq.refl	eq.refland.elim	and.recand.swap	and	and.rec	and	and.introor.elim	or.recnon_contradictory_em	not	not	or	not	absurd	or	not	false	or.inr	not	absurd	or	not	false	or.inl	notor.swap	or	or.rec	or	or.inr	or.inliff	andiff.intro	iff	and.introiff.elim	and.reciff.elim_left	and.leftiff.mp	iff.elim_leftiff.elim_right	and.rightiff.mpr	iff.elim_rightiff.refl	iff	iff.introiff.rfl	iff	iff.refliff.trans	iff	iff.intro	iff.mp	iff.mp	iff.mpr	iff.mpriff.symm	iff	iff.intro	iff.elim_right	iff.elim_leftiff.comm	iff	iff	iff	iff.intro	iff	iff	iff.symm	iff.symmiff.of_eq	iff	eq.rec_on	iff	iff.rflnot_iff_not_of_iff	iff	not	not	iff.intro	not	false	iff.elim_right	iff.elim_leftof_iff_true	iff.mp	true	iff.symm	true	trivialnot_of_iff_false	not	iff.mp	falseiff_true_intro	iff	true	iff.intro	true	trivialiff_false_intro	iff	false	iff.intro	false	false.recnot_non_contradictory_iff_absurd	iff	not	not	not	not	iff.intro	not	not	not	false	non_contradictory_intro	absurd	false	falseimp_congr	iff	iff.intro	iff.mp	iff.mpr	iff.mpr	iff.mpimp_congr_right	iff	iff.intro	iff.elim_left	iff.elim_rightnot_not_intro	not	notnot_of_not_not_not	not	absurd	not	not	false	not_not_intronot_true	iff	not	true	false	iff_false_intro	not	true	not_not_intro	true	trivialnot_false_iff	iff	not	false	true	iff_true_intro	not	false	not_falsenot_congr	iff	not	not	iff.intro	false	false	iff.mpr	iff.mpne_self_iff_false	iff	not	eq	false	iff.intro	ne	false	false_of_ne	false.elim	neeq_self_iff_true	iff	eq	true	iff_true_intro	eq	rflheq_self_iff_true	iff	heq	true	iff_true_intro	heq	heq.refliff_not_self	iff	iff	not	false	iff_false_intro	iff	not	iff.mpr	not	iff.mp	falsenot_iff_self	iff	iff	not	false	iff_false_intro	iff	not	iff.mp	not	iff.mpr	falsetrue_iff_false	iff	iff	true	false	false	iff_false_intro	iff	true	false	iff.mp	true	false	trivialfalse_iff_true	iff	iff	false	true	false	iff_false_intro	iff	false	true	iff.mpr	false	true	trivialfalse_of_true_iff_false	false	iff.mp	true	false	trivialand.imp	and	and.rec	and	and.introand_congr	iff	and	and	iff.intro	and	and	and.imp	iff.mp	iff.mp	and.imp	iff.mpr	iff.mprand_congr_right	iff	and	and	iff.intro	and	and	and.cases_on	and	and.intro	iff.elim_left	and.cases_on	and	and.intro	iff.elim_rightand.comm	iff	and	and	iff.intro	and	and	and.swap	and.swapand.assoc	iff	and	and	and	and	iff.intro	and	and	and	and	and.rec	and	and	and	and.rec	and	and	and.intro	and	and.intro	and.rec	and	and	and	and.rec	and	and	and.intro	and	and.introand.left_comm	iff	and	and	and	and	iff.trans	and	and	and	and	and	and	iff.symm	and	and	and	and	and.assoc	iff.trans	and	and	and	and	and	and	and_congr	and	and	and.comm	iff.refl	and.assocand_iff_left	iff	and	iff.intro	and	and.left	and.introand_iff_right	iff	and	iff.intro	and	and.right	and.introand_true	iff	and	true	and_iff_left	true	trivialtrue_and	iff	and	true	and_iff_right	true	trivialand_false	iff	and	false	false	iff_false_intro	and	false	and.right	falsefalse_and	iff	and	false	false	iff_false_intro	and	false	and.left	falsenot_and_self	iff	and	not	false	iff_false_intro	and	not	and.elim	not	false	absurd	falseand_not_self	iff	and	not	false	iff_false_intro	and	not	and.elim	not	false	absurd	falseand_self	iff	and	iff.intro	and	and.left	and.introor.imp	or	or.rec	or	or.inl	or.inror.imp_left	or	or.imp	idor.imp_right	or	or.imp	idor_congr	iff	or	or	iff.intro	or	or	or.imp	iff.mp	iff.mp	or.imp	iff.mpr	iff.mpror.comm	iff	or	or	iff.intro	or	or	or.swap	or.swapor.assoc	iff	or	or	or	or	iff.intro	or	or	or	or	or.rec	or	or	or	or.imp_right	or	or.inl	or.inr	or	or.inr	or.rec	or	or	or	or.inl	or	or.inl	or.imp_left	or	or.inror.left_comm	iff	or	or	or	or	iff.trans	or	or	or	or	or	or	iff.symm	or	or	or	or	or.assoc	iff.trans	or	or	or	or	or	or	or_congr	or	or	or.comm	iff.refl	or.assocor_true	iff	or	true	true	iff_true_intro	or	true	or.inr	true	trivialtrue_or	iff	or	true	true	iff_true_intro	or	true	or.inl	true	trivialor_false	iff	or	false	iff.intro	or	false	or.rec	false	id	false.elim	or.inl	falsefalse_or	iff	or	false	iff.trans	or	false	or	false	or.comm	false	or_falseor_self	iff	or	iff.intro	or	or.rec	id	id	or.inlor.resolve_left	or.elim	absurd	idor.neg_resolve_left	or.elim	not	absurd	idor.resolve_right	or.elim	id	absurdor.neg_resolve_right	or.elim	not	id	absurdiff_true	iff	iff	true	iff.intro	iff	true	iff.mpr	true	trivial	iff_true_introtrue_iff	iff	iff	true	iff.trans	iff	true	iff	true	iff.comm	true	iff_trueiff_false	iff	iff	false	not	iff.intro	and	not	not	and.left	not	iff_false_introfalse_iff	iff	iff	false	not	iff.trans	iff	false	iff	false	not	iff.comm	false	iff_falseiff_self	iff	iff	true	iff_true_intro	iff	iff.rfliff_congr	iff	iff	iff	and_congr	imp_congr	imp_congrExists.rec_on	Exists.recExists.induction_on	Exists.recExists.cases_on	Exists.recexists.intro	Exists	Exists.introexists.elim	Exists.recexists_unique	Exists	and	eqexists_unique.intro	exists_unique	exists.intro	and	eq	and.intro	eqexists_unique.elim	exists.elim	and	eq	and.left	eq	and.right	eqexists_unique_of_exists_of_unique	exists_unique	exists.elim	exists_unique	exists_unique.introexists_of_exists_unique	Exists	exists.elim	and	eq	Exists	exists.intro	and.left	equnique_of_exists_unique	eq	exists_unique.elim	eq	eq.trans	eq.symmforall_congr	iff	iff.intro	iff.mp	iff.mprexists_imp_exists	Exists	exists.elim	Exists	exists.introexists_congr	iff	Exists	Exists	iff.intro	Exists	Exists	exists_imp_exists	iff.mp	exists_imp_exists	iff.mprexists_unique_congr	iff	exists_unique	exists_unique	exists_congr	and	eq	and	eq	and_congr	eq	eq	forall_congr	eq	eq	imp_congr	eq	eq	iff.rfl	eqdecidable.rec_on	decidable.recdecidable.induction_on	decidable.recdecidable.cases_on	decidable.recdecidable.no_confusion_type	decidable.cases_on	decidable.cases_on	decidable.cases_ondecidable.no_confusion	decidable.no_confusion_type	eq.rec	decidable	decidable.no_confusion_type	decidable.cases_on	decidable.no_confusion_type	eq.refl	eq.refl	notdecidable_true	decidable	true	decidable.inl	true	trivialdecidable_false	decidable	false	decidable.inr	false	not_falsedite	decidable.rec_onite	decidable.rec_ondecidable.rec_on_true	decidable.rec_on	decidable.rec_on	decidable.rec_on	false.rec	decidable.rec_on	decidable.inrdecidable.rec_on_false	decidable.rec_on	decidable.rec_on	decidable.rec_on	false.rec	decidable.rec_on	decidable.inldecidable.by_cases	ditedecidable.em	or	not	decidable.by_cases	or	not	or.inl	not	or.inr	notdecidable.by_contradiction	dite	false.recdecidable_of_decidable_of_iff	decidable	dite	decidable	decidable.inl	iff.mp	decidable.inr	iff.mp	not	not	not_iff_not_of_iffdecidable_of_decidable_of_eq	decidable	decidable_of_decidable_of_iff	iff.of_eqor.by_cases	dite	dite	false.rec	or.elim	falsedecidable_and	decidable	and	dite	decidable	and	dite	decidable	and	decidable.inl	and	and.intro	decidable.inr	and	and.right	decidable.inr	and	and.leftdecidable_or	decidable	or	dite	decidable	or	decidable.inl	or	or.inl	dite	decidable	or	decidable.inl	or	or.inr	decidable.inr	or	or.rec	falsedecidable_not	decidable	not	dite	decidable	not	decidable.inr	not	absurd	false	decidable.inl	notdecidable_implies	decidable	dite	decidable	dite	decidable	decidable.inl	decidable.inr	absurd	false	decidable.inl	absurddecidable_iff	decidable	iff	decidable_and	decidable_implies	decidable_impliesdecidable_pred	decidabledecidable_rel	decidabledecidable_eq	decidable_rel	eqdecidable_ne	decidable	ne	decidable_implies	eq	false	decidable_falsebool.ff_ne_tt	false	eq.cases_on	bool	bool.ff	false	bool.no_confusion	false	bool.tt	bool.ff	bool.tt	eq.refl	bool	bool.ttis_dec_eq	eqis_dec_refl	eq	bool	bool.ttbool.has_decidable_eq	decidable	eq	bool	bool.cases_on	decidable	eq	bool	bool.cases_on	decidable	eq	bool	bool.ff	decidable.inl	eq	bool	bool.ff	bool.ff	rfl	bool	bool.ff	decidable.inr	eq	bool	bool.ff	bool.tt	bool.ff_ne_tt	bool.cases_on	decidable	eq	bool	bool.tt	decidable.inr	eq	bool	bool.tt	bool.ff	ne.symm	bool	bool.ff	bool.tt	bool.ff_ne_tt	decidable.inl	eq	bool	bool.tt	bool.tt	rfl	bool	bool.ttdecidable_eq_of_bool_pred	decidable_eq	dite	eq	bool	bool.tt	bool.has_decidable_eq	bool.tt	decidable	eq	decidable.inl	eq	decidable.inr	eq	eq.subst	not	eq	bool	bool.ttdecidable_eq_inl_refl	eq	decidable	eq	decidable.inl	eq	eq.refl	decidable.cases_on	eq	eq	decidable	eq	decidable.inl	eq	eq.refl	rfl	decidable	eq	decidable.inl	eq	eq.refl	absurd	eq	eq	decidable	eq	decidable.inr	eq	decidable.inl	eq	eq.refl	rfldecidable_eq_inr_neg	eq	decidable	eq	decidable.inr	eq	decidable.cases_on	eq	eq	decidable	eq	decidable.inr	eq	absurd	eq	eq	decidable	eq	decidable.inl	eq	decidable.inr	eq	eq.subst	ne	eq	decidable	eq	decidable.inr	eq	decidable.inr	eq	proof_irrel	ne	rfl	decidable	eq	decidable.inr	eqinhabited.rec_on	inhabited.recinhabited.induction_on	inhabited.recinhabited.cases_on	inhabited.recinhabited.no_confusion_type	inhabited.cases_on	inhabited.cases_oninhabited.no_confusion	inhabited.no_confusion_type	eq.rec	inhabited	inhabited.no_confusion_type	inhabited.cases_on	inhabited.no_confusion_type	eq.reflinhabited.value	inhabited.recinhabited.destruct	inhabited.recdefault	inhabited.valuearbitrary	inhabited.valueProp.is_inhabited	inhabited	inhabited.mk	trueinhabited_fun	inhabited	inhabited.rec_on	inhabited	inhabited.mkinhabited_Pi	inhabited	inhabited.mk	defaultbool.is_inhabited	inhabited	bool	inhabited.mk	bool	bool.ffpos_num.is_inhabited	inhabited	pos_num	inhabited.mk	pos_num	pos_num.onenum.is_inhabited	inhabited	num	inhabited.mk	num	num.zerononempty.rec_on	nonempty.recnonempty.induction_on	nonempty.recnonempty.cases_on	nonempty.recnonempty.elim	nonempty.recnonempty_of_inhabited	nonempty	nonempty.intro	defaultnonempty_of_exists	nonempty	Exists.rec	nonempty	nonempty.introsubsingleton.rec_on	subsingleton.recsubsingleton.induction_on	subsingleton.recsubsingleton.cases_on	subsingleton.recsubsingleton.elim	eq	subsingleton.rec	eqsubsingleton.helim	heq	eq.rec	heq	heq_of_eq	subsingleton.elimsubsingleton_prop	subsingleton	subsingleton.intro	proof_irrelsubsingleton_decidable	subsingleton	decidable	subsingleton.intro	decidable	decidable.cases_on	eq	decidable	decidable.cases_on	eq	decidable	decidable.inl	eq.rec_on	eq	decidable	decidable.inl	decidable.inl	proof_irrel	rfl	decidable	decidable.inl	absurd	eq	decidable	decidable.inl	decidable.inr	decidable.cases_on	eq	decidable	decidable.inr	absurd	eq	decidable	decidable.inr	decidable.inl	eq.rec_on	not	eq	decidable	decidable.inr	decidable.inr	proof_irrel	not	rfl	decidable	decidable.inrrec_subsingleton	subsingleton	decidable.rec_on	decidable.rec_on	subsingleton	decidable.rec_onif_pos	eq	ite	decidable.rec	eq	ite	eq.refl	ite	decidable.inl	absurd	eq	ite	decidable.inrif_neg	eq	ite	decidable.rec	eq	ite	absurd	eq	ite	decidable.inl	eq.refl	ite	decidable.inrif_t_t	eq	ite	decidable.rec	eq	ite	eq.refl	ite	decidable.inl	eq.refl	ite	decidable.inrimplies_of_if_pos	eq.rec_on	ite	if_posimplies_of_if_neg	eq.rec_on	ite	if_negif_ctx_congr	eq	ite	ite	decidable.rec_on	eq	ite	ite	eq.trans	ite	ite	eq.trans	ite	if_pos	iff.mp	eq.symm	ite	if_pos	iff.mp	eq.trans	ite	ite	eq.trans	ite	if_neg	iff.mp	not	not	not_iff_not_of_iff	eq.symm	ite	if_neg	iff.mp	not	not	not_iff_not_of_iffif_congr	eq	ite	ite	if_ctx_congrif_ctx_simp_congr	eq	ite	ite	decidable_of_decidable_of_iff	if_ctx_congr	decidable_of_decidable_of_iffif_simp_congr	eq	ite	ite	decidable_of_decidable_of_iff	if_ctx_simp_congrif_true	eq	ite	true	decidable_true	if_pos	true	decidable_true	trivialif_false	eq	ite	false	decidable_false	if_neg	false	decidable_false	not_falseif_ctx_congr_prop	iff	ite	ite	decidable.rec_on	iff	ite	ite	iff.trans	ite	ite	iff.trans	ite	iff.of_eq	ite	if_pos	iff.mp	iff.symm	ite	iff.of_eq	ite	if_pos	iff.mp	iff.trans	ite	ite	iff.trans	ite	iff.of_eq	ite	if_neg	iff.mp	not	not	not_iff_not_of_iff	iff.symm	ite	iff.of_eq	ite	if_neg	iff.mp	not	not	not_iff_not_of_iffif_congr_prop	iff	ite	ite	if_ctx_congr_propif_ctx_simp_congr_prop	iff	ite	ite	decidable_of_decidable_of_iff	if_ctx_congr_prop	decidable_of_decidable_of_iffif_simp_congr_prop	iff	ite	ite	decidable_of_decidable_of_iff	if_ctx_simp_congr_propdif_pos	eq	dite	decidable.rec	eq	dite	eq.refl	dite	decidable.inl	absurd	eq	dite	decidable.inrdif_neg	eq	dite	decidable.rec	eq	dite	absurd	eq	dite	decidable.inl	eq.refl	dite	decidable.inrdif_ctx_congr	eq	dite	dite	decidable.rec_on	eq	dite	dite	eq.trans	dite	iff.mp	dite	eq.trans	dite	iff.mpr	iff.mp	iff.mp	eq.trans	dite	iff.mpr	iff.mp	dif_pos	eq.subst	iff.mpr	iff.mp	eq	proof_irrel	iff.mpr	iff.mp	eq.refl	iff.mp	eq.symm	dite	iff.mp	dif_pos	iff.mp	eq.trans	dite	iff.mp	not	not	not_iff_not_of_iff	dite	eq.trans	dite	iff.mpr	not	not	not_iff_not_of_iff	iff.mp	not	not	not_iff_not_of_iff	iff.mp	not	not	not_iff_not_of_iff	eq.trans	dite	iff.mpr	not	not	not_iff_not_of_iff	iff.mp	not	not	not_iff_not_of_iff	dif_neg	eq.subst	not	iff.mpr	not	not	not_iff_not_of_iff	iff.mp	not	not	not_iff_not_of_iff	eq	proof_irrel	not	iff.mpr	not	not	not_iff_not_of_iff	iff.mp	not	not	not_iff_not_of_iff	eq.refl	iff.mp	not	not	not_iff_not_of_iff	eq.symm	dite	iff.mp	not	not	not_iff_not_of_iff	dif_neg	iff.mp	not	not	not_iff_not_of_iffdif_ctx_simp_congr	eq	dite	dite	decidable_of_decidable_of_iff	dif_ctx_congr	decidable_of_decidable_of_iffdite_ite_eq	eq	dite	ite	rfl	diteis_true	ite	true	falseis_false	ite	false	trueof_is_true	decidable.rec_on	false.rec	eq.subst	ite	true	false	false	if_neg	true	falsenot_of_not_is_true	not	dite	not	absurd	true	not	trivial	eq.subst	ite	true	false	true	not	if_pos	true	falsenot_of_is_false	not	dite	not	false.rec	not	eq.subst	ite	false	true	false	if_pos	false	trueof_not_is_false	dite	absurd	true	trivial	eq.subst	ite	false	true	true	not	if_neg	false	true