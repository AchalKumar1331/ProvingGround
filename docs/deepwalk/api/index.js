Index.PACKAGES = {"ammonite" : [], "ammonite.ops" : [], "deepwalk4s" : [{"name" : "deepwalk4s.Bird2Vec", "shortDescription" : "", "object" : "deepwalk4s\/Bird2Vec$.html", "members_object" : [{"label" : "nearest", "tail" : "(vec: Word2Vec): Vector[(String, String)]", "member" : "deepwalk4s.Bird2Vec.nearest", "link" : "deepwalk4s\/Bird2Vec$.html#nearest(vec:org.deeplearning4j.models.word2vec.Word2Vec):scala.collection.immutable.Vector[(String,String)]", "kind" : "def"}, {"label" : "save", "tail" : "(vec: Word2Vec): Unit", "member" : "deepwalk4s.Bird2Vec.save", "link" : "deepwalk4s\/Bird2Vec$.html#save(vec:org.deeplearning4j.models.word2vec.Word2Vec):Unit", "kind" : "def"}, {"label" : "word2vec", "tail" : "(dim: Int, loops: Int): Word2Vec", "member" : "deepwalk4s.Bird2Vec.word2vec", "link" : "deepwalk4s\/Bird2Vec$.html#word2vec(dim:Int,loops:Int):org.deeplearning4j.models.word2vec.Word2Vec", "kind" : "def"}, {"label" : "t", "tail" : ": DefaultTokenizerFactory", "member" : "deepwalk4s.Bird2Vec.t", "link" : "deepwalk4s\/Bird2Vec$.html#t:org.deeplearning4j.text.tokenization.tokenizerfactory.DefaultTokenizerFactory", "kind" : "lazy val"}, {"label" : "iter", "tail" : ": BasicLineIterator", "member" : "deepwalk4s.Bird2Vec.iter", "link" : "deepwalk4s\/Bird2Vec$.html#iter:org.deeplearning4j.text.sentenceiterator.BasicLineIterator", "kind" : "lazy val"}, {"label" : "writeSentences", "tail" : "(numSentences: Int, length: Int): Unit", "member" : "deepwalk4s.Bird2Vec.writeSentences", "link" : "deepwalk4s\/Bird2Vec$.html#writeSentences(numSentences:Int,length:Int):Unit", "kind" : "def"}, {"label" : "bs", "tail" : ": ThisType", "member" : "deepwalk4s.Bird2Vec.bs", "link" : "deepwalk4s\/Bird2Vec$.html#bs:deepwalk4s.Bird2Vec.data.ThisType", "kind" : "val"}, {"label" : "randSentence", "tail" : "(length: Int): Vector[String]", "member" : "deepwalk4s.Bird2Vec.randSentence", "link" : "deepwalk4s\/Bird2Vec$.html#randSentence(length:Int):scala.collection.immutable.Vector[String]", "kind" : "def"}, {"label" : "rnd", "tail" : ": Random", "member" : "deepwalk4s.Bird2Vec.rnd", "link" : "deepwalk4s\/Bird2Vec$.html#rnd:scala.util.Random", "kind" : "val"}, {"label" : "commonNames", "tail" : ": Map[String, String]", "member" : "deepwalk4s.Bird2Vec.commonNames", "link" : "deepwalk4s\/Bird2Vec$.html#commonNames:scala.collection.immutable.Map[String,String]", "kind" : "val"}, {"label" : "commonPairs", "tail" : ": Vector[(String, String)]", "member" : "deepwalk4s.Bird2Vec.commonPairs", "link" : "deepwalk4s\/Bird2Vec$.html#commonPairs:Vector[(String,String)]", "kind" : "lazy val"}, {"label" : "checklists", "tail" : ": Vector[Vector[String]]", "member" : "deepwalk4s.Bird2Vec.checklists", "link" : "deepwalk4s\/Bird2Vec$.html#checklists:scala.collection.immutable.Vector[scala.collection.immutable.Vector[String]]", "kind" : "val"}, {"label" : "commonBirds", "tail" : ": Set[String]", "member" : "deepwalk4s.Bird2Vec.commonBirds", "link" : "deepwalk4s\/Bird2Vec$.html#commonBirds:scala.collection.immutable.Set[String]", "kind" : "val"}, {"label" : "birdFreqs", "tail" : ": Vector[(String, Int)]", "member" : "deepwalk4s.Bird2Vec.birdFreqs", "link" : "deepwalk4s\/Bird2Vec$.html#birdFreqs:scala.collection.immutable.Vector[(String,Int)]", "kind" : "val"}, {"label" : "freqF", "tail" : ": ThisType", "member" : "deepwalk4s.Bird2Vec.freqF", "link" : "deepwalk4s\/Bird2Vec$.html#freqF:deepwalk4s.Bird2Vec.data.ThisType", "kind" : "val"}, {"label" : "data", "tail" : ": ThisType", "member" : "deepwalk4s.Bird2Vec.data", "link" : "deepwalk4s\/Bird2Vec$.html#data:ammonite.ops.cwd.ThisType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "deepwalk4s\/Bird2Vec$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "deepwalk4s\/Bird2Vec$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "deepwalk4s\/Bird2Vec$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "deepwalk4s\/Bird2Vec$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "deepwalk4s\/Bird2Vec$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "deepwalk4s\/Bird2Vec$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "deepwalk4s\/Bird2Vec$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Bird2Vec$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Bird2Vec$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Bird2Vec$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "deepwalk4s\/Bird2Vec$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "deepwalk4s\/Bird2Vec$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "deepwalk4s\/Bird2Vec$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "deepwalk4s\/Bird2Vec$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "deepwalk4s\/Bird2Vec$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "deepwalk4s\/Bird2Vec$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "deepwalk4s\/Bird2Vec$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "deepwalk4s\/Bird2Vec$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "deepwalk4s\/Bird2Vec$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "deepwalk4s.Graph", "shortDescription" : "", "object" : "deepwalk4s\/Graph$.html", "members_object" : [{"label" : "fromLines", "tail" : "(lines: Seq[String], weight: Double, oriented: Boolean, separator: String): Graph[String]", "member" : "deepwalk4s.Graph.fromLines", "link" : "deepwalk4s\/Graph$.html#fromLines(lines:Seq[String],weight:Double,oriented:Boolean,separator:String):deepwalk4s.Graph[String]", "kind" : "def"}, {"label" : "fromSeqs", "tail" : "(ss: Seq[Seq[V]], weight: Double, oriented: Boolean): Graph[V]", "member" : "deepwalk4s.Graph.fromSeqs", "link" : "deepwalk4s\/Graph$.html#fromSeqs[V](ss:Seq[Seq[V]],weight:Double,oriented:Boolean):deepwalk4s.Graph[V]", "kind" : "def"}, {"label" : "fromMap", "tail" : "(map: Map[V, List[V]], weight: Double, oriented: Boolean): Graph[V]", "member" : "deepwalk4s.Graph.fromMap", "link" : "deepwalk4s\/Graph$.html#fromMap[V](map:Map[V,List[V]],weight:Double,oriented:Boolean):deepwalk4s.Graph[V]", "kind" : "def"}, {"label" : "IndexEdge", "tail" : "", "member" : "deepwalk4s.Graph.IndexEdge", "link" : "deepwalk4s\/Graph$.html#IndexEdgeextendsEdge[Double]withProductwithSerializable", "kind" : "case class"}, {"label" : "Edge", "tail" : "", "member" : "deepwalk4s.Graph.Edge", "link" : "deepwalk4s\/Graph$.html#Edge[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "IndexedVertex", "tail" : "", "member" : "deepwalk4s.Graph.IndexedVertex", "link" : "deepwalk4s\/Graph$.html#IndexedVertex[A]extendsVertex[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "deepwalk4s\/Graph$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "deepwalk4s\/Graph$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "deepwalk4s\/Graph$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "deepwalk4s\/Graph$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "deepwalk4s\/Graph$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "deepwalk4s\/Graph$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "deepwalk4s\/Graph$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Graph$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Graph$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Graph$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "deepwalk4s\/Graph$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "deepwalk4s\/Graph$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "deepwalk4s\/Graph$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "deepwalk4s\/Graph$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "deepwalk4s\/Graph$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "deepwalk4s\/Graph$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "deepwalk4s\/Graph$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "deepwalk4s\/Graph$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "deepwalk4s\/Graph$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "vectorRep", "tail" : "(learningRate: Double, vectorSize: Int, windowSize: Int, walkLength: Int): (V) ⇒ Vector[Double]", "member" : "deepwalk4s.Graph.vectorRep", "link" : "deepwalk4s\/Graph.html#vectorRep(learningRate:Double,vectorSize:Int,windowSize:Int,walkLength:Int):V=>Vector[Double]", "kind" : "def"}, {"label" : "getVector", "tail" : "(gv: GraphVectorsImpl[V, Double])(v: V): Vector[Double]", "member" : "deepwalk4s.Graph.getVector", "link" : "deepwalk4s\/Graph.html#getVector(gv:org.deeplearning4j.graph.models.embeddings.GraphVectorsImpl[V,Double])(v:V):Vector[Double]", "kind" : "def"}, {"label" : "graphVectors", "tail" : "(learningRate: Double, vectorSize: Int, windowSize: Int, walkLength: Int): DeepWalk[V, Double]", "member" : "deepwalk4s.Graph.graphVectors", "link" : "deepwalk4s\/Graph.html#graphVectors(learningRate:Double,vectorSize:Int,windowSize:Int,walkLength:Int):org.deeplearning4j.graph.models.deepwalk.DeepWalk[V,Double]", "kind" : "def"}, {"label" : "jGraph", "tail" : ": org.deeplearning4j.graph.graph.Graph[V, Double]", "member" : "deepwalk4s.Graph.jGraph", "link" : "deepwalk4s\/Graph.html#jGraph:org.deeplearning4j.graph.graph.Graph[V,Double]", "kind" : "val"}, {"label" : "jEdges", "tail" : ": List[IndexEdge]", "member" : "deepwalk4s.Graph.jEdges", "link" : "deepwalk4s\/Graph.html#jEdges:List[deepwalk4s.Graph.IndexEdge]", "kind" : "val"}, {"label" : "jVertices", "tail" : ": List[Vertex[V]]", "member" : "deepwalk4s.Graph.jVertices", "link" : "deepwalk4s\/Graph.html#jVertices:java.util.List[org.deeplearning4j.graph.api.Vertex[V]]", "kind" : "val"}, {"label" : "vertex", "tail" : ": Map[V, Vertex[V]]", "member" : "deepwalk4s.Graph.vertex", "link" : "deepwalk4s\/Graph.html#vertex:scala.collection.immutable.Map[V,org.deeplearning4j.graph.api.Vertex[V]]", "kind" : "val"}, {"label" : "vert", "tail" : ": Map[Int, V]", "member" : "deepwalk4s.Graph.vert", "link" : "deepwalk4s\/Graph.html#vert:scala.collection.immutable.Map[Int,V]", "kind" : "val"}, {"label" : "index", "tail" : ": Map[V, Int]", "member" : "deepwalk4s.Graph.index", "link" : "deepwalk4s\/Graph.html#index:scala.collection.immutable.Map[V,Int]", "kind" : "val"}, {"member" : "deepwalk4s.Graph#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": List[Edge[V]]", "member" : "deepwalk4s.Graph.edges", "link" : "deepwalk4s\/Graph.html#edges:List[deepwalk4s.Graph.Edge[V]]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[V]", "member" : "deepwalk4s.Graph.vertices", "link" : "deepwalk4s\/Graph.html#vertices:Set[V]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "deepwalk4s\/Graph.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "deepwalk4s\/Graph.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "deepwalk4s\/Graph.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "deepwalk4s\/Graph.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "deepwalk4s\/Graph.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "deepwalk4s\/Graph.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "deepwalk4s\/Graph.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Graph.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Graph.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/Graph.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "deepwalk4s\/Graph.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "deepwalk4s\/Graph.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "deepwalk4s\/Graph.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "deepwalk4s\/Graph.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "deepwalk4s\/Graph.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "deepwalk4s\/Graph.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "deepwalk4s\/Graph.html", "kind" : "object"}, {"name" : "deepwalk4s.SvgGraphs", "shortDescription" : "", "object" : "deepwalk4s\/SvgGraphs$.html", "members_object" : [{"label" : "scatterPlot", "tail" : "(points: Vector[(Double, Double, String)], width: Int, height: Int, r: Double, colour: String, fontSize: Int): String", "member" : "deepwalk4s.SvgGraphs.scatterPlot", "link" : "deepwalk4s\/SvgGraphs$.html#scatterPlot(points:Vector[(Double,Double,String)],width:Int,height:Int,r:Double,colour:String,fontSize:Int):String", "kind" : "def"}, {"label" : "header", "tail" : "(width: Int, height: Int): String", "member" : "deepwalk4s.SvgGraphs.header", "link" : "deepwalk4s\/SvgGraphs$.html#header(width:Int,height:Int):String", "kind" : "def"}, {"label" : "circ", "tail" : "(x: Double, y: Double, t: String, r: Double, colour: String, fontSize: Int): String", "member" : "deepwalk4s.SvgGraphs.circ", "link" : "deepwalk4s\/SvgGraphs$.html#circ(x:Double,y:Double,t:String,r:Double,colour:String,fontSize:Int):String", "kind" : "def"}, {"label" : "labelCss", "tail" : ": String", "member" : "deepwalk4s.SvgGraphs.labelCss", "link" : "deepwalk4s\/SvgGraphs$.html#labelCss:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "deepwalk4s\/SvgGraphs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "deepwalk4s\/SvgGraphs$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "deepwalk4s\/SvgGraphs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "deepwalk4s\/SvgGraphs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "deepwalk4s\/SvgGraphs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "deepwalk4s\/SvgGraphs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "deepwalk4s\/SvgGraphs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/SvgGraphs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/SvgGraphs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "deepwalk4s\/SvgGraphs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "deepwalk4s\/SvgGraphs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "deepwalk4s\/SvgGraphs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "deepwalk4s\/SvgGraphs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "deepwalk4s\/SvgGraphs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "deepwalk4s\/SvgGraphs$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "deepwalk4s\/SvgGraphs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "deepwalk4s\/SvgGraphs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "deepwalk4s\/SvgGraphs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "deepwalk4s\/SvgGraphs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};