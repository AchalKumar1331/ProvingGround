Index.PACKAGES = {"provingground" : [], "provingground.normalform" : [{"name" : "provingground.normalform.AssocRep", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "provingground\/normalform\/AssocRep.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/AssocRep.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AssocRep[A]) ⇒ Boolean, msg: ⇒ Any): AssocRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/AssocRep.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AssocRep[A]) ⇒ Boolean): AssocRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/AssocRep.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): AssocRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/AssocRep.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AssocRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/AssocRep.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AssocRep[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/AssocRep.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AssocRep[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/AssocRep.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toAssocRep", "tail" : "(): AssocRep[A]", "member" : "provingground.normalform.AssocRep.toAssocRep", "link" : "provingground\/normalform\/AssocRep.html#toAssocRep():provingground.normalform.AssocRep[A]", "kind" : "implicit def"}, {"label" : "toCommRep", "tail" : "(): CommRep[A]", "member" : "provingground.normalform.AssocRep.toCommRep", "link" : "provingground\/normalform\/AssocRep.html#toCommRep():provingground.normalform.CommRep[A]", "kind" : "implicit def"}, {"label" : "head", "tail" : "(): A", "member" : "provingground.normalform.AssocRep.head", "link" : "provingground\/normalform\/AssocRep.html#head():A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "provingground.normalform.AssocRep.length", "link" : "provingground\/normalform\/AssocRep.html#length():Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "provingground.normalform.AssocRep.isEmpty", "link" : "provingground\/normalform\/AssocRep.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "combine", "tail" : "(that: Representation[A]): Representation[A]", "member" : "provingground.normalform.AssocRep.combine", "link" : "provingground\/normalform\/AssocRep.html#combine(that:provingground.normalform.Representation[A]):provingground.normalform.Representation[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A, A) ⇒ A): A", "member" : "provingground.normalform.AssocRep.reduce", "link" : "provingground\/normalform\/AssocRep.html#reduce(op:(A,A)=>A):A", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (A) ⇒ Boolean): AssocRep[A]", "member" : "provingground.normalform.AssocRep.filter", "link" : "provingground\/normalform\/AssocRep.html#filter(pred:A=>Boolean):provingground.normalform.AssocRep[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): AssocRep[B]", "member" : "provingground.normalform.AssocRep.map", "link" : "provingground\/normalform\/AssocRep.html#map[B](f:A=>B):provingground.normalform.AssocRep[B]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "provingground.normalform.AssocRep.toString", "link" : "provingground\/normalform\/AssocRep.html#toString():String", "kind" : "def"}, {"member" : "provingground.normalform.AssocRep#<init>", "error" : "unsupported entity"}, {"label" : "representation", "tail" : ": List[A]", "member" : "provingground.normalform.AssocRep.representation", "link" : "provingground\/normalform\/AssocRep.html#representation:List[A]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/AssocRep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/AssocRep.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/AssocRep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/AssocRep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/AssocRep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/AssocRep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/AssocRep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/AssocRep.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/AssocRep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/AssocRep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/AssocRep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/AssocRep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/AssocRep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/AssocRep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/AssocRep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/AssocRep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "provingground\/normalform\/AssocRep.html", "kind" : "case class"}, {"name" : "provingground.normalform.BigOp", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/BigOp.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigOp) ⇒ Boolean, msg: ⇒ Any): BigOp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/BigOp.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (BigOp) ⇒ Boolean): BigOp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/BigOp.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): BigOp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/BigOp.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): BigOp", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/BigOp.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (BigOp, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/BigOp.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (BigOp, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/BigOp.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/BigOp.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/BigOp.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/BigOp.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/BigOp.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/BigOp.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/BigOp.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/BigOp.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/BigOp.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/BigOp.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/BigOp.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/BigOp.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/BigOp.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "provingground\/normalform\/BigOp.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/BigOp.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "provingground\/normalform\/BigOp.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "provingground\/normalform\/BigOp.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/BigOp.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/BigOp.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/BigOp.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "*", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Term.*", "link" : "provingground\/normalform\/BigOp.html#*(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "abstract def"}, {"label" : "+", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Term.+", "link" : "provingground\/normalform\/BigOp.html#+(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "abstract def"}, {"label" : "fullReduce", "tail" : "(): Term", "member" : "provingground.normalform.Term.fullReduce", "link" : "provingground\/normalform\/BigOp.html#fullReduce():provingground.normalform.Term", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "provingground\/normalform\/BigOp.html", "kind" : "trait"}, {"name" : "provingground.normalform.CommRep", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "provingground\/normalform\/CommRep.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/CommRep.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CommRep[A]) ⇒ Boolean, msg: ⇒ Any): CommRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/CommRep.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (CommRep[A]) ⇒ Boolean): CommRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/CommRep.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): CommRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/CommRep.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): CommRep[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/CommRep.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (CommRep[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/CommRep.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (CommRep[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/CommRep.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toAssocRep", "tail" : "(): AssocRep[A]", "member" : "provingground.normalform.CommRep.toAssocRep", "link" : "provingground\/normalform\/CommRep.html#toAssocRep():provingground.normalform.AssocRep[A]", "kind" : "implicit def"}, {"label" : "toCommRep", "tail" : "(): CommRep[A]", "member" : "provingground.normalform.CommRep.toCommRep", "link" : "provingground\/normalform\/CommRep.html#toCommRep():provingground.normalform.CommRep[A]", "kind" : "implicit def"}, {"label" : "head", "tail" : "(): A", "member" : "provingground.normalform.CommRep.head", "link" : "provingground\/normalform\/CommRep.html#head():A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "provingground.normalform.CommRep.length", "link" : "provingground\/normalform\/CommRep.html#length():Int", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "provingground.normalform.CommRep.isEmpty", "link" : "provingground\/normalform\/CommRep.html#isEmpty():Boolean", "kind" : "def"}, {"label" : "combine", "tail" : "(that: Representation[A]): Representation[A]", "member" : "provingground.normalform.CommRep.combine", "link" : "provingground\/normalform\/CommRep.html#combine(that:provingground.normalform.Representation[A]):provingground.normalform.Representation[A]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A, A) ⇒ A): A", "member" : "provingground.normalform.CommRep.reduce", "link" : "provingground\/normalform\/CommRep.html#reduce(op:(A,A)=>A):A", "kind" : "def"}, {"label" : "filter", "tail" : "(pred: (A) ⇒ Boolean): CommRep[A]", "member" : "provingground.normalform.CommRep.filter", "link" : "provingground\/normalform\/CommRep.html#filter(pred:A=>Boolean):provingground.normalform.CommRep[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): CommRep[B]", "member" : "provingground.normalform.CommRep.map", "link" : "provingground\/normalform\/CommRep.html#map[B](f:A=>B):provingground.normalform.CommRep[B]", "kind" : "def"}, {"label" : "toList", "tail" : "(rep: Map[A, Int]): List[A]", "member" : "provingground.normalform.CommRep.toList", "link" : "provingground\/normalform\/CommRep.html#toList(rep:Map[A,Int]):List[A]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "provingground.normalform.CommRep.toString", "link" : "provingground\/normalform\/CommRep.html#toString():String", "kind" : "def"}, {"label" : "listRep", "tail" : ": List[A]", "member" : "provingground.normalform.CommRep.listRep", "link" : "provingground\/normalform\/CommRep.html#listRep:List[A]", "kind" : "val"}, {"member" : "provingground.normalform.CommRep#<init>", "error" : "unsupported entity"}, {"label" : "representation", "tail" : ": Map[A, Int]", "member" : "provingground.normalform.CommRep.representation", "link" : "provingground\/normalform\/CommRep.html#representation:Map[A,Int]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/CommRep.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/CommRep.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/CommRep.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/CommRep.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/CommRep.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/CommRep.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/CommRep.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/CommRep.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/CommRep.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/CommRep.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/CommRep.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/CommRep.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/CommRep.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/CommRep.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/CommRep.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/CommRep.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "provingground\/normalform\/CommRep.html", "kind" : "case class"}, {"name" : "provingground.normalform.NormalForm", "shortDescription" : "", "object" : "provingground\/normalform\/NormalForm$.html", "members_object" : [{"label" : "semiReduce", "tail" : "(term: Term): Term", "member" : "provingground.normalform.NormalForm.semiReduce", "link" : "provingground\/normalform\/NormalForm$.html#semiReduce(term:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "assocReduce", "tail" : "(op: (Term, Term) ⇒ Term, rep: AssocRep[Term]): AssocRep[Term]", "member" : "provingground.normalform.NormalForm.assocReduce", "link" : "provingground\/normalform\/NormalForm$.html#assocReduce(op:(provingground.normalform.Term,provingground.normalform.Term)=>provingground.normalform.Term,rep:provingground.normalform.AssocRep[provingground.normalform.Term]):provingground.normalform.AssocRep[provingground.normalform.Term]", "kind" : "def"}, {"label" : "commReduce", "tail" : "(op: (Term, Term) ⇒ Term, rep: CommRep[Term]): CommRep[Term]", "member" : "provingground.normalform.NormalForm.commReduce", "link" : "provingground\/normalform\/NormalForm$.html#commReduce(op:(provingground.normalform.Term,provingground.normalform.Term)=>provingground.normalform.Term,rep:provingground.normalform.CommRep[provingground.normalform.Term]):provingground.normalform.CommRep[provingground.normalform.Term]", "kind" : "def"}, {"label" : "clumpTerms", "tail" : "(list: List[A], pred: (A) ⇒ Boolean): List[List[A]]", "member" : "provingground.normalform.NormalForm.clumpTerms", "link" : "provingground\/normalform\/NormalForm$.html#clumpTerms[A](list:List[A],pred:A=>Boolean):List[List[A]]", "kind" : "def"}, {"label" : "numTermMatch", "tail" : "(term: Term): Boolean", "member" : "provingground.normalform.NormalForm.numTermMatch", "link" : "provingground\/normalform\/NormalForm$.html#numTermMatch(term:provingground.normalform.Term):Boolean", "kind" : "def"}, {"label" : "mulOp", "tail" : "(x: Term, y: Term): Term", "member" : "provingground.normalform.NormalForm.mulOp", "link" : "provingground\/normalform\/NormalForm$.html#mulOp(x:provingground.normalform.Term,y:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "addOp", "tail" : "(x: Term, y: Term): Term", "member" : "provingground.normalform.NormalForm.addOp", "link" : "provingground\/normalform\/NormalForm$.html#addOp(x:provingground.normalform.Term,y:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "AssocTerm", "tail" : "(representation: List[Term]): AssocTerm", "member" : "provingground.normalform.NormalForm.AssocTerm", "link" : "provingground\/normalform\/NormalForm$.html#AssocTerm(representation:List[provingground.normalform.Term]):provingground.normalform.NormalForm.AssocTerm", "kind" : "def"}, {"label" : "AssocTerm", "tail" : "", "member" : "provingground.normalform.NormalForm.AssocTerm", "link" : "provingground\/normalform\/NormalForm$.html#AssocTerm=provingground.normalform.AssocRep[provingground.normalform.Term]", "kind" : "type"}, {"label" : "CommTerm", "tail" : "(representation: Map[Term, Int]): CommTerm", "member" : "provingground.normalform.NormalForm.CommTerm", "link" : "provingground\/normalform\/NormalForm$.html#CommTerm(representation:Map[provingground.normalform.Term,Int]):provingground.normalform.NormalForm.CommTerm", "kind" : "def"}, {"label" : "CommTerm", "tail" : "", "member" : "provingground.normalform.NormalForm.CommTerm", "link" : "provingground\/normalform\/NormalForm$.html#CommTerm=provingground.normalform.CommRep[provingground.normalform.Term]", "kind" : "type"}, {"label" : "toPi", "tail" : "(term: Term): Pi", "member" : "provingground.normalform.NormalForm.toPi", "link" : "provingground\/normalform\/NormalForm$.html#toPi(term:provingground.normalform.Term):provingground.normalform.Pi", "kind" : "implicit def"}, {"label" : "toSigma", "tail" : "(term: Term): Sigma", "member" : "provingground.normalform.NormalForm.toSigma", "link" : "provingground\/normalform\/NormalForm$.html#toSigma(term:provingground.normalform.Term):provingground.normalform.Sigma", "kind" : "implicit def"}, {"label" : "convertToRep", "tail" : "(obj: A): Representation[A]", "member" : "provingground.normalform.NormalForm.convertToRep", "link" : "provingground\/normalform\/NormalForm$.html#convertToRep[A](obj:A):provingground.normalform.Representation[A]", "kind" : "implicit def"}, {"label" : "listToMap", "tail" : "(list: List[B]): Map[B, Int]", "member" : "provingground.normalform.NormalForm.listToMap", "link" : "provingground\/normalform\/NormalForm$.html#listToMap[B](list:List[B]):Map[B,Int]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/NormalForm$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/NormalForm$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/NormalForm$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/NormalForm$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/NormalForm$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/NormalForm$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/NormalForm$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/NormalForm$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/NormalForm$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/NormalForm$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/NormalForm$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/NormalForm$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "provingground\/normalform\/NormalForm$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/NormalForm$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "provingground\/normalform\/NormalForm$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "provingground\/normalform\/NormalForm$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/NormalForm$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/NormalForm$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/NormalForm$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "provingground.normalform.NumTerm", "shortDescription" : "", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/NumTerm.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NumTerm) ⇒ Boolean, msg: ⇒ Any): NumTerm", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/NumTerm.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (NumTerm) ⇒ Boolean): NumTerm", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/NumTerm.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): NumTerm", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/NumTerm.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): NumTerm", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/NumTerm.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (NumTerm, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/NumTerm.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (NumTerm, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/NumTerm.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "*", "tail" : "(that: Term): Term", "member" : "provingground.normalform.NumTerm.*", "link" : "provingground\/normalform\/NumTerm.html#*(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "+", "tail" : "(that: Term): Term", "member" : "provingground.normalform.NumTerm.+", "link" : "provingground\/normalform\/NumTerm.html#+(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "fullReduce", "tail" : "(): NumTerm", "member" : "provingground.normalform.NumTerm.fullReduce", "link" : "provingground\/normalform\/NumTerm.html#fullReduce():provingground.normalform.NumTerm", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "provingground.normalform.NumTerm.toString", "link" : "provingground\/normalform\/NumTerm.html#toString():String", "kind" : "def"}, {"member" : "provingground.normalform.NumTerm#<init>", "error" : "unsupported entity"}, {"label" : "num", "tail" : ": Number", "member" : "provingground.normalform.NumTerm.num", "link" : "provingground\/normalform\/NumTerm.html#num:spire.math.Number", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/NumTerm.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/NumTerm.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/NumTerm.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/NumTerm.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/NumTerm.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/NumTerm.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/NumTerm.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/NumTerm.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/NumTerm.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/NumTerm.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/NumTerm.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/NumTerm.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/NumTerm.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/NumTerm.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/NumTerm.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/NumTerm.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "provingground\/normalform\/NumTerm.html", "kind" : "case class"}, {"name" : "provingground.normalform.Pi", "shortDescription" : "", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/Pi.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Pi) ⇒ Boolean, msg: ⇒ Any): Pi", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Pi.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Pi) ⇒ Boolean): Pi", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Pi.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Pi", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Pi.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Pi", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Pi.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Pi, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/Pi.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Pi, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/Pi.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "*", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Pi.*", "link" : "provingground\/normalform\/Pi.html#*(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "+", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Pi.+", "link" : "provingground\/normalform\/Pi.html#+(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "fullReduce", "tail" : "(): Term", "member" : "provingground.normalform.Pi.fullReduce", "link" : "provingground\/normalform\/Pi.html#fullReduce():provingground.normalform.Term", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "provingground.normalform.Pi.toString", "link" : "provingground\/normalform\/Pi.html#toString():String", "kind" : "def"}, {"member" : "provingground.normalform.Pi#<init>", "error" : "unsupported entity"}, {"label" : "representation", "tail" : ": Representation[Term]", "member" : "provingground.normalform.Pi.representation", "link" : "provingground\/normalform\/Pi.html#representation:provingground.normalform.Representation[provingground.normalform.Term]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/Pi.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/Pi.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/Pi.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/Pi.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/Pi.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/Pi.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/Pi.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Pi.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Pi.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Pi.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/Pi.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/Pi.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/Pi.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/Pi.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/Pi.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/Pi.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "provingground\/normalform\/Pi.html", "kind" : "case class"}, {"name" : "provingground.normalform.Representation", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "provingground\/normalform\/Representation.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/Representation.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Representation[A]) ⇒ Boolean, msg: ⇒ Any): Representation[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Representation.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Representation[A]) ⇒ Boolean): Representation[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Representation.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Representation[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Representation.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Representation[A]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Representation.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Representation[A], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/Representation.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Representation[A], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/Representation.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/Representation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/Representation.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/Representation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/Representation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/Representation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/Representation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/Representation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Representation.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Representation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Representation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/Representation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/Representation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "provingground\/normalform\/Representation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/Representation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "provingground\/normalform\/Representation.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "provingground\/normalform\/Representation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/Representation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/Representation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/Representation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toAssocRep", "tail" : "(): AssocRep[A]", "member" : "provingground.normalform.Representation.toAssocRep", "link" : "provingground\/normalform\/Representation.html#toAssocRep():provingground.normalform.AssocRep[A]", "kind" : "implicit abstract def"}, {"label" : "toCommRep", "tail" : "(): CommRep[A]", "member" : "provingground.normalform.Representation.toCommRep", "link" : "provingground\/normalform\/Representation.html#toCommRep():provingground.normalform.CommRep[A]", "kind" : "implicit abstract def"}, {"label" : "head", "tail" : "(): A", "member" : "provingground.normalform.Representation.head", "link" : "provingground\/normalform\/Representation.html#head():A", "kind" : "abstract def"}, {"label" : "length", "tail" : "(): Int", "member" : "provingground.normalform.Representation.length", "link" : "provingground\/normalform\/Representation.html#length():Int", "kind" : "abstract def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "provingground.normalform.Representation.isEmpty", "link" : "provingground\/normalform\/Representation.html#isEmpty():Boolean", "kind" : "abstract def"}, {"label" : "combine", "tail" : "(that: Representation[A]): Representation[A]", "member" : "provingground.normalform.Representation.combine", "link" : "provingground\/normalform\/Representation.html#combine(that:provingground.normalform.Representation[A]):provingground.normalform.Representation[A]", "kind" : "abstract def"}, {"label" : "reduce", "tail" : "(op: (A, A) ⇒ A): A", "member" : "provingground.normalform.Representation.reduce", "link" : "provingground\/normalform\/Representation.html#reduce(op:(A,A)=>A):A", "kind" : "abstract def"}, {"label" : "filter", "tail" : "(pred: (A) ⇒ Boolean): Representation[A]", "member" : "provingground.normalform.Representation.filter", "link" : "provingground\/normalform\/Representation.html#filter(pred:A=>Boolean):provingground.normalform.Representation[A]", "kind" : "abstract def"}, {"label" : "map", "tail" : "(f: (A) ⇒ B): Representation[B]", "member" : "provingground.normalform.Representation.map", "link" : "provingground\/normalform\/Representation.html#map[B](f:A=>B):provingground.normalform.Representation[B]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "provingground\/normalform\/Representation.html", "kind" : "trait"}, {"name" : "provingground.normalform.Sigma", "shortDescription" : "", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/Sigma.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sigma) ⇒ Boolean, msg: ⇒ Any): Sigma", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Sigma.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Sigma) ⇒ Boolean): Sigma", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Sigma.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Sigma", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Sigma.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Sigma", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Sigma.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Sigma, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/Sigma.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Sigma, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/Sigma.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "*", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Sigma.*", "link" : "provingground\/normalform\/Sigma.html#*(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "+", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Sigma.+", "link" : "provingground\/normalform\/Sigma.html#+(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "fullReduce", "tail" : "(): Term", "member" : "provingground.normalform.Sigma.fullReduce", "link" : "provingground\/normalform\/Sigma.html#fullReduce():provingground.normalform.Term", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "provingground.normalform.Sigma.toString", "link" : "provingground\/normalform\/Sigma.html#toString():String", "kind" : "def"}, {"member" : "provingground.normalform.Sigma#<init>", "error" : "unsupported entity"}, {"label" : "representation", "tail" : ": Representation[Term]", "member" : "provingground.normalform.Sigma.representation", "link" : "provingground\/normalform\/Sigma.html#representation:provingground.normalform.Representation[provingground.normalform.Term]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/Sigma.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/Sigma.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/Sigma.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/Sigma.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/Sigma.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/Sigma.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/Sigma.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Sigma.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Sigma.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Sigma.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/Sigma.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/Sigma.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/Sigma.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/Sigma.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/Sigma.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/Sigma.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "provingground\/normalform\/Sigma.html", "kind" : "case class"}, {"name" : "provingground.normalform.Term", "members_trait" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/Term.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Term) ⇒ Boolean, msg: ⇒ Any): Term", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Term.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Term) ⇒ Boolean): Term", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Term.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Term", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Term.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Term", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Term.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Term, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/Term.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Term, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/Term.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/Term.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/Term.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/Term.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/Term.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/Term.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/Term.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/Term.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Term.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Term.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Term.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/Term.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/Term.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "provingground\/normalform\/Term.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/Term.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "provingground\/normalform\/Term.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "provingground\/normalform\/Term.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/Term.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/Term.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/Term.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "*", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Term.*", "link" : "provingground\/normalform\/Term.html#*(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "abstract def"}, {"label" : "+", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Term.+", "link" : "provingground\/normalform\/Term.html#+(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "abstract def"}, {"label" : "fullReduce", "tail" : "(): Term", "member" : "provingground.normalform.Term.fullReduce", "link" : "provingground\/normalform\/Term.html#fullReduce():provingground.normalform.Term", "kind" : "abstract def"}], "shortDescription" : "A trait encompassing all terms.", "trait" : "provingground\/normalform\/Term.html", "kind" : "trait"}, {"name" : "provingground.normalform.Variable", "shortDescription" : "", "members_case class" : [{"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "provingground\/normalform\/Variable.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Variable) ⇒ Boolean, msg: ⇒ Any): Variable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Variable.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Variable) ⇒ Boolean): Variable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Variable.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Variable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Variable.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Variable", "member" : "scala.Predef.Ensuring.ensuring", "link" : "provingground\/normalform\/Variable.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Variable, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "provingground\/normalform\/Variable.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Variable, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "provingground\/normalform\/Variable.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "*", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Variable.*", "link" : "provingground\/normalform\/Variable.html#*(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "+", "tail" : "(that: Term): Term", "member" : "provingground.normalform.Variable.+", "link" : "provingground\/normalform\/Variable.html#+(that:provingground.normalform.Term):provingground.normalform.Term", "kind" : "def"}, {"label" : "fullReduce", "tail" : "(): Variable", "member" : "provingground.normalform.Variable.fullReduce", "link" : "provingground\/normalform\/Variable.html#fullReduce():provingground.normalform.Variable", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "provingground.normalform.Variable.toString", "link" : "provingground\/normalform\/Variable.html#toString():String", "kind" : "def"}, {"member" : "provingground.normalform.Variable#<init>", "error" : "unsupported entity"}, {"label" : "symbol", "tail" : ": String", "member" : "provingground.normalform.Variable.symbol", "link" : "provingground\/normalform\/Variable.html#symbol:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "provingground\/normalform\/Variable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "provingground\/normalform\/Variable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "provingground\/normalform\/Variable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "provingground\/normalform\/Variable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "provingground\/normalform\/Variable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "provingground\/normalform\/Variable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "provingground\/normalform\/Variable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Variable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Variable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "provingground\/normalform\/Variable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "provingground\/normalform\/Variable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "provingground\/normalform\/Variable.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "provingground\/normalform\/Variable.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "provingground\/normalform\/Variable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "provingground\/normalform\/Variable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "provingground\/normalform\/Variable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "provingground\/normalform\/Variable.html", "kind" : "case class"}]};